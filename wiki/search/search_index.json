{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Index","text":""},{"location":"#hello-world-im-mek","title":"Hello World, Im Mek.","text":"<p>This wiki is a collection of my personal notes, tutorials, and projects. One of the goals in establishing this wiki is to document the projects I am currently undertaking or researching.</p> <p>Not only that, but you can also find various programming tutorials, both basic and advanced, on this wiki. The next step is to visit the Table of Content to see the list of available articles.</p> <p>All resources you access on this wiki are free and open source. Provide feedback to me in developing this wiki. Visit the Table of Content to see the list of available articles. Some articles are quite useful,</p> <p>Go to see list of Table of Content.</p>"},{"location":"#interesting-article","title":"Interesting article","text":"DevOps Containerization <p>Docker Fundamentals: Essential Basics Every Developer Should Know</p> <p>Build, ship, and run anything, anywhere\u2014discover the power of Docker fundamentals.</p> <p> Getting Started</p> <p></p> Programming .NET Backend <p>Getting Started with C# and .NET: Fundamentals Made Easy</p> <p>Understand key concepts and workflows in .NET C# to build a solid programming foundation.</p> <p> Getting started</p> <p></p> Linux Operating System Terminal <p>Ubuntu 101 Unlocked: Master the Basics Like a Professional</p> <p>Learn the key tricks and tools that make Ubuntu a powerhouse for your workflow.</p> <p> Getting started</p>"},{"location":"category-programming/","title":"Programming","text":""},{"location":"category-programming/#programming_1","title":"Programming","text":""},{"location":"category-programming/#programming_2","title":"Programming","text":"<p>dsah</p>"},{"location":"content-list/","title":"Content List","text":"<ul> <li>Cheat Sheets</li> <li>Content List</li> <li>C# Basic</li> <li>C# Threading</li> <li>C#</li> <li>Dicoding Machine Learning</li> <li>Docker</li> <li>.Net Basic Api Gateway Endpoint</li> <li>.Net Cheatsheet</li> <li>.Net Class Objects</li> <li>.Net Clean Architecture</li> <li>.Net Logging Tutorial</li> <li>.Net Microservices</li> <li>.Net Nuget</li> <li>.Net Package</li> <li>.Net Ping Pong Api</li> <li>.Net Project Creation</li> <li>.Net Starter</li> <li>.Net Webapi</li> <li>.Net</li> <li>Github</li> <li>Golang Microservices</li> <li>Index</li> <li>Kubernetes Deploy Application</li> <li>Kubernetes Installation</li> <li>Kubernetes Start Locally Windows</li> <li>Material Mkdocs Yml</li> <li>Mysql</li> <li>Postgresql</li> <li>Programming Language</li> <li>Python</li> <li>Tips And Tricks</li> <li>Ubuntu</li> <li>Underrated Tools</li> <li>When You Bored</li> <li>Wsl</li> </ul>"},{"location":"csharp-basics/","title":"Getting to Know C# Programming Language","text":""},{"location":"csharp-basics/#what-is-c","title":"What is C#?","text":"<p>C# (pronounced \"C-Sharp\") is a modern, object-oriented programming language developed by Microsoft. It's designed to be simple, powerful, and type-safe, making it ideal for building various types of applications on the .NET platform.</p>"},{"location":"csharp-basics/#c-language-features","title":"C# Language Features","text":""},{"location":"csharp-basics/#modern-language-design","title":"Modern Language Design","text":"<pre><code>// Modern C# syntax examples\nvar greeting = \"Hello, World!\";\nvar numbers = new List&lt;int&gt; { 1, 2, 3, 4, 5 };\nvar person = new { Name = \"John\", Age = 30 };\n\n// Null-conditional operators\nstring result = person?.Name?.ToUpper();\n\n// String interpolation\nConsole.WriteLine($\"Hello, {person.Name}!\");\n</code></pre>"},{"location":"csharp-basics/#c-language-evolution","title":"C# Language Evolution","text":"<pre><code>timeline\n    title C# Version History\n    2000 : C# 1.0\n         : Basic OOP Features\n    2005 : C# 2.0\n         : Generics, Nullable Types\n    2007 : C# 3.0\n         : LINQ, Lambda Expressions\n    2010 : C# 4.0\n         : Dynamic Typing, Optional Parameters\n    2012 : C# 5.0\n         : Async/Await\n    2015 : C# 6.0\n         : String Interpolation, Null-conditional\n    2017 : C# 7.0\n         : Tuples, Pattern Matching\n    2019 : C# 8.0\n         : Nullable Reference Types\n    2020 : C# 9.0\n         : Records, Init-only Properties\n    2021 : C# 10.0\n         : Global Using, File-scoped Namespaces\n    2022 : C# 11.0\n         : Raw String Literals, Pattern Matching\n    2023 : C# 12.0\n         : Primary Constructors, Collection Expressions\n</code></pre>"},{"location":"csharp-basics/#basic-syntax-and-structure","title":"Basic Syntax and Structure","text":""},{"location":"csharp-basics/#hello-world-program","title":"Hello World Program","text":"<pre><code>// Traditional approach\nusing System;\n\nnamespace HelloWorld\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello, World!\");\n        }\n    }\n}\n\n// Modern approach (C# 9.0+)\nusing System;\n\nConsole.WriteLine(\"Hello, World!\");\n</code></pre>"},{"location":"csharp-basics/#variables-and-data-types","title":"Variables and Data Types","text":"<pre><code>// Value types\nint age = 25;\ndouble price = 99.99;\nbool isActive = true;\nchar initial = 'A';\ndecimal salary = 50000.00m;\n\n// Reference types\nstring name = \"John Doe\";\nobject data = new { Id = 1, Name = \"Product\" };\n\n// Nullable types\nint? optionalNumber = null;\nstring? optionalText = null;\n\n// Implicitly typed variables\nvar number = 42;           // int\nvar text = \"Hello\";        // string\nvar list = new List&lt;int&gt;(); // List&lt;int&gt;\n</code></pre>"},{"location":"csharp-basics/#constants-and-readonly","title":"Constants and Readonly","text":"<pre><code>// Constants (compile-time)\nconst int MAX_SIZE = 100;\nconst string COMPANY_NAME = \"TechCorp\";\n\n// Readonly (runtime)\nreadonly DateTime createdAt = DateTime.Now;\n\npublic class Configuration\n{\n    public static readonly string ConnectionString = \n        Environment.GetEnvironmentVariable(\"DB_CONNECTION\");\n}\n</code></pre>"},{"location":"csharp-basics/#object-oriented-programming","title":"Object-Oriented Programming","text":""},{"location":"csharp-basics/#classes-and-objects","title":"Classes and Objects","text":"<pre><code>// Class definition\npublic class Person\n{\n    // Fields\n    private string _firstName;\n    private string _lastName;\n\n    // Properties\n    public string FirstName \n    { \n        get =&gt; _firstName; \n        set =&gt; _firstName = value?.Trim(); \n    }\n\n    public string LastName \n    { \n        get =&gt; _lastName; \n        set =&gt; _lastName = value?.Trim(); \n    }\n\n    // Auto-implemented property\n    public int Age { get; set; }\n\n    // Read-only property\n    public string FullName =&gt; $\"{FirstName} {LastName}\";\n\n    // Constructor\n    public Person(string firstName, string lastName, int age)\n    {\n        FirstName = firstName;\n        LastName = lastName;\n        Age = age;\n    }\n\n    // Methods\n    public void Introduce()\n    {\n        Console.WriteLine($\"Hi, I'm {FullName} and I'm {Age} years old.\");\n    }\n\n    public bool IsAdult() =&gt; Age &gt;= 18;\n}\n\n// Using the class\nvar person = new Person(\"John\", \"Doe\", 30);\nperson.Introduce();\nConsole.WriteLine($\"Is adult: {person.IsAdult()}\");\n</code></pre>"},{"location":"csharp-basics/#inheritance","title":"Inheritance","text":"<pre><code>// Base class\npublic class Animal\n{\n    public string Name { get; set; }\n    public int Age { get; set; }\n\n    public virtual void MakeSound()\n    {\n        Console.WriteLine(\"The animal makes a sound\");\n    }\n\n    public virtual void Move()\n    {\n        Console.WriteLine(\"The animal moves\");\n    }\n}\n\n// Derived class\npublic class Dog : Animal\n{\n    public string Breed { get; set; }\n\n    public override void MakeSound()\n    {\n        Console.WriteLine($\"{Name} barks: Woof! Woof!\");\n    }\n\n    public override void Move()\n    {\n        Console.WriteLine($\"{Name} runs around\");\n    }\n\n    public void Fetch()\n    {\n        Console.WriteLine($\"{Name} fetches the ball\");\n    }\n}\n\n// Usage\nvar dog = new Dog \n{ \n    Name = \"Buddy\", \n    Age = 3, \n    Breed = \"Golden Retriever\" \n};\n\ndog.MakeSound(); // Buddy barks: Woof! Woof!\ndog.Move();      // Buddy runs around\ndog.Fetch();     // Buddy fetches the ball\n</code></pre>"},{"location":"csharp-basics/#interfaces","title":"Interfaces","text":"<pre><code>// Interface definition\npublic interface IShape\n{\n    double Area { get; }\n    double Perimeter { get; }\n    void Draw();\n}\n\n// Interface implementation\npublic class Rectangle : IShape\n{\n    public double Width { get; set; }\n    public double Height { get; set; }\n\n    public double Area =&gt; Width * Height;\n    public double Perimeter =&gt; 2 * (Width + Height);\n\n    public void Draw()\n    {\n        Console.WriteLine($\"Drawing rectangle: {Width}x{Height}\");\n    }\n}\n\npublic class Circle : IShape\n{\n    public double Radius { get; set; }\n\n    public double Area =&gt; Math.PI * Radius * Radius;\n    public double Perimeter =&gt; 2 * Math.PI * Radius;\n\n    public void Draw()\n    {\n        Console.WriteLine($\"Drawing circle with radius: {Radius}\");\n    }\n}\n\n// Using interfaces\nList&lt;IShape&gt; shapes = new List&lt;IShape&gt;\n{\n    new Rectangle { Width = 10, Height = 5 },\n    new Circle { Radius = 3 }\n};\n\nforeach (IShape shape in shapes)\n{\n    shape.Draw();\n    Console.WriteLine($\"Area: {shape.Area:F2}\");\n}\n</code></pre>"},{"location":"csharp-basics/#collections-and-generics","title":"Collections and Generics","text":""},{"location":"csharp-basics/#common-collections","title":"Common Collections","text":"<pre><code>// Arrays\nint[] numbers = { 1, 2, 3, 4, 5 };\nstring[] names = new string[3] { \"John\", \"Jane\", \"Bob\" };\n\n// Lists\nList&lt;string&gt; fruits = new List&lt;string&gt; { \"Apple\", \"Banana\", \"Orange\" };\nfruits.Add(\"Grape\");\nfruits.Remove(\"Banana\");\n\n// Dictionaries\nDictionary&lt;string, int&gt; ages = new Dictionary&lt;string, int&gt;\n{\n    [\"John\"] = 30,\n    [\"Jane\"] = 25,\n    [\"Bob\"] = 35\n};\n\n// HashSet (unique values)\nHashSet&lt;string&gt; uniqueNames = new HashSet&lt;string&gt; { \"John\", \"Jane\", \"John\" };\n// uniqueNames contains only \"John\" and \"Jane\"\n\n// Queue (FIFO)\nQueue&lt;string&gt; taskQueue = new Queue&lt;string&gt;();\ntaskQueue.Enqueue(\"Task 1\");\ntaskQueue.Enqueue(\"Task 2\");\nstring nextTask = taskQueue.Dequeue(); // \"Task 1\"\n\n// Stack (LIFO)\nStack&lt;string&gt; history = new Stack&lt;string&gt;();\nhistory.Push(\"Page 1\");\nhistory.Push(\"Page 2\");\nstring currentPage = history.Pop(); // \"Page 2\"\n</code></pre>"},{"location":"csharp-basics/#linq-language-integrated-query","title":"LINQ (Language Integrated Query)","text":"<pre><code>List&lt;Person&gt; people = new List&lt;Person&gt;\n{\n    new Person(\"John\", \"Doe\", 30),\n    new Person(\"Jane\", \"Smith\", 25),\n    new Person(\"Bob\", \"Johnson\", 35),\n    new Person(\"Alice\", \"Brown\", 28)\n};\n\n// LINQ query syntax\nvar adults = from person in people\n             where person.Age &gt;= 30\n             orderby person.Age\n             select person;\n\n// LINQ method syntax\nvar youngAdults = people\n    .Where(p =&gt; p.Age &gt;= 25 &amp;&amp; p.Age &lt; 30)\n    .OrderBy(p =&gt; p.LastName)\n    .Select(p =&gt; new { p.FullName, p.Age })\n    .ToList();\n\n// Common LINQ operations\nvar averageAge = people.Average(p =&gt; p.Age);\nvar oldestPerson = people.OrderByDescending(p =&gt; p.Age).First();\nvar namesList = people.Select(p =&gt; p.FullName).ToList();\nvar groupsByAge = people.GroupBy(p =&gt; p.Age &gt;= 30 ? \"Adult\" : \"Young\");\n</code></pre>"},{"location":"csharp-basics/#exception-handling","title":"Exception Handling","text":"<pre><code>public class FileProcessor\n{\n    public string ReadFile(string filePath)\n    {\n        try\n        {\n            // Attempt to read file\n            return File.ReadAllText(filePath);\n        }\n        catch (FileNotFoundException ex)\n        {\n            Console.WriteLine($\"File not found: {ex.Message}\");\n            throw; // Re-throw to let caller handle\n        }\n        catch (UnauthorizedAccessException ex)\n        {\n            Console.WriteLine($\"Access denied: {ex.Message}\");\n            return string.Empty;\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine($\"Unexpected error: {ex.Message}\");\n            throw new InvalidOperationException(\"Failed to read file\", ex);\n        }\n        finally\n        {\n            // Cleanup code (always executes)\n            Console.WriteLine(\"File operation completed\");\n        }\n    }\n}\n\n// Custom exception\npublic class InvalidAgeException : Exception\n{\n    public InvalidAgeException(int age) \n        : base($\"Invalid age: {age}. Age must be between 0 and 150.\")\n    {\n        Age = age;\n    }\n\n    public int Age { get; }\n}\n\n// Using custom exception\npublic void SetAge(int age)\n{\n    if (age &lt; 0 || age &gt; 150)\n        throw new InvalidAgeException(age);\n\n    Age = age;\n}\n</code></pre>"},{"location":"csharp-basics/#async-programming","title":"Async Programming","text":"<pre><code>public class DataService\n{\n    private readonly HttpClient _httpClient = new HttpClient();\n\n    // Async method\n    public async Task&lt;string&gt; GetDataAsync(string url)\n    {\n        try\n        {\n            HttpResponseMessage response = await _httpClient.GetAsync(url);\n            response.EnsureSuccessStatusCode();\n\n            string content = await response.Content.ReadAsStringAsync();\n            return content;\n        }\n        catch (HttpRequestException ex)\n        {\n            Console.WriteLine($\"Request failed: {ex.Message}\");\n            throw;\n        }\n    }\n\n    // Async method with multiple operations\n    public async Task&lt;List&lt;string&gt;&gt; GetMultipleDataAsync(List&lt;string&gt; urls)\n    {\n        List&lt;Task&lt;string&gt;&gt; tasks = urls.Select(GetDataAsync).ToList();\n        string[] results = await Task.WhenAll(tasks);\n        return results.ToList();\n    }\n}\n\n// Using async methods\npublic async Task ProcessDataAsync()\n{\n    var service = new DataService();\n\n    // Sequential execution\n    string data1 = await service.GetDataAsync(\"https://api.example.com/data1\");\n    string data2 = await service.GetDataAsync(\"https://api.example.com/data2\");\n\n    // Parallel execution\n    List&lt;string&gt; urls = new List&lt;string&gt;\n    {\n        \"https://api.example.com/data1\",\n        \"https://api.example.com/data2\",\n        \"https://api.example.com/data3\"\n    };\n\n    List&lt;string&gt; results = await service.GetMultipleDataAsync(urls);\n}\n</code></pre>"},{"location":"csharp-basics/#modern-c-features","title":"Modern C# Features","text":""},{"location":"csharp-basics/#records-c-90","title":"Records (C# 9.0+)","text":"<pre><code>// Record definition\npublic record Person(string FirstName, string LastName, int Age)\n{\n    public string FullName =&gt; $\"{FirstName} {LastName}\";\n}\n\n// Usage\nvar person1 = new Person(\"John\", \"Doe\", 30);\nvar person2 = person1 with { Age = 31 }; // Create copy with modified property\n\n// Value equality\nConsole.WriteLine(person1 == person2); // False\nConsole.WriteLine(person1.FirstName == person2.FirstName); // True\n</code></pre>"},{"location":"csharp-basics/#pattern-matching","title":"Pattern Matching","text":"<pre><code>public string DescribeObject(object obj)\n{\n    return obj switch\n    {\n        int n when n &gt; 0 =&gt; $\"Positive number: {n}\",\n        int n when n &lt; 0 =&gt; $\"Negative number: {n}\",\n        int =&gt; \"Zero\",\n        string s when s.Length &gt; 10 =&gt; $\"Long string: {s[..10]}...\",\n        string s =&gt; $\"String: {s}\",\n        List&lt;int&gt; list =&gt; $\"List with {list.Count} items\",\n        null =&gt; \"Null value\",\n        _ =&gt; \"Unknown type\"\n    };\n}\n\n// Using pattern matching\nConsole.WriteLine(DescribeObject(42));        // Positive number: 42\nConsole.WriteLine(DescribeObject(\"Hello\"));   // String: Hello\nConsole.WriteLine(DescribeObject(null));      // Null value\n</code></pre>"},{"location":"csharp-basics/#nullable-reference-types-c-80","title":"Nullable Reference Types (C# 8.0+)","text":"<pre><code>#nullable enable\n\npublic class UserService\n{\n    // Non-nullable reference type\n    public string GetUserName(int userId)\n    {\n        // Must return non-null string\n        return GetUserFromDatabase(userId)?.Name ?? \"Unknown\";\n    }\n\n    // Nullable reference type\n    public string? FindUserEmail(int userId)\n    {\n        // Can return null\n        return GetUserFromDatabase(userId)?.Email;\n    }\n\n    private User? GetUserFromDatabase(int userId)\n    {\n        // Implementation details...\n        return null; // Compiler knows this can be null\n    }\n}\n\npublic class User\n{\n    public string Name { get; set; } = string.Empty; // Must be initialized\n    public string? Email { get; set; } // Can be null\n}\n</code></pre>"},{"location":"csharp-basics/#c-programming-concepts-flow","title":"C# Programming Concepts Flow","text":"<pre><code>graph TD\n    A[Basic Syntax] --&gt; B[Variables &amp; Types]\n    B --&gt; C[Control Structures]\n    C --&gt; D[Methods &amp; Functions]\n    D --&gt; E[Object-Oriented Programming]\n\n    E --&gt; F[Classes &amp; Objects]\n    E --&gt; G[Inheritance]\n    E --&gt; H[Interfaces]\n    E --&gt; I[Polymorphism]\n\n    F --&gt; J[Collections &amp; Generics]\n    G --&gt; J\n    H --&gt; J\n    I --&gt; J\n\n    J --&gt; K[Exception Handling]\n    K --&gt; L[Async Programming]\n    L --&gt; M[Advanced Features]\n\n    M --&gt; N[LINQ]\n    M --&gt; O[Pattern Matching]\n    M --&gt; P[Records]\n    M --&gt; Q[Nullable Types]\n</code></pre>"},{"location":"csharp-basics/#best-practices","title":"Best Practices","text":""},{"location":"csharp-basics/#naming-conventions","title":"Naming Conventions","text":"<pre><code>// Classes, Methods, Properties - PascalCase\npublic class UserService\n{\n    public string GetUserName() { ... }\n    public int UserId { get; set; }\n}\n\n// Fields, Variables, Parameters - camelCase\nprivate string _userName;\npublic void ProcessUser(string firstName) { ... }\n\n// Constants - PascalCase\npublic const int MaxRetryCount = 3;\n\n// Interfaces - Start with 'I'\npublic interface IUserRepository { ... }\n</code></pre>"},{"location":"csharp-basics/#code-organization","title":"Code Organization","text":"<pre><code>// Organize using statements\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing Microsoft.Extensions.Logging;\n\n// Namespace matches folder structure\nnamespace MyApp.Services.User\n{\n    // Class summary documentation\n    /// &lt;summary&gt;\n    /// Provides user-related operations and data access\n    /// &lt;/summary&gt;\n    public class UserService\n    {\n        // Dependencies injection\n        private readonly ILogger&lt;UserService&gt; _logger;\n        private readonly IUserRepository _userRepository;\n\n        public UserService(ILogger&lt;UserService&gt; logger, IUserRepository userRepository)\n        {\n            _logger = logger ?? throw new ArgumentNullException(nameof(logger));\n            _userRepository = userRepository ?? throw new ArgumentNullException(nameof(userRepository));\n        }\n    }\n}\n</code></pre>"},{"location":"csharp-basics/#common-patterns","title":"Common Patterns","text":""},{"location":"csharp-basics/#repository-pattern","title":"Repository Pattern","text":"<pre><code>public interface IUserRepository\n{\n    Task&lt;User?&gt; GetByIdAsync(int id);\n    Task&lt;List&lt;User&gt;&gt; GetAllAsync();\n    Task&lt;User&gt; CreateAsync(User user);\n    Task UpdateAsync(User user);\n    Task DeleteAsync(int id);\n}\n\npublic class UserRepository : IUserRepository\n{\n    private readonly DbContext _context;\n\n    public UserRepository(DbContext context)\n    {\n        _context = context;\n    }\n\n    public async Task&lt;User?&gt; GetByIdAsync(int id)\n    {\n        return await _context.Users.FindAsync(id);\n    }\n\n    // Other implementations...\n}\n</code></pre>"},{"location":"csharp-basics/#dependency-injection","title":"Dependency Injection","text":"<pre><code>// Service registration\npublic void ConfigureServices(IServiceCollection services)\n{\n    services.AddScoped&lt;IUserRepository, UserRepository&gt;();\n    services.AddScoped&lt;IUserService, UserService&gt;();\n}\n\n// Service usage\npublic class UserController : ControllerBase\n{\n    private readonly IUserService _userService;\n\n    public UserController(IUserService userService)\n    {\n        _userService = userService;\n    }\n}\n</code></pre>"},{"location":"csharp-basics/#learning-path","title":"Learning Path","text":""},{"location":"csharp-basics/#beginner-level","title":"Beginner Level","text":"<ol> <li>Basic Syntax: Variables, data types, operators</li> <li>Control Flow: if/else, loops, switch</li> <li>Methods: Parameters, return values, overloading</li> <li>Classes: Properties, constructors, methods</li> </ol>"},{"location":"csharp-basics/#intermediate-level","title":"Intermediate Level","text":"<ol> <li>OOP Concepts: Inheritance, polymorphism, interfaces</li> <li>Collections: Lists, dictionaries, LINQ</li> <li>Exception Handling: try/catch/finally, custom exceptions</li> <li>File I/O: Reading/writing files, streams</li> </ol>"},{"location":"csharp-basics/#advanced-level","title":"Advanced Level","text":"<ol> <li>Async Programming: async/await, Tasks, parallel processing</li> <li>Generics: Generic classes, constraints, variance</li> <li>Delegates &amp; Events: Event handling, functional programming</li> <li>Reflection: Runtime type inspection, dynamic loading</li> </ol>"},{"location":"csharp-basics/#next-steps","title":"Next Steps","text":"<p>After mastering C# basics:</p> <ol> <li>Understand .NET project structure</li> <li>Learn .NET CLI commands</li> <li>Explore NuGet package management</li> <li>Build your first .NET project</li> </ol>"},{"location":"csharp-basics/#summary","title":"Summary","text":"<p>C# is a powerful, modern programming language that offers:</p> Feature Benefit Strong Typing Compile-time error detection Object-Oriented Code reusability and maintainability Memory Management Automatic garbage collection Rich Libraries Extensive Base Class Library Cross-Platform Runs on multiple operating systems Modern Syntax Expressive and readable code <p>C# combines the power of C++ with the simplicity of Visual Basic, making it an excellent choice for both beginners and experienced developers building modern applications.</p>"},{"location":"csharp/","title":"C","text":"<p>List of content</p> <ul> <li>C# - Basic</li> </ul>"},{"location":"csharp/#c-advance","title":"C# Advance","text":"<ul> <li>C# - List</li> <li>C# - Array</li> <li>C# - Inheritance</li> <li>C# - Polymorphism</li> <li>C# - Abstraction</li> <li>C# - Encapsulation</li> <li>C# - Interface</li> <li>C# - Events</li> <li>C# - Exception Handling</li> <li>C# - File Handling</li> <li>C# - Serialization</li> <li>C# - LINQ</li> <li>C# - Generics</li> <li>C# - Lambda Expressions</li> <li>C# - Async/Await</li> <li>C# - Threading</li> <li>C# - WPF</li> </ul>"},{"location":"csharp/#relate-pages","title":"Relate Pages","text":"<ul> <li>.NET</li> <li>.NET Cheatsheet</li> </ul>"},{"location":"dicoding-machine-learning/","title":"Dicoding Machine Learning - ID Camp","text":"<p>There are several project (apps development or learning path) that I  am currently working on. These projects are not yet complete and are still in the process of development.</p>"},{"location":"docker-dockerfile/","title":"Dockerfile: Creating Custom Images","text":""},{"location":"docker-dockerfile/#overview","title":"Overview","text":"<p>A Dockerfile is a text file that contains instructions for building Docker images. It defines the environment, dependencies, and configuration needed to run your application in a container.</p>"},{"location":"docker-dockerfile/#dockerfile-basics","title":"Dockerfile Basics","text":""},{"location":"docker-dockerfile/#what-is-a-dockerfile","title":"What is a Dockerfile?","text":"<p>A Dockerfile is a recipe for creating Docker images. It contains step-by-step instructions that Docker follows to build an image automatically.</p>"},{"location":"docker-dockerfile/#basic-structure","title":"Basic Structure","text":"<pre><code># Comment\nINSTRUCTION arguments\n</code></pre>"},{"location":"docker-dockerfile/#simple-example","title":"Simple Example","text":"<pre><code># Use official Python runtime as base image\nFROM python:3.11-slim\n\n# Set working directory\nWORKDIR /app\n\n# Copy requirements file\nCOPY requirements.txt .\n\n# Install dependencies\nRUN pip install -r requirements.txt\n\n# Copy application code\nCOPY . .\n\n# Expose port\nEXPOSE 8000\n\n# Run application\nCMD [\"python\", \"app.py\"]\n</code></pre>"},{"location":"docker-dockerfile/#dockerfile-instructions","title":"Dockerfile Instructions","text":""},{"location":"docker-dockerfile/#from-base-image","title":"FROM - Base Image","text":"<pre><code># Official image\nFROM ubuntu:20.04\n\n# Specific version\nFROM node:18.16.0\n\n# Multi-stage build\nFROM node:18 AS builder\nFROM nginx:alpine AS runtime\n\n# Scratch (empty base)\nFROM scratch\n</code></pre>"},{"location":"docker-dockerfile/#run-execute-commands","title":"RUN - Execute Commands","text":"<pre><code># Single command\nRUN apt-get update\n\n# Multiple commands (recommended)\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y \\\n        curl \\\n        wget \\\n        vim &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n\n# Using arrays (shell form vs exec form)\nRUN [\"apt-get\", \"update\"]\nRUN [\"apt-get\", \"install\", \"-y\", \"curl\"]\n</code></pre>"},{"location":"docker-dockerfile/#copy-vs-add","title":"COPY vs ADD","text":"<pre><code># COPY (recommended for simple file copying)\nCOPY source destination\nCOPY app.py /app/\nCOPY requirements.txt /app/\nCOPY . /app/\n\n# ADD (has additional features)\nADD source destination\nADD https://example.com/file.tar.gz /app/  # Downloads from URL\nADD archive.tar.gz /app/                   # Auto-extracts archives\n\n# Best practice: Use COPY unless you need ADD's features\n</code></pre>"},{"location":"docker-dockerfile/#workdir-set-working-directory","title":"WORKDIR - Set Working Directory","text":"<pre><code># Set working directory\nWORKDIR /app\n\n# All subsequent commands run from this directory\nCOPY . .\nRUN ls -la  # Lists contents of /app\n\n# Create directory if it doesn't exist\nWORKDIR /app/data/logs\n</code></pre>"},{"location":"docker-dockerfile/#env-environment-variables","title":"ENV - Environment Variables","text":"<pre><code># Set environment variables\nENV NODE_ENV=production\nENV PORT=3000\nENV DATABASE_URL=postgresql://localhost/mydb\n\n# Multiple variables\nENV NODE_ENV=production \\\n    PORT=3000 \\\n    DEBUG=false\n\n# Use variables\nENV APP_HOME=/app\nWORKDIR $APP_HOME\n</code></pre>"},{"location":"docker-dockerfile/#arg-build-arguments","title":"ARG - Build Arguments","text":"<pre><code># Define build arguments\nARG NODE_VERSION=18\nARG APP_ENV=production\n\n# Use in FROM instruction\nFROM node:${NODE_VERSION}\n\n# Use in other instructions\nENV ENVIRONMENT=${APP_ENV}\n\n# Build with arguments\n# docker build --build-arg NODE_VERSION=16 .\n</code></pre>"},{"location":"docker-dockerfile/#expose-document-ports","title":"EXPOSE - Document Ports","text":"<pre><code># Document which ports the container listens on\nEXPOSE 80\nEXPOSE 443\nEXPOSE 8000/tcp\nEXPOSE 53/udp\n\n# Multiple ports\nEXPOSE 80 443 8080\n</code></pre>"},{"location":"docker-dockerfile/#user-set-user","title":"USER - Set User","text":"<pre><code># Create user\nRUN groupadd -r appuser &amp;&amp; useradd -r -g appuser appuser\n\n# Switch to user\nUSER appuser\n\n# Switch back to root if needed\nUSER root\n\n# Use numeric IDs\nUSER 1000:1000\n</code></pre>"},{"location":"docker-dockerfile/#cmd-vs-entrypoint","title":"CMD vs ENTRYPOINT","text":"<pre><code># CMD - Default command (can be overridden)\nCMD [\"python\", \"app.py\"]\nCMD python app.py\n\n# ENTRYPOINT - Fixed command (cannot be overridden)\nENTRYPOINT [\"python\", \"app.py\"]\n\n# Combination (ENTRYPOINT + CMD)\nENTRYPOINT [\"python\"]\nCMD [\"app.py\"]\n\n# This allows: docker run myimage script.py\n</code></pre>"},{"location":"docker-dockerfile/#volume-mount-points","title":"VOLUME - Mount Points","text":"<pre><code># Create mount points\nVOLUME [\"/data\"]\nVOLUME [\"/var/log\", \"/var/db\"]\n\n# Or\nVOLUME /data\nVOLUME /var/log /var/db\n</code></pre>"},{"location":"docker-dockerfile/#label-metadata","title":"LABEL - Metadata","text":"<pre><code># Add metadata\nLABEL version=\"1.0\"\nLABEL description=\"My web application\"\nLABEL maintainer=\"yourname@example.com\"\n\n# Multiple labels\nLABEL version=\"1.0\" \\\n      description=\"My web application\" \\\n      maintainer=\"yourname@example.com\"\n</code></pre>"},{"location":"docker-dockerfile/#real-world-examples","title":"Real-World Examples","text":""},{"location":"docker-dockerfile/#nodejs-application","title":"Node.js Application","text":"<pre><code># Use official Node.js runtime\nFROM node:18-alpine\n\n# Set working directory\nWORKDIR /usr/src/app\n\n# Copy package files\nCOPY package*.json ./\n\n# Install dependencies\nRUN npm ci --only=production\n\n# Create non-root user\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S nextjs -u 1001\n\n# Copy application code\nCOPY --chown=nextjs:nodejs . .\n\n# Switch to non-root user\nUSER nextjs\n\n# Expose port\nEXPOSE 3000\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n  CMD curl -f http://localhost:3000/health || exit 1\n\n# Start application\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker-dockerfile/#python-web-application","title":"Python Web Application","text":"<pre><code># Multi-stage build\nFROM python:3.11-slim as builder\n\n# Install system dependencies\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends \\\n        build-essential \\\n        gcc &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n\n# Set working directory\nWORKDIR /app\n\n# Copy requirements\nCOPY requirements.txt .\n\n# Install Python dependencies\nRUN pip wheel --no-cache-dir --no-deps --wheel-dir /app/wheels -r requirements.txt\n\n# Production stage\nFROM python:3.11-slim\n\n# Create app user\nRUN groupadd -r app &amp;&amp; useradd -r -g app app\n\n# Install system dependencies\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y --no-install-recommends \\\n        curl &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n\n# Copy wheels from builder stage\nCOPY --from=builder /app/wheels /wheels\nCOPY --from=builder /app/requirements.txt .\n\n# Install Python dependencies\nRUN pip install --no-cache /wheels/*\n\n# Set working directory\nWORKDIR /app\n\n# Copy application code\nCOPY --chown=app:app . .\n\n# Switch to app user\nUSER app\n\n# Expose port\nEXPOSE 8000\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \\\n  CMD curl -f http://localhost:8000/health/ || exit 1\n\n# Start application\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"myapp.wsgi:application\"]\n</code></pre>"},{"location":"docker-dockerfile/#java-spring-boot-application","title":"Java Spring Boot Application","text":"<pre><code># Multi-stage build\nFROM maven:3.8-openjdk-17 as builder\n\n# Set working directory\nWORKDIR /app\n\n# Copy POM file\nCOPY pom.xml .\n\n# Download dependencies (cached layer)\nRUN mvn dependency:go-offline -B\n\n# Copy source code\nCOPY src ./src\n\n# Build application\nRUN mvn clean package -DskipTests\n\n# Runtime stage\nFROM openjdk:17-jre-slim\n\n# Install curl for health checks\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y curl &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n\n# Create app user\nRUN groupadd -r spring &amp;&amp; useradd -r -g spring spring\n\n# Set working directory\nWORKDIR /app\n\n# Copy jar from builder stage\nCOPY --from=builder /app/target/*.jar app.jar\n\n# Change ownership\nRUN chown spring:spring app.jar\n\n# Switch to app user\nUSER spring\n\n# Expose port\nEXPOSE 8080\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \\\n  CMD curl -f http://localhost:8080/actuator/health || exit 1\n\n# JVM options\nENV JAVA_OPTS=\"-Xmx512m -Xms256m\"\n\n# Start application\nENTRYPOINT [\"sh\", \"-c\", \"java $JAVA_OPTS -jar app.jar\"]\n</code></pre>"},{"location":"docker-dockerfile/#net-application","title":".NET Application","text":"<pre><code># Multi-stage build\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /src\n\n# Copy project files\nCOPY *.csproj ./\nRUN dotnet restore\n\n# Copy source code\nCOPY . ./\nRUN dotnet publish -c Release -o /app/publish\n\n# Runtime stage\nFROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime\n\n# Install curl for health checks\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y curl &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n\n# Create app user\nRUN groupadd -r app &amp;&amp; useradd -r -g app app\n\nWORKDIR /app\n\n# Copy published app\nCOPY --from=build /app/publish .\n\n# Change ownership\nRUN chown -R app:app /app\n\n# Switch to app user\nUSER app\n\n# Expose port\nEXPOSE 80\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \\\n  CMD curl -f http://localhost/health || exit 1\n\n# Start application\nENTRYPOINT [\"dotnet\", \"MyApp.dll\"]\n</code></pre>"},{"location":"docker-dockerfile/#multi-stage-builds","title":"Multi-Stage Builds","text":""},{"location":"docker-dockerfile/#benefits-of-multi-stage-builds","title":"Benefits of Multi-Stage Builds","text":"<ul> <li>Smaller final images</li> <li>Separation of build and runtime dependencies</li> <li>Better security (no build tools in final image)</li> <li>Faster deployments</li> </ul>"},{"location":"docker-dockerfile/#advanced-multi-stage-example","title":"Advanced Multi-Stage Example","text":"<pre><code># Build stage\nFROM node:18-alpine AS dependencies\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci --only=production &amp;&amp; npm cache clean --force\n\n# Development dependencies\nFROM node:18-alpine AS dev-dependencies\nWORKDIR /app\nCOPY package*.json ./\nRUN npm ci\n\n# Build stage\nFROM dev-dependencies AS build\nCOPY . .\nRUN npm run build &amp;&amp; npm run test\n\n# Runtime stage\nFROM node:18-alpine AS runtime\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S nextjs -u 1001\n\nWORKDIR /app\n\n# Copy dependencies\nCOPY --from=dependencies --chown=nextjs:nodejs /app/node_modules ./node_modules\n\n# Copy built application\nCOPY --from=build --chown=nextjs:nodejs /app/dist ./dist\nCOPY --from=build --chown=nextjs:nodejs /app/package.json ./package.json\n\nUSER nextjs\n\nEXPOSE 3000\n\nCMD [\"npm\", \"start\"]\n</code></pre>"},{"location":"docker-dockerfile/#best-practices","title":"Best Practices","text":""},{"location":"docker-dockerfile/#1-use-official-base-images","title":"1. Use Official Base Images","text":"<pre><code># Good\nFROM node:18-alpine\nFROM python:3.11-slim\nFROM openjdk:17-jre-slim\n\n# Avoid\nFROM ubuntu:latest  # Too generic, large size\n</code></pre>"},{"location":"docker-dockerfile/#2-minimize-layers","title":"2. Minimize Layers","text":"<pre><code># Bad (multiple layers)\nRUN apt-get update\nRUN apt-get install -y curl\nRUN apt-get install -y wget\nRUN rm -rf /var/lib/apt/lists/*\n\n# Good (single layer)\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y \\\n        curl \\\n        wget &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n</code></pre>"},{"location":"docker-dockerfile/#3-use-dockerignore","title":"3. Use .dockerignore","text":"<pre><code># .dockerignore file\nnode_modules\nnpm-debug.log\n.git\n.gitignore\nREADME.md\n.env\n.nyc_output\ncoverage\n.coverage\n.pytest_cache\n.DS_Store\n*.pyc\n*.pyo\n*.pyd\n__pycache__\n.vscode\n.idea\n</code></pre>"},{"location":"docker-dockerfile/#4-leverage-build-cache","title":"4. Leverage Build Cache","text":"<pre><code># Copy dependency files first (cached layer)\nCOPY package*.json ./\nRUN npm install\n\n# Copy source code last (changes frequently)\nCOPY . ./\n</code></pre>"},{"location":"docker-dockerfile/#5-run-as-non-root-user","title":"5. Run as Non-Root User","text":"<pre><code># Create user\nRUN groupadd -r appuser &amp;&amp; useradd -r -g appuser appuser\n\n# Set ownership\nCOPY --chown=appuser:appuser . /app\n\n# Switch to user\nUSER appuser\n</code></pre>"},{"location":"docker-dockerfile/#6-use-specific-tags","title":"6. Use Specific Tags","text":"<pre><code># Good\nFROM node:18.16.0-alpine\n\n# Bad\nFROM node:latest\nFROM node\n</code></pre>"},{"location":"docker-dockerfile/#7-add-health-checks","title":"7. Add Health Checks","text":"<pre><code>HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n  CMD curl -f http://localhost:3000/health || exit 1\n</code></pre>"},{"location":"docker-dockerfile/#common-patterns","title":"Common Patterns","text":""},{"location":"docker-dockerfile/#configuration-management","title":"Configuration Management","text":"<pre><code># Environment-specific configuration\nARG ENV=production\nCOPY config/config.${ENV}.json /app/config.json\n\n# Template-based configuration\nCOPY config/app.conf.template /app/\nRUN envsubst &lt; /app/app.conf.template &gt; /app/app.conf\n</code></pre>"},{"location":"docker-dockerfile/#secret-management","title":"Secret Management","text":"<pre><code># Use build secrets (BuildKit)\n# syntax=docker/dockerfile:1\nFROM alpine\nRUN --mount=type=secret,id=mypassword \\\n  cat /run/secrets/mypassword\n\n# Build with: docker build --secret id=mypassword,src=./password.txt .\n</code></pre>"},{"location":"docker-dockerfile/#caching-strategies","title":"Caching Strategies","text":"<pre><code># Cache package installations\nFROM python:3.11-slim\nCOPY requirements.txt .\nRUN pip install -r requirements.txt\nCOPY . .\n\n# Use build cache mounts\nRUN --mount=type=cache,target=/root/.cache/pip \\\n    pip install -r requirements.txt\n</code></pre>"},{"location":"docker-dockerfile/#building-and-optimization","title":"Building and Optimization","text":""},{"location":"docker-dockerfile/#build-commands","title":"Build Commands","text":"<pre><code># Basic build\ndocker build -t myapp .\n\n# Build with arguments\ndocker build --build-arg ENV=production -t myapp .\n\n# Build specific stage\ndocker build --target runtime -t myapp .\n\n# Build with custom Dockerfile\ndocker build -f Dockerfile.prod -t myapp .\n\n# Build without cache\ndocker build --no-cache -t myapp .\n</code></pre>"},{"location":"docker-dockerfile/#image-optimization","title":"Image Optimization","text":"<pre><code># Use alpine variants\nFROM node:18-alpine\n\n# Remove package manager caches\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y package &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n\n# Use multi-stage builds\nFROM builder AS runtime\n\n# Remove unnecessary files\nRUN rm -rf /tmp/* /var/tmp/*\n</code></pre>"},{"location":"docker-dockerfile/#dockerfile-linting","title":"Dockerfile Linting","text":""},{"location":"docker-dockerfile/#using-hadolint","title":"Using hadolint","text":"<pre><code># Install hadolint\nbrew install hadolint\n\n# Lint Dockerfile\nhadolint Dockerfile\n\n# Ignore specific rules\nhadolint --ignore DL3008 Dockerfile\n</code></pre>"},{"location":"docker-dockerfile/#common-issues","title":"Common Issues","text":"<pre><code># DL3008: Pin versions in apt-get install\nRUN apt-get install -y curl=7.68.0-1ubuntu2\n\n# DL3009: Delete apt-get lists\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y curl &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n\n# DL3006: Always tag the version of an image explicitly\nFROM ubuntu:20.04\n</code></pre>"},{"location":"docker-dockerfile/#debugging-dockerfiles","title":"Debugging Dockerfiles","text":""},{"location":"docker-dockerfile/#debug-techniques","title":"Debug Techniques","text":"<pre><code># Build up to specific stage\ndocker build --target debug -t myapp-debug .\n\n# Run intermediate stage\ndocker run -it myapp-debug /bin/bash\n\n# Check build history\ndocker history myapp\n\n# Inspect final image\ndocker inspect myapp\n</code></pre>"},{"location":"docker-dockerfile/#debug-dockerfile","title":"Debug Dockerfile","text":"<pre><code>FROM ubuntu:20.04 AS debug\n\n# Install debugging tools\nRUN apt-get update &amp;&amp; \\\n    apt-get install -y \\\n        curl \\\n        wget \\\n        vim \\\n        htop \\\n        strace &amp;&amp; \\\n    rm -rf /var/lib/apt/lists/*\n\n# Your application setup\nFROM debug AS app\nCOPY . /app\nWORKDIR /app\n\n# Production stage\nFROM ubuntu:20.04 AS production\nCOPY --from=app /app /app\nWORKDIR /app\nCMD [\"./start.sh\"]\n</code></pre>"},{"location":"docker-dockerfile/#testing-dockerfiles","title":"Testing Dockerfiles","text":""},{"location":"docker-dockerfile/#test-structure","title":"Test Structure","text":"<pre><code># Test script\n#!/bin/bash\nset -e\n\n# Build image\ndocker build -t test-app .\n\n# Test 1: Image builds successfully\necho \"\u2713 Image builds successfully\"\n\n# Test 2: Application starts\ndocker run -d --name test-container test-app\nsleep 5\n\n# Test 3: Health check passes\ndocker exec test-container curl -f http://localhost:3000/health\n\n# Test 4: Cleanup\ndocker stop test-container\ndocker rm test-container\n\necho \"\u2713 All tests passed\"\n</code></pre>"},{"location":"docker-dockerfile/#next-steps","title":"Next Steps","text":"<p>After mastering Dockerfile creation:</p> <ol> <li>Learn Docker volumes</li> <li>Understand Docker networking</li> <li>Explore Docker Compose</li> <li>Study image optimization</li> </ol> <p>Creating effective Dockerfiles is essential for building efficient, secure, and maintainable container images. Start with simple examples and gradually incorporate advanced patterns as your applications become more complex.</p>"},{"location":"docker-essential-commands/","title":"Essential Docker Commands You Must Know","text":""},{"location":"docker-essential-commands/#overview","title":"Overview","text":"<p>Docker commands are the primary way to interact with Docker containers, images, networks, and volumes. This comprehensive guide covers all essential commands you need to master Docker effectively.</p>"},{"location":"docker-essential-commands/#command-structure","title":"Command Structure","text":""},{"location":"docker-essential-commands/#basic-docker-command-format","title":"Basic Docker Command Format","text":"<pre><code>docker [OPTIONS] COMMAND [ARG...]\n</code></pre>"},{"location":"docker-essential-commands/#getting-help","title":"Getting Help","text":"<pre><code># Show Docker version\ndocker --version\ndocker version\n\n# Show system information\ndocker info\n\n# Get help for Docker\ndocker --help\n\n# Get help for specific command\ndocker run --help\ndocker build --help\n</code></pre>"},{"location":"docker-essential-commands/#image-commands","title":"Image Commands","text":""},{"location":"docker-essential-commands/#pulling-images","title":"Pulling Images","text":"<pre><code># Pull latest image\ndocker pull ubuntu\ndocker pull nginx\n\n# Pull specific version\ndocker pull ubuntu:20.04\ndocker pull node:18-alpine\n\n# Pull from specific registry\ndocker pull gcr.io/google-containers/nginx\ndocker pull registry.company.com/app:latest\n\n# Pull all tags of an image\ndocker pull --all-tags ubuntu\n</code></pre>"},{"location":"docker-essential-commands/#listing-images","title":"Listing Images","text":"<pre><code># List all images\ndocker images\ndocker image ls\n\n# List images with specific format\ndocker images --format \"table {{.Repository}}\\t{{.Tag}}\\t{{.Size}}\"\n\n# List image IDs only\ndocker images -q\n\n# List dangling images\ndocker images --filter \"dangling=true\"\n\n# List images by repository\ndocker images ubuntu\n</code></pre>"},{"location":"docker-essential-commands/#removing-images","title":"Removing Images","text":"<pre><code># Remove specific image\ndocker rmi ubuntu:20.04\ndocker image rm ubuntu:20.04\n\n# Remove image by ID\ndocker rmi 1a2b3c4d5e6f\n\n# Remove multiple images\ndocker rmi ubuntu:18.04 ubuntu:20.04 ubuntu:22.04\n\n# Remove all images\ndocker rmi $(docker images -q)\n\n# Remove dangling images\ndocker image prune\n\n# Remove all unused images\ndocker image prune -a\n\n# Force remove image\ndocker rmi -f ubuntu:20.04\n</code></pre>"},{"location":"docker-essential-commands/#image-information","title":"Image Information","text":"<pre><code># Inspect image details\ndocker inspect ubuntu:20.04\n\n# Show image history (layers)\ndocker history ubuntu:20.04\n\n# Show image size information\ndocker images --format \"table {{.Repository}}\\t{{.Tag}}\\t{{.Size}}\"\n</code></pre>"},{"location":"docker-essential-commands/#container-commands","title":"Container Commands","text":""},{"location":"docker-essential-commands/#running-containers","title":"Running Containers","text":"<pre><code># Basic container run\ndocker run ubuntu\n\n# Run with interactive terminal\ndocker run -it ubuntu /bin/bash\n\n# Run in detached mode (background)\ndocker run -d nginx\n\n# Run with custom name\ndocker run --name my-nginx -d nginx\n\n# Run with port mapping\ndocker run -p 8080:80 -d nginx\n\n# Run with environment variables\ndocker run -e ENV_VAR=value -d myapp\n\n# Run with volume mount\ndocker run -v /host/path:/container/path -d myapp\n\n# Run with resource limits\ndocker run --memory=512m --cpus=1.0 -d myapp\n\n# Run with restart policy\ndocker run --restart=always -d nginx\n\n# Run and remove after exit\ndocker run --rm ubuntu echo \"Hello World\"\n</code></pre>"},{"location":"docker-essential-commands/#container-management","title":"Container Management","text":"<pre><code># List running containers\ndocker ps\n\n# List all containers (including stopped)\ndocker ps -a\n\n# List container IDs only\ndocker ps -q\n\n# List containers with custom format\ndocker ps --format \"table {{.Names}}\\t{{.Status}}\\t{{.Ports}}\"\n\n# Start stopped container\ndocker start container-name\ndocker start container-id\n\n# Stop running container\ndocker stop container-name\n\n# Restart container\ndocker restart container-name\n\n# Pause container\ndocker pause container-name\n\n# Unpause container\ndocker unpause container-name\n\n# Kill container (force stop)\ndocker kill container-name\n</code></pre>"},{"location":"docker-essential-commands/#container-interaction","title":"Container Interaction","text":"<pre><code># Execute command in running container\ndocker exec -it container-name /bin/bash\ndocker exec -it container-name sh\n\n# Execute single command\ndocker exec container-name ls -la\ndocker exec container-name cat /etc/hosts\n\n# Execute as specific user\ndocker exec -u root -it container-name /bin/bash\n\n# Execute with environment variables\ndocker exec -e ENV_VAR=value container-name command\n</code></pre>"},{"location":"docker-essential-commands/#container-information","title":"Container Information","text":"<pre><code># Show container logs\ndocker logs container-name\n\n# Follow logs in real-time\ndocker logs -f container-name\n\n# Show last N lines of logs\ndocker logs --tail 50 container-name\n\n# Show logs with timestamps\ndocker logs -t container-name\n\n# Inspect container details\ndocker inspect container-name\n\n# Show container resource usage\ndocker stats container-name\n\n# Show running processes in container\ndocker top container-name\n\n# Show container port mappings\ndocker port container-name\n</code></pre>"},{"location":"docker-essential-commands/#copying-files","title":"Copying Files","text":"<pre><code># Copy file from host to container\ndocker cp /host/file.txt container-name:/container/path/\n\n# Copy file from container to host\ndocker cp container-name:/container/file.txt /host/path/\n\n# Copy directory\ndocker cp /host/directory/ container-name:/container/path/\ndocker cp container-name:/container/directory/ /host/path/\n\n# Copy with archive mode (preserves permissions)\ndocker cp -a /host/file.txt container-name:/container/path/\n</code></pre>"},{"location":"docker-essential-commands/#removing-containers","title":"Removing Containers","text":"<pre><code># Remove stopped container\ndocker rm container-name\n\n# Force remove running container\ndocker rm -f container-name\n\n# Remove multiple containers\ndocker rm container1 container2 container3\n\n# Remove all stopped containers\ndocker container prune\n\n# Remove containers older than 24 hours\ndocker container prune --filter \"until=24h\"\n\n# Remove all containers (running and stopped)\ndocker rm -f $(docker ps -aq)\n</code></pre>"},{"location":"docker-essential-commands/#building-images","title":"Building Images","text":""},{"location":"docker-essential-commands/#dockerfile-commands","title":"Dockerfile Commands","text":"<pre><code># Build image from Dockerfile\ndocker build -t myapp:latest .\n\n# Build with specific Dockerfile\ndocker build -f Dockerfile.prod -t myapp:prod .\n\n# Build with build arguments\ndocker build --build-arg ENV=production -t myapp:prod .\n\n# Build without using cache\ndocker build --no-cache -t myapp:latest .\n\n# Build with target stage (multi-stage)\ndocker build --target development -t myapp:dev .\n\n# Build and tag multiple tags\ndocker build -t myapp:latest -t myapp:1.0 .\n</code></pre>"},{"location":"docker-essential-commands/#tagging-images","title":"Tagging Images","text":"<pre><code># Tag existing image\ndocker tag myapp:latest myapp:v1.0\ndocker tag myapp:latest registry.company.com/myapp:latest\n\n# Tag with multiple tags\ndocker tag ubuntu:20.04 my-ubuntu:custom\ndocker tag ubuntu:20.04 my-ubuntu:latest\n</code></pre>"},{"location":"docker-essential-commands/#registry-commands","title":"Registry Commands","text":""},{"location":"docker-essential-commands/#pushing-and-pulling","title":"Pushing and Pulling","text":"<pre><code># Push image to registry\ndocker push myapp:latest\ndocker push registry.company.com/myapp:latest\n\n# Login to registry\ndocker login\ndocker login registry.company.com\ndocker login -u username -p password registry.company.com\n\n# Logout from registry\ndocker logout\ndocker logout registry.company.com\n\n# Search images in Docker Hub\ndocker search nginx\ndocker search --limit 10 ubuntu\n</code></pre>"},{"location":"docker-essential-commands/#volume-commands","title":"Volume Commands","text":""},{"location":"docker-essential-commands/#volume-management","title":"Volume Management","text":"<pre><code># Create volume\ndocker volume create my-volume\n\n# List volumes\ndocker volume ls\n\n# Inspect volume\ndocker volume inspect my-volume\n\n# Remove volume\ndocker volume rm my-volume\n\n# Remove all unused volumes\ndocker volume prune\n\n# Remove volumes older than 24 hours\ndocker volume prune --filter \"until=24h\"\n</code></pre>"},{"location":"docker-essential-commands/#using-volumes","title":"Using Volumes","text":"<pre><code># Run container with named volume\ndocker run -v my-volume:/data -d myapp\n\n# Run container with bind mount\ndocker run -v /host/path:/container/path -d myapp\n\n# Run container with read-only volume\ndocker run -v my-volume:/data:ro -d myapp\n\n# Run container with tmpfs mount\ndocker run --tmpfs /tmp -d myapp\n</code></pre>"},{"location":"docker-essential-commands/#network-commands","title":"Network Commands","text":""},{"location":"docker-essential-commands/#network-management","title":"Network Management","text":"<pre><code># List networks\ndocker network ls\n\n# Create network\ndocker network create my-network\ndocker network create --driver bridge my-bridge-network\n\n# Inspect network\ndocker network inspect my-network\n\n# Connect container to network\ndocker network connect my-network container-name\n\n# Disconnect container from network\ndocker network disconnect my-network container-name\n\n# Remove network\ndocker network rm my-network\n\n# Remove all unused networks\ndocker network prune\n</code></pre>"},{"location":"docker-essential-commands/#running-containers-with-networks","title":"Running Containers with Networks","text":"<pre><code># Run container with specific network\ndocker run --network=my-network -d myapp\n\n# Run container with port publishing\ndocker run -p 8080:80 --network=my-network -d nginx\n\n# Run container with hostname\ndocker run --hostname=myapp --network=my-network -d myapp\n</code></pre>"},{"location":"docker-essential-commands/#system-commands","title":"System Commands","text":""},{"location":"docker-essential-commands/#system-information","title":"System Information","text":"<pre><code># Show Docker system information\ndocker system info\n\n# Show disk usage\ndocker system df\n\n# Show detailed disk usage\ndocker system df -v\n\n# Monitor Docker events\ndocker events\n\n# Monitor events for specific container\ndocker events --filter container=my-container\n</code></pre>"},{"location":"docker-essential-commands/#system-cleanup","title":"System Cleanup","text":"<pre><code># Remove all unused data\ndocker system prune\n\n# Remove all unused data including volumes\ndocker system prune --volumes\n\n# Remove all unused data including images\ndocker system prune -a\n\n# Force removal without confirmation\ndocker system prune -f\n\n# Remove data older than specific time\ndocker system prune --filter \"until=72h\"\n</code></pre>"},{"location":"docker-essential-commands/#advanced-commands","title":"Advanced Commands","text":""},{"location":"docker-essential-commands/#container-exportimport","title":"Container Export/Import","text":"<pre><code># Export container as tar archive\ndocker export container-name &gt; container.tar\n\n# Import tar archive as image\ndocker import container.tar my-image:latest\n\n# Save image as tar archive\ndocker save myapp:latest &gt; myapp.tar\n\n# Load image from tar archive\ndocker load &lt; myapp.tar\n</code></pre>"},{"location":"docker-essential-commands/#container-commit","title":"Container Commit","text":"<pre><code># Create image from container changes\ndocker commit container-name new-image:tag\n\n# Create image with message and author\ndocker commit -m \"Added new feature\" -a \"Your Name\" container-name new-image:tag\n\n# Create image without pausing container\ndocker commit --pause=false container-name new-image:tag\n</code></pre>"},{"location":"docker-essential-commands/#multi-platform-commands","title":"Multi-platform Commands","text":"<pre><code># Build for multiple platforms\ndocker buildx build --platform linux/amd64,linux/arm64 -t myapp:latest .\n\n# Create builder instance\ndocker buildx create --name mybuilder --use\n\n# Inspect builder\ndocker buildx inspect mybuilder\n\n# Remove builder\ndocker buildx rm mybuilder\n</code></pre>"},{"location":"docker-essential-commands/#docker-compose-commands","title":"Docker Compose Commands","text":""},{"location":"docker-essential-commands/#basic-compose-commands","title":"Basic Compose Commands","text":"<pre><code># Start services\ndocker-compose up\n\n# Start services in background\ndocker-compose up -d\n\n# Stop services\ndocker-compose down\n\n# Stop and remove volumes\ndocker-compose down -v\n\n# Build services\ndocker-compose build\n\n# View service logs\ndocker-compose logs\n\n# Follow logs\ndocker-compose logs -f\n\n# Scale services\ndocker-compose up --scale web=3\n\n# Execute command in service\ndocker-compose exec web /bin/bash\n\n# Run one-off command\ndocker-compose run web python manage.py migrate\n</code></pre>"},{"location":"docker-essential-commands/#command-aliases-and-shortcuts","title":"Command Aliases and Shortcuts","text":""},{"location":"docker-essential-commands/#useful-aliases","title":"Useful Aliases","text":"<pre><code># Add to your ~/.bashrc or ~/.zshrc\nalias dps='docker ps'\nalias dpsa='docker ps -a'\nalias di='docker images'\nalias dlog='docker logs'\nalias dexec='docker exec -it'\nalias dstop='docker stop $(docker ps -q)'\nalias drm='docker rm $(docker ps -aq)'\nalias drmi='docker rmi $(docker images -q)'\nalias dprune='docker system prune -f'\n</code></pre>"},{"location":"docker-essential-commands/#common-command-combinations","title":"Common Command Combinations","text":"<pre><code># Stop all running containers\ndocker stop $(docker ps -q)\n\n# Remove all containers\ndocker rm $(docker ps -aq)\n\n# Remove all images\ndocker rmi $(docker images -q)\n\n# Remove all dangling images\ndocker rmi $(docker images -f dangling=true -q)\n\n# Remove all unused containers, networks, and images\ndocker system prune -a\n\n# Get container IP address\ndocker inspect container-name | grep IPAddress\n\n# Get container environment variables\ndocker inspect container-name | grep Env -A 20\n\n# Monitor container resource usage\ndocker stats --no-stream\n\n# Show container sizes\ndocker ps -s\n</code></pre>"},{"location":"docker-essential-commands/#command-cheat-sheet","title":"Command Cheat Sheet","text":""},{"location":"docker-essential-commands/#container-lifecycle","title":"Container Lifecycle","text":"Command Purpose <code>docker run</code> Create and start container <code>docker start</code> Start stopped container <code>docker stop</code> Stop running container <code>docker restart</code> Restart container <code>docker pause</code> Pause container <code>docker unpause</code> Unpause container <code>docker rm</code> Remove container"},{"location":"docker-essential-commands/#image-management","title":"Image Management","text":"Command Purpose <code>docker pull</code> Download image <code>docker build</code> Build image from Dockerfile <code>docker push</code> Upload image to registry <code>docker tag</code> Tag image <code>docker rmi</code> Remove image <code>docker save</code> Export image to tar <code>docker load</code> Import image from tar"},{"location":"docker-essential-commands/#information-commands","title":"Information Commands","text":"Command Purpose <code>docker ps</code> List containers <code>docker images</code> List images <code>docker logs</code> View container logs <code>docker inspect</code> Detailed object information <code>docker stats</code> Resource usage statistics <code>docker top</code> Running processes"},{"location":"docker-essential-commands/#error-handling-and-troubleshooting","title":"Error Handling and Troubleshooting","text":""},{"location":"docker-essential-commands/#common-issues-and-solutions","title":"Common Issues and Solutions","text":"<pre><code># Issue: Permission denied\n# Solution: Add user to docker group\nsudo usermod -aG docker $USER\n# Then logout and login again\n\n# Issue: Port already in use\n# Solution: Use different port or stop service using the port\ndocker run -p 8081:80 nginx  # Use different host port\nsudo lsof -i :8080           # Find what's using port 8080\n\n# Issue: No space left on device\n# Solution: Clean up Docker data\ndocker system prune -a\ndocker volume prune\n\n# Issue: Container exits immediately\n# Solution: Check logs and run interactively\ndocker logs container-name\ndocker run -it image-name /bin/bash\n\n# Issue: Cannot connect to Docker daemon\n# Solution: Start Docker service\nsudo systemctl start docker\n</code></pre>"},{"location":"docker-essential-commands/#debug-commands","title":"Debug Commands","text":"<pre><code># Run container with debug shell\ndocker run -it --entrypoint=/bin/bash image-name\n\n# Check container filesystem changes\ndocker diff container-name\n\n# View Docker daemon logs\njournalctl -u docker.service\n\n# Test Docker installation\ndocker run hello-world\n\n# Check Docker configuration\ndocker info | grep -i root\n</code></pre>"},{"location":"docker-essential-commands/#best-practices","title":"Best Practices","text":""},{"location":"docker-essential-commands/#security-practices","title":"Security Practices","text":"<pre><code># Run as non-root user\ndocker run -u 1000:1000 myapp\n\n# Use read-only filesystem\ndocker run --read-only myapp\n\n# Drop capabilities\ndocker run --cap-drop=ALL --cap-add=NET_BIND_SERVICE myapp\n\n# Set resource limits\ndocker run --memory=256m --cpus=0.5 myapp\n\n# Use secrets for sensitive data\ndocker run --env-file secrets.env myapp\n</code></pre>"},{"location":"docker-essential-commands/#performance-tips","title":"Performance Tips","text":"<pre><code># Use multi-stage builds\ndocker build --target production .\n\n# Use .dockerignore file\necho \"node_modules\" &gt; .dockerignore\necho \"*.log\" &gt;&gt; .dockerignore\n\n# Clean up regularly\ndocker system prune --schedule=\"0 2 * * *\"  # Cron job\n\n# Monitor resource usage\ndocker stats --format \"table {{.Container}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\"\n</code></pre>"},{"location":"docker-essential-commands/#next-steps","title":"Next Steps","text":"<p>After mastering essential Docker commands:</p> <ol> <li>Create your first container</li> <li>Learn Dockerfile creation</li> <li>Understand Docker volumes</li> <li>Explore Docker networking</li> </ol> <p>Mastering these essential Docker commands is fundamental to working effectively with containers. Start with basic commands and gradually incorporate more advanced features as you become comfortable with Docker's workflow.</p>"},{"location":"docker-first-container/","title":"Creating and Running Your First Container","text":""},{"location":"docker-first-container/#overview","title":"Overview","text":"<p>Creating your first Docker container is an exciting milestone in learning containerization. This guide walks you through running existing containers, creating your own, and understanding container fundamentals through hands-on examples.</p>"},{"location":"docker-first-container/#prerequisites","title":"Prerequisites","text":"<p>Ensure Docker is installed and running:</p> <pre><code># Verify Docker installation\ndocker --version\ndocker info\n\n# Test Docker with hello-world\ndocker run hello-world\n</code></pre>"},{"location":"docker-first-container/#running-your-first-container","title":"Running Your First Container","text":""},{"location":"docker-first-container/#hello-world-container","title":"Hello World Container","text":"<pre><code># Run the classic hello-world container\ndocker run hello-world\n\n# Expected output:\n# Hello from Docker!\n# This message shows that your installation appears to be working correctly.\n</code></pre>"},{"location":"docker-first-container/#understanding-what-happened","title":"Understanding What Happened","text":"<pre><code>graph LR\n    A[docker run hello-world] --&gt; B[Docker checks local images]\n    B --&gt; C{Image exists locally?}\n    C --&gt;|No| D[Pull from Docker Hub]\n    C --&gt;|Yes| E[Create container]\n    D --&gt; E\n    E --&gt; F[Start container]\n    F --&gt; G[Execute command]\n    G --&gt; H[Container exits]\n    H --&gt; I[Show output]\n</code></pre>"},{"location":"docker-first-container/#running-interactive-containers","title":"Running Interactive Containers","text":""},{"location":"docker-first-container/#ubuntu-container-with-shell","title":"Ubuntu Container with Shell","text":"<pre><code># Run Ubuntu container interactively\ndocker run -it ubuntu:20.04 /bin/bash\n\n# You're now inside the container!\n# Try some commands:\ncat /etc/os-release\nls -la\nwhoami\nhostname\n\n# Exit the container\nexit\n</code></pre>"},{"location":"docker-first-container/#command-breakdown","title":"Command Breakdown","text":"<pre><code>docker run -it ubuntu:20.04 /bin/bash\n#    \u2502   \u2502  \u2502             \u2502\n#    \u2502   \u2502  \u2502             \u2514\u2500\u2500 Command to run\n#    \u2502   \u2502  \u2514\u2500\u2500 Image name and tag\n#    \u2502   \u2514\u2500\u2500 Interactive mode + pseudo-TTY\n#    \u2514\u2500\u2500 Run command\n</code></pre>"},{"location":"docker-first-container/#exploring-different-distributions","title":"Exploring Different Distributions","text":"<pre><code># Try different Linux distributions\ndocker run -it alpine:latest /bin/sh\ndocker run -it centos:7 /bin/bash\ndocker run -it debian:bullseye /bin/bash\n\n# Each container is isolated and independent\n</code></pre>"},{"location":"docker-first-container/#running-web-applications","title":"Running Web Applications","text":""},{"location":"docker-first-container/#simple-web-server","title":"Simple Web Server","text":"<pre><code># Run Nginx web server\ndocker run -d -p 8080:80 --name my-nginx nginx:latest\n\n# Flags explained:\n# -d: Run in detached mode (background)\n# -p 8080:80: Map host port 8080 to container port 80\n# --name: Give container a custom name\n</code></pre>"},{"location":"docker-first-container/#test-the-web-server","title":"Test the Web Server","text":"<pre><code># Test with curl\ncurl http://localhost:8080\n\n# Or open in browser: http://localhost:8080\n# You should see the Nginx welcome page\n</code></pre>"},{"location":"docker-first-container/#apache-web-server","title":"Apache Web Server","text":"<pre><code># Run Apache HTTP server\ndocker run -d -p 8081:80 --name my-apache httpd:latest\n\n# Test it\ncurl http://localhost:8081\n</code></pre>"},{"location":"docker-first-container/#container-management","title":"Container Management","text":""},{"location":"docker-first-container/#listing-containers","title":"Listing Containers","text":"<pre><code># List running containers\ndocker ps\n\n# List all containers (running and stopped)\ndocker ps -a\n\n# List container IDs only\ndocker ps -q\n</code></pre>"},{"location":"docker-first-container/#stopping-and-starting-containers","title":"Stopping and Starting Containers","text":"<pre><code># Stop a running container\ndocker stop my-nginx\n\n# Start a stopped container\ndocker start my-nginx\n\n# Restart a container\ndocker restart my-nginx\n\n# Check container status\ndocker ps\n</code></pre>"},{"location":"docker-first-container/#container-logs","title":"Container Logs","text":"<pre><code># View container logs\ndocker logs my-nginx\n\n# Follow logs in real-time\ndocker logs -f my-nginx\n\n# Show last 10 lines\ndocker logs --tail 10 my-nginx\n\n# Show logs with timestamps\ndocker logs -t my-nginx\n</code></pre>"},{"location":"docker-first-container/#creating-your-first-custom-container","title":"Creating Your First Custom Container","text":""},{"location":"docker-first-container/#method-1-modify-existing-container","title":"Method 1: Modify Existing Container","text":""},{"location":"docker-first-container/#step-1-start-with-base-image","title":"Step 1: Start with Base Image","text":"<pre><code># Run Ubuntu container\ndocker run -it --name my-custom ubuntu:20.04 /bin/bash\n</code></pre>"},{"location":"docker-first-container/#step-2-install-software-inside-container","title":"Step 2: Install Software Inside Container","text":"<pre><code># Inside the container, install packages\napt update\napt install -y curl wget vim htop\n\n# Create a simple script\necho '#!/bin/bash\necho \"Hello from my custom container!\"\necho \"Current date: $(date)\"\necho \"System info: $(uname -a)\"' &gt; /usr/local/bin/hello.sh\n\nchmod +x /usr/local/bin/hello.sh\n\n# Test the script\nhello.sh\n\n# Exit container\nexit\n</code></pre>"},{"location":"docker-first-container/#step-3-commit-changes-to-new-image","title":"Step 3: Commit Changes to New Image","text":"<pre><code># Create new image from modified container\ndocker commit my-custom my-custom-ubuntu:v1.0\n\n# Verify new image\ndocker images | grep my-custom\n\n# Run container from new image\ndocker run -it my-custom-ubuntu:v1.0 hello.sh\n</code></pre>"},{"location":"docker-first-container/#method-2-using-dockerfile-recommended","title":"Method 2: Using Dockerfile (Recommended)","text":""},{"location":"docker-first-container/#step-1-create-project-directory","title":"Step 1: Create Project Directory","text":"<pre><code># Create directory for your first container\nmkdir my-first-container\ncd my-first-container\n</code></pre>"},{"location":"docker-first-container/#step-2-create-application-files","title":"Step 2: Create Application Files","text":"<pre><code># Create a simple Python web application\ncat &gt; app.py &lt;&lt; 'EOF'\n#!/usr/bin/env python3\nimport http.server\nimport socketserver\nimport datetime\nimport os\n\nPORT = int(os.environ.get('PORT', 8000))\n\nclass MyHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):\n    def do_GET(self):\n        if self.path == '/':\n            self.send_response(200)\n            self.send_header('Content-type', 'text/html')\n            self.end_headers()\n\n            html_content = f\"\"\"\n            &lt;!DOCTYPE html&gt;\n            &lt;html&gt;\n            &lt;head&gt;\n                &lt;title&gt;My First Container App&lt;/title&gt;\n                &lt;style&gt;\n                    body {{ font-family: Arial, sans-serif; margin: 40px; }}\n                    .container {{ max-width: 600px; margin: 0 auto; }}\n                    .info {{ background: #f0f0f0; padding: 20px; border-radius: 5px; }}\n                &lt;/style&gt;\n            &lt;/head&gt;\n            &lt;body&gt;\n                &lt;div class=\"container\"&gt;\n                    &lt;h1&gt;\ud83d\udc33 My First Container Application&lt;/h1&gt;\n                    &lt;div class=\"info\"&gt;\n                        &lt;p&gt;&lt;strong&gt;Current Time:&lt;/strong&gt; {datetime.datetime.now()}&lt;/p&gt;\n                        &lt;p&gt;&lt;strong&gt;Server Port:&lt;/strong&gt; {PORT}&lt;/p&gt;\n                        &lt;p&gt;&lt;strong&gt;Container ID:&lt;/strong&gt; {os.uname().nodename}&lt;/p&gt;\n                        &lt;p&gt;&lt;strong&gt;Python Version:&lt;/strong&gt; {os.sys.version}&lt;/p&gt;\n                    &lt;/div&gt;\n                    &lt;h2&gt;Congratulations! \ud83c\udf89&lt;/h2&gt;\n                    &lt;p&gt;You've successfully created and deployed your first containerized application!&lt;/p&gt;\n                &lt;/div&gt;\n            &lt;/body&gt;\n            &lt;/html&gt;\n            \"\"\"\n\n            self.wfile.write(html_content.encode())\n        else:\n            super().do_GET()\n\nif __name__ == \"__main__\":\n    with socketserver.TCPServer((\"\", PORT), MyHTTPRequestHandler) as httpd:\n        print(f\"Server running on port {PORT}\")\n        print(f\"Visit http://localhost:{PORT}\")\n        httpd.serve_forever()\nEOF\n\nchmod +x app.py\n</code></pre>"},{"location":"docker-first-container/#step-3-create-dockerfile","title":"Step 3: Create Dockerfile","text":"<pre><code># Dockerfile\nFROM python:3.11-slim\n\n# Set working directory\nWORKDIR /app\n\n# Copy application file\nCOPY app.py .\n\n# Expose port\nEXPOSE 8000\n\n# Create non-root user for security\nRUN groupadd -r appuser &amp;&amp; useradd -r -g appuser appuser\nRUN chown -R appuser:appuser /app\nUSER appuser\n\n# Command to run application\nCMD [\"python\", \"app.py\"]\n</code></pre>"},{"location":"docker-first-container/#step-4-build-your-image","title":"Step 4: Build Your Image","text":"<pre><code># Build the image\ndocker build -t my-first-app:1.0 .\n\n# Verify the image was created\ndocker images | grep my-first-app\n</code></pre>"},{"location":"docker-first-container/#step-5-run-your-container","title":"Step 5: Run Your Container","text":"<pre><code># Run your custom container\ndocker run -d -p 8000:8000 --name my-app my-first-app:1.0\n\n# Test the application\ncurl http://localhost:8000\n\n# Or visit http://localhost:8000 in your browser\n</code></pre>"},{"location":"docker-first-container/#advanced-container-operations","title":"Advanced Container Operations","text":""},{"location":"docker-first-container/#environment-variables","title":"Environment Variables","text":"<pre><code># Run container with environment variables\ndocker run -d -p 8001:8000 \\\n  -e PORT=8000 \\\n  -e APP_NAME=\"My Custom App\" \\\n  --name my-app-env \\\n  my-first-app:1.0\n\n# View container environment\ndocker exec my-app-env env\n</code></pre>"},{"location":"docker-first-container/#volume-mounting","title":"Volume Mounting","text":"<pre><code># Create local directory\nmkdir app-data\n\n# Run container with volume mount\ndocker run -d -p 8002:8000 \\\n  -v $(pwd)/app-data:/app/data \\\n  --name my-app-volume \\\n  my-first-app:1.0\n\n# File changes in app-data/ will be reflected in container\n</code></pre>"},{"location":"docker-first-container/#container-networking","title":"Container Networking","text":"<pre><code># Create custom network\ndocker network create my-network\n\n# Run containers on custom network\ndocker run -d --network my-network --name app1 my-first-app:1.0\ndocker run -d --network my-network --name app2 my-first-app:1.0\n\n# Containers can communicate using names\ndocker exec app1 ping app2\n</code></pre>"},{"location":"docker-first-container/#multi-container-application","title":"Multi-Container Application","text":""},{"location":"docker-first-container/#step-1-create-database-container","title":"Step 1: Create Database Container","text":"<pre><code># Run MySQL database\ndocker run -d \\\n  --name my-database \\\n  -e MYSQL_ROOT_PASSWORD=secret \\\n  -e MYSQL_DATABASE=myapp \\\n  -e MYSQL_USER=appuser \\\n  -e MYSQL_PASSWORD=apppass \\\n  -p 3306:3306 \\\n  mysql:8.0\n</code></pre>"},{"location":"docker-first-container/#step-2-create-web-application-with-database-connection","title":"Step 2: Create Web Application with Database Connection","text":"<pre><code># Create db_app.py\ncat &gt; db_app.py &lt;&lt; 'EOF'\n#!/usr/bin/env python3\nimport http.server\nimport socketserver\nimport json\nimport os\nimport mysql.connector\nfrom urllib.parse import urlparse, parse_qs\n\nPORT = int(os.environ.get('PORT', 8000))\nDB_HOST = os.environ.get('DB_HOST', 'localhost')\nDB_USER = os.environ.get('DB_USER', 'appuser')\nDB_PASS = os.environ.get('DB_PASS', 'apppass')\nDB_NAME = os.environ.get('DB_NAME', 'myapp')\n\nclass DatabaseHandler(http.server.SimpleHTTPRequestHandler):\n    def get_db_connection(self):\n        try:\n            return mysql.connector.connect(\n                host=DB_HOST,\n                user=DB_USER,\n                password=DB_PASS,\n                database=DB_NAME\n            )\n        except Exception as e:\n            return None\n\n    def do_GET(self):\n        if self.path == '/':\n            self.send_response(200)\n            self.send_header('Content-type', 'text/html')\n            self.end_headers()\n\n            # Try to connect to database\n            conn = self.get_db_connection()\n            if conn:\n                status = \"\u2705 Database Connected\"\n                conn.close()\n            else:\n                status = \"\u274c Database Connection Failed\"\n\n            html = f\"\"\"\n            &lt;!DOCTYPE html&gt;\n            &lt;html&gt;\n            &lt;head&gt;&lt;title&gt;Database App&lt;/title&gt;&lt;/head&gt;\n            &lt;body&gt;\n                &lt;h1&gt;\ud83d\udc33 Multi-Container Application&lt;/h1&gt;\n                &lt;p&gt;&lt;strong&gt;Database Status:&lt;/strong&gt; {status}&lt;/p&gt;\n                &lt;p&gt;&lt;strong&gt;Database Host:&lt;/strong&gt; {DB_HOST}&lt;/p&gt;\n                &lt;p&gt;&lt;strong&gt;App Port:&lt;/strong&gt; {PORT}&lt;/p&gt;\n            &lt;/body&gt;\n            &lt;/html&gt;\n            \"\"\"\n            self.wfile.write(html.encode())\n        else:\n            super().do_GET()\n\nif __name__ == \"__main__\":\n    with socketserver.TCPServer((\"\", PORT), DatabaseHandler) as httpd:\n        print(f\"Database app running on port {PORT}\")\n        httpd.serve_forever()\nEOF\n</code></pre>"},{"location":"docker-first-container/#step-3-create-dockerfile-for-database-app","title":"Step 3: Create Dockerfile for Database App","text":"<pre><code># Dockerfile.db\nFROM python:3.11-slim\n\n# Install MySQL connector\nRUN pip install mysql-connector-python\n\nWORKDIR /app\nCOPY db_app.py .\n\nRUN groupadd -r appuser &amp;&amp; useradd -r -g appuser appuser\nRUN chown -R appuser:appuser /app\nUSER appuser\n\nEXPOSE 8000\nCMD [\"python\", \"db_app.py\"]\n</code></pre>"},{"location":"docker-first-container/#step-4-build-and-run-database-app","title":"Step 4: Build and Run Database App","text":"<pre><code># Build database app image\ndocker build -f Dockerfile.db -t my-db-app:1.0 .\n\n# Run with connection to database\ndocker run -d -p 8003:8000 \\\n  -e DB_HOST=my-database \\\n  -e DB_USER=appuser \\\n  -e DB_PASS=apppass \\\n  -e DB_NAME=myapp \\\n  --link my-database:my-database \\\n  --name my-db-app \\\n  my-db-app:1.0\n\n# Test the application\ncurl http://localhost:8003\n</code></pre>"},{"location":"docker-first-container/#container-inspection-and-debugging","title":"Container Inspection and Debugging","text":""},{"location":"docker-first-container/#inspect-container-details","title":"Inspect Container Details","text":"<pre><code># Get detailed container information\ndocker inspect my-app\n\n# Get specific information\ndocker inspect my-app | grep IPAddress\ndocker inspect my-app | jq '.[0].Config.Env'\n\n# Show container processes\ndocker top my-app\n\n# Show container resource usage\ndocker stats my-app --no-stream\n</code></pre>"},{"location":"docker-first-container/#execute-commands-in-running-container","title":"Execute Commands in Running Container","text":"<pre><code># Execute bash shell in running container\ndocker exec -it my-app /bin/bash\n\n# Execute single command\ndocker exec my-app ls -la /app\ndocker exec my-app ps aux\ndocker exec my-app cat /etc/passwd\n\n# Execute as root user\ndocker exec -u root -it my-app /bin/bash\n</code></pre>"},{"location":"docker-first-container/#debugging-container-issues","title":"Debugging Container Issues","text":"<pre><code># View container logs\ndocker logs my-app\n\n# Follow logs\ndocker logs -f my-app\n\n# Check why container stopped\ndocker ps -a\ndocker logs container-name\n\n# Inspect container changes\ndocker diff my-app\n</code></pre>"},{"location":"docker-first-container/#container-lifecycle-management","title":"Container Lifecycle Management","text":""},{"location":"docker-first-container/#container-states","title":"Container States","text":"<pre><code>graph LR\n    A[Created] --&gt; B[Running]\n    B --&gt; C[Paused]\n    C --&gt; B\n    B --&gt; D[Stopped]\n    D --&gt; B\n    D --&gt; E[Removed]\n    A --&gt; E\n</code></pre>"},{"location":"docker-first-container/#managing-container-lifecycle","title":"Managing Container Lifecycle","text":"<pre><code># Create container without starting\ndocker create --name my-created-app my-first-app:1.0\n\n# Start created container\ndocker start my-created-app\n\n# Pause running container\ndocker pause my-app\n\n# Unpause container\ndocker unpause my-app\n\n# Stop container gracefully\ndocker stop my-app\n\n# Kill container forcefully\ndocker kill my-app\n\n# Remove stopped container\ndocker rm my-app\n\n# Remove running container (force)\ndocker rm -f my-app\n</code></pre>"},{"location":"docker-first-container/#cleanup-and-best-practices","title":"Cleanup and Best Practices","text":""},{"location":"docker-first-container/#cleaning-up-containers","title":"Cleaning Up Containers","text":"<pre><code># Remove all stopped containers\ndocker container prune\n\n# Remove specific container\ndocker rm my-nginx my-apache\n\n# Remove running container (force)\ndocker rm -f my-app\n\n# Remove all containers (dangerous!)\ndocker rm -f $(docker ps -aq)\n</code></pre>"},{"location":"docker-first-container/#cleaning-up-images","title":"Cleaning Up Images","text":"<pre><code># Remove unused images\ndocker image prune\n\n# Remove specific image\ndocker rmi my-first-app:1.0\n\n# Remove all images (dangerous!)\ndocker rmi $(docker images -q)\n</code></pre>"},{"location":"docker-first-container/#resource-monitoring","title":"Resource Monitoring","text":"<pre><code># Monitor resource usage\ndocker stats\n\n# Monitor specific containers\ndocker stats my-app my-nginx\n\n# Show disk usage\ndocker system df\n\n# Show detailed disk usage\ndocker system df -v\n</code></pre>"},{"location":"docker-first-container/#common-patterns-and-examples","title":"Common Patterns and Examples","text":""},{"location":"docker-first-container/#development-environment","title":"Development Environment","text":"<pre><code># Run development container with code mounting\ndocker run -it \\\n  -v $(pwd):/workspace \\\n  -w /workspace \\\n  -p 8000:8000 \\\n  python:3.11 \\\n  bash\n\n# Inside container: python app.py\n</code></pre>"},{"location":"docker-first-container/#quick-database-for-testing","title":"Quick Database for Testing","text":"<pre><code># PostgreSQL for development\ndocker run -d \\\n  --name dev-postgres \\\n  -e POSTGRES_PASSWORD=dev \\\n  -e POSTGRES_DB=testdb \\\n  -p 5432:5432 \\\n  postgres:15\n\n# Redis for caching\ndocker run -d \\\n  --name dev-redis \\\n  -p 6379:6379 \\\n  redis:alpine\n</code></pre>"},{"location":"docker-first-container/#file-processing-container","title":"File Processing Container","text":"<pre><code># Process files with temporary container\ndocker run --rm \\\n  -v $(pwd)/input:/input \\\n  -v $(pwd)/output:/output \\\n  ubuntu:20.04 \\\n  bash -c \"cp /input/* /output/ &amp;&amp; echo 'Files processed'\"\n</code></pre>"},{"location":"docker-first-container/#security-best-practices","title":"Security Best Practices","text":""},{"location":"docker-first-container/#run-as-non-root-user","title":"Run as Non-Root User","text":"<pre><code># In Dockerfile\nRUN groupadd -r appuser &amp;&amp; useradd -r -g appuser appuser\nUSER appuser\n</code></pre>"},{"location":"docker-first-container/#limit-resources","title":"Limit Resources","text":"<pre><code># Limit memory and CPU\ndocker run -d \\\n  --memory=512m \\\n  --cpus=1.0 \\\n  --name limited-app \\\n  my-first-app:1.0\n</code></pre>"},{"location":"docker-first-container/#read-only-filesystem","title":"Read-Only Filesystem","text":"<pre><code># Run with read-only filesystem\ndocker run -d \\\n  --read-only \\\n  --tmpfs /tmp \\\n  --name readonly-app \\\n  my-first-app:1.0\n</code></pre>"},{"location":"docker-first-container/#troubleshooting-common-issues","title":"Troubleshooting Common Issues","text":""},{"location":"docker-first-container/#container-wont-start","title":"Container Won't Start","text":"<pre><code># Check logs for errors\ndocker logs container-name\n\n# Try running interactively\ndocker run -it image-name /bin/bash\n\n# Check image exists\ndocker images | grep image-name\n</code></pre>"},{"location":"docker-first-container/#port-already-in-use","title":"Port Already in Use","text":"<pre><code># Find what's using the port\nsudo lsof -i :8080\n\n# Use different port\ndocker run -p 8081:80 nginx\n</code></pre>"},{"location":"docker-first-container/#permission-issues","title":"Permission Issues","text":"<pre><code># Run as root for debugging\ndocker exec -u root -it container-name /bin/bash\n\n# Check file ownership\ndocker exec container-name ls -la /app\n</code></pre>"},{"location":"docker-first-container/#next-steps","title":"Next Steps","text":"<p>After mastering your first container:</p> <ol> <li>Learn image management</li> <li>Master Docker volumes</li> <li>Understand Docker networking</li> <li>Explore Docker Compose</li> </ol>"},{"location":"docker-first-container/#summary","title":"Summary","text":"<p>You've successfully:</p> Achievement Description Run existing containers Used pre-built images from Docker Hub Created custom containers Built your own containerized applications Managed container lifecycle Started, stopped, and monitored containers Connected containers Created multi-container applications Applied best practices Implemented security and resource management <p>These fundamentals provide the foundation for more advanced Docker concepts and real-world containerization scenarios.</p>"},{"location":"docker-image-container-concepts/","title":"Understanding Image and Container Concepts","text":""},{"location":"docker-image-container-concepts/#what-are-docker-images","title":"What are Docker Images?","text":"<p>Docker images are read-only templates used to create containers. Think of them as blueprints or snapshots that contain:</p> <ul> <li>Application code</li> <li>Runtime environment</li> <li>System libraries</li> <li>Dependencies</li> <li>Configuration files</li> <li>Environment variables</li> </ul>"},{"location":"docker-image-container-concepts/#image-characteristics","title":"Image Characteristics","text":"<ul> <li>Immutable: Once created, images don't change</li> <li>Layered: Built using a layered filesystem</li> <li>Portable: Can run on any system with Docker</li> <li>Versionable: Can be tagged with different versions</li> </ul>"},{"location":"docker-image-container-concepts/#what-are-docker-containers","title":"What are Docker Containers?","text":"<p>Containers are running instances of Docker images. They are:</p> <ul> <li>Lightweight: Share the host OS kernel</li> <li>Isolated: Run in their own process space</li> <li>Temporary: Can be created, started, stopped, and deleted</li> <li>Stateful: Can maintain state during runtime</li> </ul>"},{"location":"docker-image-container-concepts/#image-vs-container-relationship","title":"Image vs Container Relationship","text":"<pre><code>graph TD\n    A[Docker Image] --&gt;|docker run| B[Container 1]\n    A --&gt;|docker run| C[Container 2]\n    A --&gt;|docker run| D[Container 3]\n\n    E[Image: Ubuntu 20.04] --&gt;|run| F[Container: Web Server]\n    E --&gt;|run| G[Container: Database]\n    E --&gt;|run| H[Container: Cache]\n\n    style A fill:#e1f5fe\n    style E fill:#e1f5fe\n    style B fill:#fff3e0\n    style C fill:#fff3e0\n    style D fill:#fff3e0\n    style F fill:#fff3e0\n    style G fill:#fff3e0\n    style H fill:#fff3e0\n</code></pre>"},{"location":"docker-image-container-concepts/#docker-image-layers","title":"Docker Image Layers","text":"<p>Images are built using a layered filesystem. Each layer represents a change or addition:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2190 Container Layer (Read/Write)\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    Application Code     \u2502  \u2190 Layer 4 (Read-Only)\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    Dependencies         \u2502  \u2190 Layer 3 (Read-Only)\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    Runtime Environment  \u2502  \u2190 Layer 2 (Read-Only)\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    Base OS             \u2502  \u2190 Layer 1 (Read-Only)\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"docker-image-container-concepts/#layer-benefits","title":"Layer Benefits","text":"<ol> <li>Storage Efficiency: Shared layers between images</li> <li>Fast Downloads: Only new layers are downloaded</li> <li>Caching: Build cache speeds up image creation</li> <li>Version Control: Easy to track changes</li> </ol>"},{"location":"docker-image-container-concepts/#container-lifecycle","title":"Container Lifecycle","text":"<pre><code>graph LR\n    A[Image] --&gt;|docker create| B[Created]\n    B --&gt;|docker start| C[Running]\n    C --&gt;|docker stop| D[Stopped]\n    C --&gt;|docker pause| E[Paused]\n    E --&gt;|docker unpause| C\n    D --&gt;|docker start| C\n    D --&gt;|docker rm| F[Removed]\n    B --&gt;|docker rm| F\n</code></pre>"},{"location":"docker-image-container-concepts/#container-states","title":"Container States","text":"State Description Commands Created Container exists but not started <code>docker create</code> Running Container is actively running <code>docker start</code>, <code>docker run</code> Stopped Container stopped but still exists <code>docker stop</code> Paused Container paused (processes frozen) <code>docker pause</code> Removed Container deleted from system <code>docker rm</code>"},{"location":"docker-image-container-concepts/#working-with-images","title":"Working with Images","text":""},{"location":"docker-image-container-concepts/#pulling-images","title":"Pulling Images","text":"<pre><code># Pull image from Docker Hub\ndocker pull ubuntu:20.04\ndocker pull nginx:latest\ndocker pull node:18-alpine\n\n# Pull from specific registry\ndocker pull gcr.io/google-containers/nginx\n</code></pre>"},{"location":"docker-image-container-concepts/#listing-images","title":"Listing Images","text":"<pre><code># List all images\ndocker images\n\n# List with specific format\ndocker images --format \"table {{.Repository}}\\t{{.Tag}}\\t{{.Size}}\"\n\n# List image IDs only\ndocker images -q\n</code></pre>"},{"location":"docker-image-container-concepts/#image-information","title":"Image Information","text":"<pre><code># Inspect image details\ndocker inspect ubuntu:20.04\n\n# View image history (layers)\ndocker history ubuntu:20.04\n\n# Check image size and usage\ndocker system df\n</code></pre>"},{"location":"docker-image-container-concepts/#removing-images","title":"Removing Images","text":"<pre><code># Remove specific image\ndocker rmi ubuntu:20.04\n\n# Remove image by ID\ndocker rmi 1a2b3c4d5e6f\n\n# Remove unused images\ndocker image prune\n\n# Remove all images\ndocker rmi $(docker images -q)\n</code></pre>"},{"location":"docker-image-container-concepts/#working-with-containers","title":"Working with Containers","text":""},{"location":"docker-image-container-concepts/#creating-and-running-containers","title":"Creating and Running Containers","text":"<pre><code># Run container from image\ndocker run ubuntu:20.04\n\n# Run with interactive terminal\ndocker run -it ubuntu:20.04 /bin/bash\n\n# Run in background (detached)\ndocker run -d nginx:latest\n\n# Run with custom name\ndocker run --name my-nginx -d nginx:latest\n\n# Run with port mapping\ndocker run -p 8080:80 -d nginx:latest\n</code></pre>"},{"location":"docker-image-container-concepts/#container-management","title":"Container Management","text":"<pre><code># List running containers\ndocker ps\n\n# List all containers (including stopped)\ndocker ps -a\n\n# Start stopped container\ndocker start container-name\n\n# Stop running container\ndocker stop container-name\n\n# Restart container\ndocker restart container-name\n\n# Remove container\ndocker rm container-name\n</code></pre>"},{"location":"docker-image-container-concepts/#container-interaction","title":"Container Interaction","text":"<pre><code># Execute command in running container\ndocker exec -it container-name /bin/bash\n\n# View container logs\ndocker logs container-name\n\n# Follow logs in real-time\ndocker logs -f container-name\n\n# Copy files to/from container\ndocker cp file.txt container-name:/path/\ndocker cp container-name:/path/file.txt ./\n</code></pre>"},{"location":"docker-image-container-concepts/#practical-examples","title":"Practical Examples","text":""},{"location":"docker-image-container-concepts/#example-1-running-a-web-server","title":"Example 1: Running a Web Server","text":"<pre><code># Pull and run Nginx\ndocker run -d \\\n  --name my-web-server \\\n  -p 8080:80 \\\n  nginx:latest\n\n# Access the server\ncurl http://localhost:8080\n</code></pre>"},{"location":"docker-image-container-concepts/#example-2-running-a-database","title":"Example 2: Running a Database","text":"<pre><code># Run MySQL database\ndocker run -d \\\n  --name my-database \\\n  -e MYSQL_ROOT_PASSWORD=secret \\\n  -e MYSQL_DATABASE=myapp \\\n  -p 3306:3306 \\\n  mysql:8.0\n</code></pre>"},{"location":"docker-image-container-concepts/#example-3-development-environment","title":"Example 3: Development Environment","text":"<pre><code># Run Node.js development environment\ndocker run -it \\\n  --name node-dev \\\n  -v $(pwd):/app \\\n  -w /app \\\n  -p 3000:3000 \\\n  node:18 \\\n  /bin/bash\n</code></pre>"},{"location":"docker-image-container-concepts/#image-naming-and-tagging","title":"Image Naming and Tagging","text":""},{"location":"docker-image-container-concepts/#naming-convention","title":"Naming Convention","text":"<pre><code>[registry]/[namespace]/[repository]:[tag]\n</code></pre> <p>Examples: <pre><code># Official images\nubuntu:20.04\nnginx:latest\nnode:18-alpine\n\n# User/organization images\nmycompany/webapp:v1.0\nusername/myapp:latest\n\n# Private registry\nregistry.company.com/team/app:production\n</code></pre></p>"},{"location":"docker-image-container-concepts/#tagging-images","title":"Tagging Images","text":"<pre><code># Tag existing image\ndocker tag ubuntu:20.04 my-ubuntu:custom\n\n# Tag for registry\ndocker tag myapp:latest registry.company.com/myapp:v1.0\n\n# Multiple tags for same image\ndocker tag myapp:latest myapp:stable\ndocker tag myapp:latest myapp:v1.0.0\n</code></pre>"},{"location":"docker-image-container-concepts/#container-filesystem","title":"Container Filesystem","text":""},{"location":"docker-image-container-concepts/#container-layers","title":"Container Layers","text":"<pre><code>Container Layer (Read/Write)\n\u251c\u2500\u2500 /var/log/app.log        \u2190 New files\n\u251c\u2500\u2500 /etc/config.conf        \u2190 Modified files\n\u2514\u2500\u2500 /tmp/cache/             \u2190 Temporary files\n\nImage Layers (Read-Only)\n\u251c\u2500\u2500 Layer 3: Application\n\u251c\u2500\u2500 Layer 2: Dependencies  \n\u251c\u2500\u2500 Layer 1: Base OS\n\u2514\u2500\u2500 Layer 0: Kernel (Host)\n</code></pre>"},{"location":"docker-image-container-concepts/#data-persistence","title":"Data Persistence","text":"<p>Containers are ephemeral by default. To persist data:</p> <pre><code># Using volumes\ndocker run -v mydata:/data ubuntu:20.04\n\n# Using bind mounts\ndocker run -v /host/path:/container/path ubuntu:20.04\n\n# Using tmpfs mounts\ndocker run --tmpfs /tmp ubuntu:20.04\n</code></pre>"},{"location":"docker-image-container-concepts/#best-practices","title":"Best Practices","text":""},{"location":"docker-image-container-concepts/#image-best-practices","title":"Image Best Practices","text":"<ol> <li> <p>Use official base images <pre><code>FROM node:18-alpine\n</code></pre></p> </li> <li> <p>Use specific tags <pre><code>FROM ubuntu:20.04  # Not ubuntu:latest\n</code></pre></p> </li> <li> <p>Minimize layers <pre><code>RUN apt-get update &amp;&amp; apt-get install -y \\\n    curl \\\n    vim \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\n</code></pre></p> </li> <li> <p>Use .dockerignore <pre><code>node_modules\n.git\n*.log\n</code></pre></p> </li> </ol>"},{"location":"docker-image-container-concepts/#container-best-practices","title":"Container Best Practices","text":"<ol> <li> <p>Run as non-root user <pre><code>USER appuser\n</code></pre></p> </li> <li> <p>Use proper signals <pre><code>docker stop container-name  # Sends SIGTERM\n</code></pre></p> </li> <li> <p>Resource limits <pre><code>docker run --memory=512m --cpus=1.0 myapp\n</code></pre></p> </li> <li> <p>Health checks <pre><code>HEALTHCHECK --interval=30s --timeout=3s \\\n  CMD curl -f http://localhost/ || exit 1\n</code></pre></p> </li> </ol>"},{"location":"docker-image-container-concepts/#common-patterns","title":"Common Patterns","text":""},{"location":"docker-image-container-concepts/#development-workflow","title":"Development Workflow","text":"<pre><code>graph LR\n    A[Write Code] --&gt; B[Build Image]\n    B --&gt; C[Test Container]\n    C --&gt; D{Tests Pass?}\n    D --&gt;|No| A\n    D --&gt;|Yes| E[Push Image]\n    E --&gt; F[Deploy Container]\n</code></pre>"},{"location":"docker-image-container-concepts/#multi-stage-development","title":"Multi-Stage Development","text":"<pre><code># Development\ndocker run -v $(pwd):/app -it node:18 /bin/bash\n\n# Testing\ndocker run --rm -v $(pwd):/app node:18 npm test\n\n# Production\ndocker build -t myapp:prod .\ndocker run -d myapp:prod\n</code></pre>"},{"location":"docker-image-container-concepts/#troubleshooting","title":"Troubleshooting","text":""},{"location":"docker-image-container-concepts/#common-issues","title":"Common Issues","text":"<pre><code># Container exits immediately\ndocker logs container-name\n\n# Check container processes\ndocker exec container-name ps aux\n\n# Inspect container configuration\ndocker inspect container-name\n\n# Monitor resource usage\ndocker stats container-name\n</code></pre>"},{"location":"docker-image-container-concepts/#debug-commands","title":"Debug Commands","text":"<pre><code># Run container with override\ndocker run -it --entrypoint /bin/bash image-name\n\n# Check container filesystem changes\ndocker diff container-name\n\n# Export container as tar\ndocker export container-name &gt; container.tar\n</code></pre>"},{"location":"docker-image-container-concepts/#summary","title":"Summary","text":"Concept Description Key Commands Image Read-only template <code>docker pull</code>, <code>docker images</code>, <code>docker rmi</code> Container Running instance <code>docker run</code>, <code>docker ps</code>, <code>docker stop</code> Layer Filesystem change <code>docker history</code>, <code>docker inspect</code> Registry Image storage <code>docker push</code>, <code>docker pull</code> <p>Understanding images and containers is fundamental to working with Docker effectively. Images serve as the foundation, while containers provide the runtime environment where your applications actually execute.</p>"},{"location":"docker-image-container-concepts/#next-steps","title":"Next Steps","text":"<ul> <li>Learn essential Docker commands</li> <li>Create your first container</li> <li>Build custom images with Dockerfile</li> </ul>"},{"location":"docker-installation/","title":"Installing Docker on Various Operating Systems","text":""},{"location":"docker-installation/#prerequisites","title":"Prerequisites","text":"<p>Before installing Docker, ensure your system meets the minimum requirements:</p> <ul> <li>64-bit operating system</li> <li>Sufficient RAM (4GB recommended)</li> <li>Virtualization support enabled in BIOS</li> <li>Administrator/root privileges</li> </ul>"},{"location":"docker-installation/#windows-installation","title":"Windows Installation","text":""},{"location":"docker-installation/#windows-1011-pro-enterprise-or-education","title":"Windows 10/11 Pro, Enterprise, or Education","text":""},{"location":"docker-installation/#method-1-docker-desktop-recommended","title":"Method 1: Docker Desktop (Recommended)","text":"<ol> <li> <p>Download Docker Desktop <pre><code>Visit: https://www.docker.com/products/docker-desktop\nDownload: Docker Desktop for Windows\n</code></pre></p> </li> <li> <p>Install Docker Desktop</p> </li> <li>Run the installer as Administrator</li> <li>Follow the installation wizard</li> <li> <p>Enable WSL 2 integration when prompted</p> </li> <li> <p>Post-Installation Setup <pre><code># Verify installation\ndocker --version\ndocker run hello-world\n</code></pre></p> </li> </ol>"},{"location":"docker-installation/#method-2-docker-engine-on-wsl-2","title":"Method 2: Docker Engine on WSL 2","text":"<ol> <li> <p>Install WSL 2 <pre><code>wsl --install\nwsl --set-default-version 2\n</code></pre></p> </li> <li> <p>Install Docker in WSL 2 <pre><code># Update package list\nsudo apt update\n\n# Install prerequisites\nsudo apt install apt-transport-https ca-certificates curl gnupg lsb-release\n\n# Add Docker's official GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n# Add Docker repository\necho \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\n# Install Docker\nsudo apt update\nsudo apt install docker-ce docker-ce-cli containerd.io\n\n# Start Docker service\nsudo service docker start\n\n# Add user to docker group\nsudo usermod -aG docker $USER\n</code></pre></p> </li> </ol>"},{"location":"docker-installation/#windows-10-home","title":"Windows 10 Home","text":"<p>For Windows 10 Home, you need to:</p> <ol> <li>Enable WSL 2 first</li> <li>Install Docker Desktop with WSL 2 backend</li> </ol>"},{"location":"docker-installation/#macos-installation","title":"macOS Installation","text":""},{"location":"docker-installation/#intel-macs","title":"Intel Macs","text":"<ol> <li> <p>Download Docker Desktop <pre><code>Visit: https://www.docker.com/products/docker-desktop\nDownload: Docker Desktop for Mac (Intel chip)\n</code></pre></p> </li> <li> <p>Install Docker Desktop <pre><code># Mount the DMG file\n# Drag Docker.app to Applications folder\n# Launch Docker from Applications\n</code></pre></p> </li> <li> <p>Verify Installation <pre><code>docker --version\ndocker run hello-world\n</code></pre></p> </li> </ol>"},{"location":"docker-installation/#apple-silicon-macs-m1m2","title":"Apple Silicon Macs (M1/M2)","text":"<ol> <li> <p>Download Docker Desktop <pre><code>Download: Docker Desktop for Mac (Apple chip)\n</code></pre></p> </li> <li> <p>Install and Configure <pre><code># Same installation process\n# Rosetta 2 may be required for x86 images\n\n# Install Rosetta 2 if needed\n/usr/sbin/softwareupdate --install-rosetta\n</code></pre></p> </li> </ol>"},{"location":"docker-installation/#linux-installation","title":"Linux Installation","text":""},{"location":"docker-installation/#ubuntudebian","title":"Ubuntu/Debian","text":"<pre><code># Remove old versions\nsudo apt-get remove docker docker-engine docker.io containerd runc\n\n# Update package index\nsudo apt-get update\n\n# Install prerequisites\nsudo apt-get install \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release\n\n# Add Docker's official GPG key\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\n# Set up stable repository\necho \\\n  \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\n\n# Install Docker Engine\nsudo apt-get update\nsudo apt-get install docker-ce docker-ce-cli containerd.io\n\n# Start and enable Docker\nsudo systemctl start docker\nsudo systemctl enable docker\n\n# Add user to docker group\nsudo usermod -aG docker $USER\n\n# Verify installation\ndocker --version\nsudo docker run hello-world\n</code></pre>"},{"location":"docker-installation/#centosrhelfedora","title":"CentOS/RHEL/Fedora","text":"<pre><code># Remove old versions\nsudo yum remove docker \\\n                  docker-client \\\n                  docker-client-latest \\\n                  docker-common \\\n                  docker-latest \\\n                  docker-latest-logrotate \\\n                  docker-logrotate \\\n                  docker-engine\n\n# Install yum-utils\nsudo yum install -y yum-utils\n\n# Add Docker repository\nsudo yum-config-manager \\\n    --add-repo \\\n    https://download.docker.com/linux/centos/docker-ce.repo\n\n# Install Docker Engine\nsudo yum install docker-ce docker-ce-cli containerd.io\n\n# Start Docker\nsudo systemctl start docker\nsudo systemctl enable docker\n\n# Add user to docker group\nsudo usermod -aG docker $USER\n\n# Verify installation\ndocker --version\nsudo docker run hello-world\n</code></pre>"},{"location":"docker-installation/#arch-linux","title":"Arch Linux","text":"<pre><code># Update system\nsudo pacman -Syu\n\n# Install Docker\nsudo pacman -S docker\n\n# Start and enable Docker\nsudo systemctl start docker.service\nsudo systemctl enable docker.service\n\n# Add user to docker group\nsudo usermod -aG docker $USER\n\n# Verify installation\ndocker --version\nsudo docker run hello-world\n</code></pre>"},{"location":"docker-installation/#post-installation-configuration","title":"Post-Installation Configuration","text":""},{"location":"docker-installation/#configure-docker-to-start-on-boot","title":"Configure Docker to Start on Boot","text":"<p>Linux (systemd): <pre><code>sudo systemctl enable docker\n</code></pre></p> <p>Windows/macOS: Docker Desktop starts automatically by default.</p>"},{"location":"docker-installation/#configure-docker-without-sudo-linux","title":"Configure Docker Without Sudo (Linux)","text":"<pre><code># Add current user to docker group\nsudo usermod -aG docker $USER\n\n# Log out and log back in, or run:\nnewgrp docker\n\n# Test without sudo\ndocker run hello-world\n</code></pre>"},{"location":"docker-installation/#configure-docker-daemon","title":"Configure Docker Daemon","text":"<p>Create <code>/etc/docker/daemon.json</code>:</p> <pre><code>{\n  \"data-root\": \"/var/lib/docker\",\n  \"storage-driver\": \"overlay2\",\n  \"log-driver\": \"json-file\",\n  \"log-opts\": {\n    \"max-size\": \"10m\",\n    \"max-file\": \"3\"\n  },\n  \"default-address-pools\": [\n    {\n      \"base\": \"172.17.0.0/16\",\n      \"size\": 24\n    }\n  ]\n}\n</code></pre> <p>Then restart Docker: <pre><code>sudo systemctl restart docker\n</code></pre></p>"},{"location":"docker-installation/#installation-verification","title":"Installation Verification","text":""},{"location":"docker-installation/#basic-commands-test","title":"Basic Commands Test","text":"<pre><code># Check Docker version\ndocker --version\ndocker version\n\n# Check Docker info\ndocker info\n\n# Run test container\ndocker run hello-world\n\n# List images\ndocker images\n\n# List containers\ndocker ps -a\n</code></pre>"},{"location":"docker-installation/#resource-usage-check","title":"Resource Usage Check","text":"<pre><code># Check system resources\ndocker system info\ndocker system df\n\n# Monitor Docker events\ndocker events\n</code></pre>"},{"location":"docker-installation/#troubleshooting-common-issues","title":"Troubleshooting Common Issues","text":""},{"location":"docker-installation/#permission-denied","title":"Permission Denied","text":"<pre><code># Solution: Add user to docker group\nsudo usermod -aG docker $USER\n# Then log out and log back in\n</code></pre>"},{"location":"docker-installation/#docker-daemon-not-running","title":"Docker Daemon Not Running","text":"<pre><code># Start Docker service\nsudo systemctl start docker\n\n# Check status\nsudo systemctl status docker\n</code></pre>"},{"location":"docker-installation/#wsl-2-issues-windows","title":"WSL 2 Issues (Windows)","text":"<pre><code># Ensure WSL 2 is installed and set as default\nwsl --list --verbose\nwsl --set-default-version 2\n\n# Update WSL\nwsl --update\n</code></pre>"},{"location":"docker-installation/#virtualization-not-enabled","title":"Virtualization Not Enabled","text":"<ol> <li>Access BIOS/UEFI</li> <li>Enable Intel VT-x or AMD-V</li> <li>Enable Hyper-V (Windows)</li> </ol>"},{"location":"docker-installation/#docker-installation-flow","title":"Docker Installation Flow","text":"<pre><code>graph TD\n    A[Choose Operating System] --&gt; B{Windows?}\n    B --&gt;|Yes| C[Windows 10/11 Pro?]\n    B --&gt;|No| D{macOS?}\n    B --&gt;|No| E{Linux?}\n\n    C --&gt;|Yes| F[Docker Desktop]\n    C --&gt;|No| G[WSL 2 + Docker]\n\n    D --&gt;|Yes| H{Intel or Apple Silicon?}\n    H --&gt;|Intel| I[Docker Desktop Intel]\n    H --&gt;|Apple Silicon| J[Docker Desktop Apple]\n\n    E --&gt;|Yes| K{Distribution?}\n    K --&gt;|Ubuntu/Debian| L[APT Installation]\n    K --&gt;|CentOS/RHEL| M[YUM Installation]\n    K --&gt;|Arch| N[Pacman Installation]\n\n    F --&gt; O[Verify Installation]\n    G --&gt; O\n    I --&gt; O\n    J --&gt; O\n    L --&gt; O\n    M --&gt; O\n    N --&gt; O\n\n    O --&gt; P[Configure Post-Install]\n    P --&gt; Q[Ready to Use Docker]\n</code></pre>"},{"location":"docker-installation/#next-steps","title":"Next Steps","text":"<p>After successful installation:</p> <ol> <li>Learn Docker concepts</li> <li>Master essential commands</li> <li>Create your first container</li> </ol>"},{"location":"docker-installation/#installation-summary","title":"Installation Summary","text":"OS Method Difficulty Notes Windows Pro/Enterprise Docker Desktop Easy Hyper-V required Windows Home WSL 2 + Docker Medium Requires WSL 2 setup macOS Docker Desktop Easy Different for Intel/Apple Silicon Ubuntu/Debian APT Package Manager Easy Most straightforward CentOS/RHEL YUM Package Manager Easy Enterprise-friendly Arch Linux Pacman Medium Rolling release considerations <p>Choose the installation method that best fits your operating system and requirements. Docker Desktop provides the easiest experience for Windows and macOS users, while Linux users have more flexibility with native Docker Engine installation.</p>"},{"location":"docker-introduction/","title":"Introduction to Docker: What and Why?","text":""},{"location":"docker-introduction/#what-is-docker","title":"What is Docker?","text":"<p>Docker is a containerization platform that allows you to package applications and their dependencies into lightweight, portable containers. Think of containers as standardized units that include everything needed to run an application: code, runtime, system tools, libraries, and settings.</p>"},{"location":"docker-introduction/#key-concepts","title":"Key Concepts","text":""},{"location":"docker-introduction/#virtual-machines-vs-containers","title":"Virtual Machines vs Containers","text":"<pre><code>Virtual Machines                    Containers\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502    Application      \u2502            \u2502    Application      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524            \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    Guest OS         \u2502            \u2502    Dependencies     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524            \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    Hypervisor       \u2502            \u2502  Container Runtime  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524            \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502    Host OS          \u2502            \u2502    Host OS          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"docker-introduction/#why-use-docker","title":"Why Use Docker?","text":""},{"location":"docker-introduction/#1-consistency-across-environments","title":"1. Consistency Across Environments","text":"<ul> <li>\"It works on my machine\" problem solved</li> <li>Same environment from development to production</li> <li>Eliminates environment-specific bugs</li> </ul>"},{"location":"docker-introduction/#2-lightweight-and-fast","title":"2. Lightweight and Fast","text":"<ul> <li>Containers share the host OS kernel</li> <li>Start in seconds, not minutes</li> <li>Less resource overhead compared to VMs</li> </ul>"},{"location":"docker-introduction/#3-scalability","title":"3. Scalability","text":"<ul> <li>Easy horizontal scaling</li> <li>Orchestration with Docker Swarm or Kubernetes</li> <li>Microservices architecture support</li> </ul>"},{"location":"docker-introduction/#4-isolation","title":"4. Isolation","text":"<ul> <li>Applications run in isolated environments</li> <li>Dependencies don't conflict</li> <li>Security through separation</li> </ul>"},{"location":"docker-introduction/#5-portability","title":"5. Portability","text":"<ul> <li>Run anywhere Docker is installed</li> <li>Cloud provider agnostic</li> <li>Easy migration between environments</li> </ul>"},{"location":"docker-introduction/#docker-architecture","title":"Docker Architecture","text":"<pre><code>graph TB\n    subgraph \"Docker Host\"\n        subgraph \"Docker Engine\"\n            A[Docker Daemon]\n            B[REST API]\n            C[Docker CLI]\n        end\n\n        subgraph \"Containers\"\n            D[Container 1]\n            E[Container 2]\n            F[Container 3]\n        end\n\n        subgraph \"Images\"\n            G[Image 1]\n            H[Image 2]\n            I[Image 3]\n        end\n    end\n\n    J[Docker Client] --&gt; B\n    C --&gt; A\n    A --&gt; D\n    A --&gt; E\n    A --&gt; F\n    G --&gt; D\n    H --&gt; E\n    I --&gt; F\n</code></pre>"},{"location":"docker-introduction/#core-components","title":"Core Components","text":""},{"location":"docker-introduction/#1-docker-engine","title":"1. Docker Engine","text":"<p>The runtime that manages containers, images, networks, and volumes.</p>"},{"location":"docker-introduction/#2-docker-images","title":"2. Docker Images","text":"<p>Read-only templates used to create containers. Like a blueprint or snapshot.</p>"},{"location":"docker-introduction/#3-docker-containers","title":"3. Docker Containers","text":"<p>Running instances of Docker images. Lightweight and executable.</p>"},{"location":"docker-introduction/#4-dockerfile","title":"4. Dockerfile","text":"<p>Text file with instructions to build Docker images.</p>"},{"location":"docker-introduction/#5-docker-registry","title":"5. Docker Registry","text":"<p>Storage and distribution system for Docker images (e.g., Docker Hub).</p>"},{"location":"docker-introduction/#real-world-use-cases","title":"Real-World Use Cases","text":""},{"location":"docker-introduction/#development","title":"Development","text":"<ul> <li>Consistent development environments</li> <li>Easy onboarding for new team members</li> <li>Testing across different versions</li> </ul>"},{"location":"docker-introduction/#testing","title":"Testing","text":"<ul> <li>Isolated test environments</li> <li>Parallel testing</li> <li>CI/CD pipeline integration</li> </ul>"},{"location":"docker-introduction/#production-deployment","title":"Production Deployment","text":"<ul> <li>Microservices architecture</li> <li>Container orchestration</li> <li>Cloud-native applications</li> </ul>"},{"location":"docker-introduction/#devops","title":"DevOps","text":"<ul> <li>Infrastructure as Code</li> <li>Continuous deployment</li> <li>Environment parity</li> </ul>"},{"location":"docker-introduction/#docker-workflow","title":"Docker Workflow","text":"<pre><code>graph LR\n    A[Write Code] --&gt; B[Create Dockerfile]\n    B --&gt; C[Build Image]\n    C --&gt; D[Push to Registry]\n    D --&gt; E[Pull Image]\n    E --&gt; F[Run Container]\n    F --&gt; G[Deploy to Production]\n</code></pre>"},{"location":"docker-introduction/#benefits-summary","title":"Benefits Summary","text":"Benefit Description Efficiency Better resource utilization than VMs Speed Fast startup and deployment Consistency Same environment everywhere Scalability Easy to scale up or down Security Isolated application environments Cost-effective Reduced infrastructure costs"},{"location":"docker-introduction/#getting-started","title":"Getting Started","text":"<p>To begin your Docker journey:</p> <ol> <li>Install Docker on your system</li> <li>Learn basic commands (docker run, docker build, docker pull)</li> <li>Create your first Dockerfile</li> <li>Build and run your first container</li> <li>Explore Docker Hub for existing images</li> </ol>"},{"location":"docker-introduction/#next-steps","title":"Next Steps","text":"<p>After understanding what Docker is and why it's useful, you should:</p> <ul> <li>Install Docker on your system</li> <li>Learn about images and containers</li> <li>Master essential Docker commands</li> </ul> <p>Docker revolutionizes how we develop, test, and deploy applications. It's not just a tool\u2014it's a fundamental shift in how we think about application deployment and infrastructure management.</p>"},{"location":"docker-overview/","title":"Docker overview","text":""},{"location":"docker-overview/#docker-articles-overview","title":"Docker Articles Overview","text":""},{"location":"docker-overview/#basic-docker","title":"Basic Docker","text":"<ul> <li>Introduction to Docker: What and Why?</li> <li>Installing Docker on Various Operating Systems</li> <li>Understanding Image and Container Concepts</li> <li>Essential Docker Commands You Must Know</li> <li>Creating and Running Your First Container</li> <li>Image Management: Pull, Build, and Push</li> <li>Dockerfile: Creating Custom Images</li> <li>Docker Volumes: Data Storage in Docker</li> <li>Basic Docker Networking</li> </ul>"},{"location":"docker-overview/#advanced-docker","title":"Advanced Docker","text":"<ul> <li>Docker Compose: Managing Multi-Container Applications</li> <li>Docker Swarm: Container Orchestration</li> <li>Optimizing Dockerfile for Smaller Images</li> <li>Multi-Stage Build in Docker</li> <li>Docker Security: Security Best Practices</li> <li>Monitoring and Logging in Docker</li> <li>Using Private Docker Registry</li> <li>Docker and CI/CD Integration</li> </ul>"},{"location":"docker-overview/#tips-and-tricks","title":"Tips and Tricks","text":"<ul> <li>Tips for Saving Space in Docker</li> <li>Solving Common Docker Issues</li> <li>Effective Container Debugging</li> <li>Managing Environment Variables in Docker</li> <li>Deployment Automation with Docker</li> <li>Best Practices for Image Naming and Tagging</li> </ul>"},{"location":"docker-overview/#case-studies","title":"Case Studies","text":"<ul> <li>Deploying Simple Web Application with Docker</li> <li>Migrating Monolith Application to Docker</li> <li>Running Database in Docker for Development</li> <li>Docker Integration with Jenkins for CI/CD</li> <li>Case Study: Docker in Microservices Architecture</li> <li>Setting Up Isolated Development Environment with Docker</li> </ul>"},{"location":"docker/","title":"Docker","text":"<p>Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker's methodologies for shipping, testing, and deploying code, you can significantly reduce the delay between writing code and running it in production.</p>"},{"location":"docker/#show-all-images","title":"Show All Images","text":"<pre><code>docker images\n</code></pre>"},{"location":"docker/#show-container","title":"Show Container","text":"<pre><code>docker ps\n</code></pre> <p>show all container both active &amp; inactive <pre><code>docker ps -a\n</code></pre></p>"},{"location":"docker/#build","title":"Build","text":"<pre><code>docker build -t &lt;image_name&gt;:&lt;tag_version&gt; .\n</code></pre>"},{"location":"docker/#run-container","title":"Run Container","text":"<p><pre><code>docker run -d --name container_name &lt;image_name&gt;:&lt;tag_version&gt;\n</code></pre> with port mapping <pre><code>docker run -d -p &lt;host_port&gt;:&lt;container_port&gt; --name container_name &lt;image_name&gt;:&lt;tag_version&gt;\n</code></pre></p>"},{"location":"docker/#stop-container","title":"Stop Container","text":"<pre><code>docker stop CONTAINER_ID\n</code></pre>"},{"location":"docker/#start-container","title":"Start Container","text":"<pre><code>docker start CONTAINER_ID\n</code></pre>"},{"location":"docker/#restart-container","title":"Restart Container","text":"<pre><code>docker restart CONTAINER_NAME_OR_ID\n</code></pre>"},{"location":"docker/#delete-image","title":"Delete Image","text":"<pre><code>docker rmi IMAGE_ID\n</code></pre> <p>with force method</p> <pre><code>docker rmi -f IMAGE_ID\n</code></pre>"},{"location":"docker/#delete-container","title":"Delete Container","text":"<pre><code>docker rm CONTAINER_ID\n</code></pre> <p>with force method <pre><code>docker rm -f CONTAINER_ID\n</code></pre></p>"},{"location":"dotnet-basic-api-gateway-endpoint/","title":"Dotnet basic api gateway endpoint","text":""},{"location":"dotnet-basic-api-gateway-endpoint/#docker","title":"Docker","text":""},{"location":"dotnet-cheatsheet/","title":".NET CheatSheet","text":""},{"location":"dotnet-cheatsheet/#add-project-references","title":"Add project references","text":"<pre><code>dotnet add reference path_to_reference_csproj\n</code></pre>"},{"location":"dotnet-class-objects/","title":".NET Class Objects","text":""},{"location":"dotnet-class-objects/#value-types-reference-types","title":"Value types &amp; Reference types","text":""},{"location":"dotnet-class-objects/#value-types","title":"Value types","text":"<ul> <li>struct</li> <li>enum</li> </ul>"},{"location":"dotnet-class-objects/#reference-types","title":"Reference types","text":"<p>Reference types contains \"null\" until we assign it with an instance of that type.</p> <ul> <li>class</li> <li>record</li> <li>delegate</li> <li>array</li> <li>interface</li> </ul>"},{"location":"dotnet-class-objects/#source","title":"source:","text":"<ul> <li>https://learn.microsoft.com/en-us/training/modules/get-started-classes-objects/3-examine-dotnet-type-system</li> </ul>"},{"location":"dotnet-clean-architecture/","title":".NET Clean Architecture","text":"<p>when create user features</p> <ul> <li>Response</li> <li>Request</li> <li>Mapper</li> <li>Handler</li> <li>Project Creation</li> <li></li> </ul>"},{"location":"dotnet-cli-basics/","title":"Essential .NET CLI Commands","text":""},{"location":"dotnet-cli-basics/#overview","title":"Overview","text":"<p>The .NET CLI (Command Line Interface) is a powerful cross-platform toolchain for developing, building, running, and publishing .NET applications. It provides a consistent experience across all supported platforms and is essential for modern .NET development.</p>"},{"location":"dotnet-cli-basics/#getting-started-with-net-cli","title":"Getting Started with .NET CLI","text":""},{"location":"dotnet-cli-basics/#installation-verification","title":"Installation Verification","text":"<pre><code># Check .NET version\ndotnet --version\n\n# Show detailed information\ndotnet --info\n\n# List installed SDKs\ndotnet --list-sdks\n\n# List installed runtimes\ndotnet --list-runtimes\n\n# Show help\ndotnet --help\ndotnet -h\n</code></pre>"},{"location":"dotnet-cli-basics/#cli-structure","title":"CLI Structure","text":"<pre><code>dotnet [global-options] [command] [command-options] [arguments]\n</code></pre>"},{"location":"dotnet-cli-basics/#project-management-commands","title":"Project Management Commands","text":""},{"location":"dotnet-cli-basics/#creating-new-projects","title":"Creating New Projects","text":"<pre><code># List available templates\ndotnet new list\n\n# Create console application\ndotnet new console -n MyConsoleApp\n\n# Create web API\ndotnet new webapi -n MyWebAPI\n\n# Create class library\ndotnet new classlib -n MyLibrary\n\n# Create unit test project\ndotnet new xunit -n MyLibrary.Tests\n\n# Create solution file\ndotnet new sln -n MySolution\n\n# Create with specific framework\ndotnet new console -n MyApp -f net8.0\n\n# Create in current directory\ndotnet new console\n\n# Create with additional options\ndotnet new webapi -n MyAPI --use-controllers --auth Individual\n</code></pre>"},{"location":"dotnet-cli-basics/#project-templates","title":"Project Templates","text":"Template Short Name Description Console Application <code>console</code> Command-line application Class Library <code>classlib</code> Reusable library Web API <code>webapi</code> REST API service ASP.NET Core Web App <code>webapp</code> MVC web application Blazor WebAssembly <code>blazorwasm</code> Client-side Blazor app Blazor Server <code>blazorserver</code> Server-side Blazor app Worker Service <code>worker</code> Background service xUnit Test Project <code>xunit</code> Unit testing project NUnit Test Project <code>nunit</code> NUnit testing project MSTest Test Project <code>mstest</code> MSTest testing project"},{"location":"dotnet-cli-basics/#advanced-project-creation","title":"Advanced Project Creation","text":"<pre><code># Create with custom namespace\ndotnet new console -n MyApp --namespace MyCompany.MyApp\n\n# Create in specific directory\ndotnet new console -n MyApp -o ./src/MyApp\n\n# Create with language specification\ndotnet new console -n MyApp --language C#\n\n# Create with authentication\ndotnet new webapp -n MyWebApp --auth Individual\n\n# Create with HTTPS\ndotnet new webapi -n MyAPI --use-https\n\n# Force creation (overwrite existing)\ndotnet new console -n MyApp --force\n</code></pre>"},{"location":"dotnet-cli-basics/#solution-management","title":"Solution Management","text":""},{"location":"dotnet-cli-basics/#working-with-solutions","title":"Working with Solutions","text":"<pre><code># Create new solution\ndotnet new sln -n MySolution\n\n# Add projects to solution\ndotnet sln add MyConsoleApp/MyConsoleApp.csproj\ndotnet sln add MyLibrary/MyLibrary.csproj\ndotnet sln add MyLibrary.Tests/MyLibrary.Tests.csproj\n\n# Add multiple projects at once\ndotnet sln add **/*.csproj\n\n# Remove project from solution\ndotnet sln remove MyLibrary/MyLibrary.csproj\n\n# List projects in solution\ndotnet sln list\n\n# Add project reference\ndotnet add MyConsoleApp/MyConsoleApp.csproj reference MyLibrary/MyLibrary.csproj\n\n# Remove project reference\ndotnet remove MyConsoleApp/MyConsoleApp.csproj reference MyLibrary/MyLibrary.csproj\n\n# List project references\ndotnet list MyConsoleApp/MyConsoleApp.csproj reference\n</code></pre>"},{"location":"dotnet-cli-basics/#package-management","title":"Package Management","text":""},{"location":"dotnet-cli-basics/#nuget-package-commands","title":"NuGet Package Commands","text":"<pre><code># Add package to project\ndotnet add package Newtonsoft.Json\n\n# Add specific version\ndotnet add package Newtonsoft.Json --version 13.0.3\n\n# Add package to specific project\ndotnet add MyProject/MyProject.csproj package Serilog\n\n# Add package from specific source\ndotnet add package MyPackage --source https://nuget.company.com/\n\n# Remove package\ndotnet remove package Newtonsoft.Json\n\n# List packages in project\ndotnet list package\n\n# List outdated packages\ndotnet list package --outdated\n\n# List vulnerable packages\ndotnet list package --vulnerable\n\n# Update packages\ndotnet add package Newtonsoft.Json  # Updates to latest version\n\n# Restore packages\ndotnet restore\n\n# Restore with specific source\ndotnet restore --source https://api.nuget.org/v3/index.json\n</code></pre>"},{"location":"dotnet-cli-basics/#package-sources","title":"Package Sources","text":"<pre><code># List package sources\ndotnet nuget list source\n\n# Add package source\ndotnet nuget add source https://nuget.company.com/ --name CompanyNuGet\n\n# Remove package source\ndotnet nuget remove source CompanyNuGet\n\n# Enable/disable source\ndotnet nuget enable source CompanyNuGet\ndotnet nuget disable source CompanyNuGet\n\n# Update source\ndotnet nuget update source CompanyNuGet --source https://new-url.com/\n</code></pre>"},{"location":"dotnet-cli-basics/#building-and-publishing","title":"Building and Publishing","text":""},{"location":"dotnet-cli-basics/#build-commands","title":"Build Commands","text":"<pre><code># Build project\ndotnet build\n\n# Build specific project\ndotnet build MyProject/MyProject.csproj\n\n# Build in Release mode\ndotnet build -c Release\n\n# Build with specific framework\ndotnet build -f net8.0\n\n# Build with verbosity\ndotnet build -v normal  # quiet, minimal, normal, detailed, diagnostic\n\n# Build without restore\ndotnet build --no-restore\n\n# Build specific configuration\ndotnet build -c Debug\ndotnet build -c Release\n\n# Build for specific runtime\ndotnet build -r win-x64\ndotnet build -r linux-x64\ndotnet build -r osx-x64\n</code></pre>"},{"location":"dotnet-cli-basics/#restore-and-clean","title":"Restore and Clean","text":"<pre><code># Restore dependencies\ndotnet restore\n\n# Restore for specific runtime\ndotnet restore -r win-x64\n\n# Restore with lock file\ndotnet restore --use-lock-file\n\n# Clean build artifacts\ndotnet clean\n\n# Clean specific configuration\ndotnet clean -c Release\n</code></pre>"},{"location":"dotnet-cli-basics/#publishing-applications","title":"Publishing Applications","text":"<pre><code># Publish application\ndotnet publish\n\n# Publish in Release mode\ndotnet publish -c Release\n\n# Publish for specific runtime\ndotnet publish -r win-x64\ndotnet publish -r linux-x64\ndotnet publish -r osx-arm64\n\n# Self-contained deployment\ndotnet publish -r win-x64 --self-contained true\n\n# Framework-dependent deployment\ndotnet publish -r win-x64 --self-contained false\n\n# Single file deployment\ndotnet publish -r win-x64 --self-contained true -p:PublishSingleFile=true\n\n# AOT compilation (requires .NET 8+)\ndotnet publish -r win-x64 -c Release -p:PublishAot=true\n\n# Trimmed deployment\ndotnet publish -r win-x64 --self-contained true -p:PublishTrimmed=true\n\n# Ready to run\ndotnet publish -r win-x64 -c Release -p:PublishReadyToRun=true\n\n# Specify output directory\ndotnet publish -o ./publish\n\n# Include symbols\ndotnet publish --self-contained true -p:IncludeSymbols=true\n</code></pre>"},{"location":"dotnet-cli-basics/#running-applications","title":"Running Applications","text":""},{"location":"dotnet-cli-basics/#run-commands","title":"Run Commands","text":"<pre><code># Run project\ndotnet run\n\n# Run specific project\ndotnet run --project MyProject/MyProject.csproj\n\n# Run with arguments\ndotnet run -- arg1 arg2 arg3\n\n# Run with specific configuration\ndotnet run -c Release\n\n# Run with specific framework\ndotnet run -f net8.0\n\n# Run with environment variables\nASPNETCORE_ENVIRONMENT=Development dotnet run\n\n# Run and watch for changes\ndotnet watch run\n\n# Run with specific launch profile\ndotnet run --launch-profile \"https\"\n</code></pre>"},{"location":"dotnet-cli-basics/#executing-published-applications","title":"Executing Published Applications","text":"<pre><code># Run published application\ndotnet MyApp.dll\n\n# Run with arguments\ndotnet MyApp.dll arg1 arg2\n\n# Run self-contained executable\n./MyApp  # Linux/macOS\nMyApp.exe  # Windows\n</code></pre>"},{"location":"dotnet-cli-basics/#testing-commands","title":"Testing Commands","text":""},{"location":"dotnet-cli-basics/#running-tests","title":"Running Tests","text":"<pre><code># Run all tests\ndotnet test\n\n# Run tests in specific project\ndotnet test MyProject.Tests/\n\n# Run tests with verbose output\ndotnet test -v normal\n\n# Run specific test\ndotnet test --filter \"TestMethodName\"\n\n# Run tests by category\ndotnet test --filter \"Category=Unit\"\n\n# Run tests with code coverage\ndotnet test --collect:\"XPlat Code Coverage\"\n\n# Run tests with logger\ndotnet test --logger \"console;verbosity=detailed\"\ndotnet test --logger \"trx;LogFileName=test-results.trx\"\n\n# Run tests in parallel\ndotnet test --parallel\n\n# Run tests without building\ndotnet test --no-build\n\n# Run tests with specific configuration\ndotnet test -c Release\n</code></pre>"},{"location":"dotnet-cli-basics/#test-filtering","title":"Test Filtering","text":"<pre><code># Filter by test name\ndotnet test --filter \"Name~Calculator\"\n\n# Filter by category\ndotnet test --filter \"Category=Integration\"\n\n# Filter by priority\ndotnet test --filter \"Priority=1\"\n\n# Complex filters\ndotnet test --filter \"(Category=Unit|Category=Integration)&amp;Priority=1\"\n\n# Exclude tests\ndotnet test --filter \"Category!=Slow\"\n</code></pre>"},{"location":"dotnet-cli-basics/#development-tools","title":"Development Tools","text":""},{"location":"dotnet-cli-basics/#tool-management","title":"Tool Management","text":"<pre><code># List installed tools\ndotnet tool list\n\n# List global tools\ndotnet tool list -g\n\n# Install global tool\ndotnet tool install -g dotnet-ef\ndotnet tool install -g dotnet-aspnet-codegenerator\n\n# Install local tool\ndotnet tool install dotnet-ef\n\n# Update tool\ndotnet tool update -g dotnet-ef\n\n# Uninstall tool\ndotnet tool uninstall -g dotnet-ef\n\n# Restore tools (from .config/dotnet-tools.json)\ndotnet tool restore\n\n# Search for tools\ndotnet tool search entity\n</code></pre>"},{"location":"dotnet-cli-basics/#popular-net-tools","title":"Popular .NET Tools","text":"<pre><code># Entity Framework Tools\ndotnet tool install -g dotnet-ef\n\n# ASP.NET Code Generator\ndotnet tool install -g dotnet-aspnet-codegenerator\n\n# Development certificates\ndotnet dev-certs https --trust\n\n# User secrets\ndotnet user-secrets init\ndotnet user-secrets set \"ConnectionStrings:DefaultConnection\" \"Server=...\"\ndotnet user-secrets list\n\n# Format code\ndotnet tool install -g dotnet-format\ndotnet format\n\n# Report generator (code coverage)\ndotnet tool install -g dotnet-reportgenerator-globaltool\n\n# Outdated packages checker\ndotnet tool install -g dotnet-outdated-tool\n</code></pre>"},{"location":"dotnet-cli-basics/#information-and-diagnostic-commands","title":"Information and Diagnostic Commands","text":""},{"location":"dotnet-cli-basics/#system-information","title":"System Information","text":"<pre><code># Show .NET information\ndotnet --info\n\n# Show runtime information\ndotnet --list-runtimes\n\n# Show SDK information\ndotnet --list-sdks\n\n# Show environment information\ndotnet --info | grep -A 20 \"Host\"\n\n# Check for updates\ndotnet sdk check\n</code></pre>"},{"location":"dotnet-cli-basics/#project-information","title":"Project Information","text":"<pre><code># Show project properties\ndotnet msbuild -getProperty:TargetFramework\ndotnet msbuild -getProperty:OutputType\n\n# List project files\ndotnet msbuild -getItem:Compile\n\n# Show project references\ndotnet list reference\n\n# Show package references\ndotnet list package\n\n# Show project-to-project references\ndotnet list MyProject.csproj reference\n</code></pre>"},{"location":"dotnet-cli-basics/#configuration-and-environment","title":"Configuration and Environment","text":""},{"location":"dotnet-cli-basics/#global-configuration","title":"Global Configuration","text":"<pre><code># Set global properties\ndotnet nuget config -set globalPackagesFolder /path/to/packages\n\n# Show configuration\ndotnet nuget config -showAll\n\n# Add package source\ndotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org\n</code></pre>"},{"location":"dotnet-cli-basics/#environment-variables","title":"Environment Variables","text":"<pre><code># Common .NET environment variables\nexport DOTNET_CLI_TELEMETRY_OPTOUT=1  # Disable telemetry\nexport DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1  # Skip first-time setup\nexport DOTNET_ROOT=/usr/share/dotnet  # Set .NET installation path\nexport NUGET_PACKAGES=/path/to/packages  # Set NuGet cache location\n\n# ASP.NET Core specific\nexport ASPNETCORE_ENVIRONMENT=Development\nexport ASPNETCORE_URLS=\"https://localhost:5001;http://localhost:5000\"\n</code></pre>"},{"location":"dotnet-cli-basics/#advanced-commands","title":"Advanced Commands","text":""},{"location":"dotnet-cli-basics/#msbuild-integration","title":"MSBuild Integration","text":"<pre><code># Run MSBuild target\ndotnet msbuild -target:Clean\ndotnet msbuild -target:Restore\ndotnet msbuild -target:Build\n\n# Set MSBuild properties\ndotnet build -p:Configuration=Release\ndotnet build -p:Platform=x64\n\n# Verbose MSBuild output\ndotnet build -v diagnostic\n\n# Show MSBuild version\ndotnet msbuild -version\n</code></pre>"},{"location":"dotnet-cli-basics/#workload-management","title":"Workload Management","text":"<pre><code># List available workloads\ndotnet workload search\n\n# Install workload\ndotnet workload install maui\ndotnet workload install android\n\n# List installed workloads\ndotnet workload list\n\n# Update workloads\ndotnet workload update\n\n# Uninstall workload\ndotnet workload uninstall maui\n\n# Restore workloads\ndotnet workload restore\n</code></pre>"},{"location":"dotnet-cli-basics/#scripting-and-automation","title":"Scripting and Automation","text":""},{"location":"dotnet-cli-basics/#batch-operations","title":"Batch Operations","text":"<pre><code>#!/bin/bash\n# build-all.sh - Build multiple projects\n\nprojects=(\n    \"src/MyLib\"\n    \"src/MyApp\"\n    \"tests/MyLib.Tests\"\n)\n\nfor project in \"${projects[@]}\"; do\n    echo \"Building $project...\"\n    dotnet build \"$project\" -c Release\ndone\n</code></pre>"},{"location":"dotnet-cli-basics/#cicd-commands","title":"CI/CD Commands","text":"<pre><code># Restore, build, test, publish pipeline\ndotnet restore\ndotnet build -c Release --no-restore\ndotnet test -c Release --no-build --verbosity normal\ndotnet publish -c Release --no-build -o ./publish\n\n# Single command pipeline\ndotnet build -c Release &amp;&amp; dotnet test -c Release --no-build &amp;&amp; dotnet publish -c Release --no-build\n</code></pre>"},{"location":"dotnet-cli-basics/#docker-integration","title":"Docker Integration","text":"<pre><code># Build with Docker\ndocker build -t myapp .\n\n# Run with .NET CLI in container\ndocker run -it mcr.microsoft.com/dotnet/sdk:8.0 bash\ndotnet --version\n</code></pre>"},{"location":"dotnet-cli-basics/#performance-and-diagnostics","title":"Performance and Diagnostics","text":""},{"location":"dotnet-cli-basics/#performance-commands","title":"Performance Commands","text":"<pre><code># AOT publish for better performance\ndotnet publish -c Release -r win-x64 -p:PublishAot=true\n\n# Profile application\ndotnet-trace collect -p $(pgrep MyApp) --format speedscope\n\n# Memory dump\ndotnet-dump collect -p $(pgrep MyApp)\n\n# GC analysis\ndotnet-gcdump collect -p $(pgrep MyApp)\n</code></pre>"},{"location":"dotnet-cli-basics/#diagnostic-tools","title":"Diagnostic Tools","text":"<pre><code># Install diagnostic tools\ndotnet tool install -g dotnet-trace\ndotnet tool install -g dotnet-dump\ndotnet tool install -g dotnet-gcdump\ndotnet tool install -g dotnet-counters\n\n# Monitor performance counters\ndotnet-counters monitor --process-id $(pgrep MyApp)\n</code></pre>"},{"location":"dotnet-cli-basics/#troubleshooting","title":"Troubleshooting","text":""},{"location":"dotnet-cli-basics/#common-issues","title":"Common Issues","text":"<pre><code># Clear NuGet cache\ndotnet nuget locals all --clear\n\n# Restore with force\ndotnet restore --force\n\n# Build with detailed logging\ndotnet build -v diagnostic\n\n# Check for binding redirects\ndotnet list package --include-transitive\n\n# Fix project file issues\ndotnet format --include-generated\n\n# Reset to clean state\ndotnet clean\nrm -rf bin obj\ndotnet restore\ndotnet build\n</code></pre>"},{"location":"dotnet-cli-basics/#debugging-build-issues","title":"Debugging Build Issues","text":"<pre><code># Show MSBuild evaluation\ndotnet build -v diagnostic &gt; build.log 2&gt;&amp;1\n\n# Show target execution order\ndotnet msbuild -preprocess:output.xml\n\n# Validate project file\ndotnet msbuild -p:ValidateProject=true\n</code></pre>"},{"location":"dotnet-cli-basics/#best-practices","title":"Best Practices","text":""},{"location":"dotnet-cli-basics/#project-structure-commands","title":"Project Structure Commands","text":"<pre><code># Create solution with proper structure\ndotnet new sln -n MyProject\nmkdir -p src tests tools docs\n\n# Create projects\ndotnet new classlib -n MyProject.Core -o src/MyProject.Core\ndotnet new webapi -n MyProject.API -o src/MyProject.API\ndotnet new xunit -n MyProject.Tests -o tests/MyProject.Tests\n\n# Add to solution\ndotnet sln add src/MyProject.Core/MyProject.Core.csproj\ndotnet sln add src/MyProject.API/MyProject.API.csproj\ndotnet sln add tests/MyProject.Tests/MyProject.Tests.csproj\n\n# Add references\ndotnet add src/MyProject.API reference src/MyProject.Core\ndotnet add tests/MyProject.Tests reference src/MyProject.Core\n</code></pre>"},{"location":"dotnet-cli-basics/#development-workflow","title":"Development Workflow","text":"<pre><code># Daily development commands\ndotnet restore              # Restore packages\ndotnet build               # Build solution\ndotnet test                # Run tests\ndotnet run --project src/MyProject.API  # Run application\n\n# Pre-commit checks\ndotnet format              # Format code\ndotnet build -c Release    # Build release\ndotnet test --no-build     # Test without rebuild\n</code></pre>"},{"location":"dotnet-cli-basics/#cli-configuration","title":"CLI Configuration","text":""},{"location":"dotnet-cli-basics/#global-settings","title":"Global Settings","text":"<pre><code># Create global.json for SDK version\ndotnet new globaljson --sdk-version 8.0.100\n\n# EditorConfig for code style\ndotnet new editorconfig\n\n# Directory.Build.props for shared properties\necho '&lt;Project&gt;\n  &lt;PropertyGroup&gt;\n    &lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;\n    &lt;LangVersion&gt;latest&lt;/LangVersion&gt;\n    &lt;Nullable&gt;enable&lt;/Nullable&gt;\n  &lt;/PropertyGroup&gt;\n&lt;/Project&gt;' &gt; Directory.Build.props\n</code></pre>"},{"location":"dotnet-cli-basics/#summary","title":"Summary","text":"<p>The .NET CLI is essential for modern .NET development. Key command categories:</p> Category Primary Commands Purpose Project <code>new</code>, <code>add</code>, <code>remove</code> Project management Build <code>build</code>, <code>publish</code>, <code>clean</code> Compilation and deployment Package <code>add package</code>, <code>restore</code> Dependency management Test <code>test</code>, <code>vstest</code> Testing and quality Tool <code>tool install</code>, <code>tool list</code> Development tools Run <code>run</code>, <code>watch</code> Execution and debugging"},{"location":"dotnet-cli-basics/#next-steps","title":"Next Steps","text":"<p>After mastering .NET CLI:</p> <ol> <li>Create your first project</li> <li>Learn NuGet package management</li> <li>Explore dependency injection</li> <li>Build REST APIs</li> </ol> <p>The .NET CLI provides a consistent, powerful interface for all .NET development tasks across platforms. Master these commands to become more productive in your .NET development workflow.</p>"},{"location":"dotnet-first-project/","title":"Creating and Running Your First Project","text":""},{"location":"dotnet-first-project/#overview","title":"Overview","text":"<p>Creating your first .NET project is an exciting milestone in your development journey. This guide walks you through creating various types of projects, understanding project structure, and running your applications successfully.</p>"},{"location":"dotnet-first-project/#prerequisites","title":"Prerequisites","text":"<p>Before starting, ensure you have:</p> <pre><code># Verify .NET installation\ndotnet --version\n\n# Should show something like: 8.0.100\n# If not installed, follow the installation guide\n</code></pre>"},{"location":"dotnet-first-project/#your-first-console-application","title":"Your First Console Application","text":""},{"location":"dotnet-first-project/#step-1-create-the-project","title":"Step 1: Create the Project","text":"<pre><code># Create a new directory for your project\nmkdir MyFirstProject\ncd MyFirstProject\n\n# Create console application\ndotnet new console -n HelloWorld\ncd HelloWorld\n\n# Alternative: Create in current directory\ndotnet new console\n</code></pre>"},{"location":"dotnet-first-project/#step-2-examine-project-structure","title":"Step 2: Examine Project Structure","text":"<pre><code>HelloWorld/\n\u251c\u2500\u2500 HelloWorld.csproj    # Project file\n\u251c\u2500\u2500 Program.cs           # Main program file\n\u2514\u2500\u2500 obj/                 # Build artifacts (auto-generated)\n</code></pre>"},{"location":"dotnet-first-project/#step-3-understanding-the-project-file","title":"Step 3: Understanding the Project File","text":"<pre><code>&lt;!-- HelloWorld.csproj --&gt;\n&lt;Project Sdk=\"Microsoft.NET.Sdk\"&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;OutputType&gt;Exe&lt;/OutputType&gt;\n    &lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;\n    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;\n    &lt;Nullable&gt;enable&lt;/Nullable&gt;\n  &lt;/PropertyGroup&gt;\n\n&lt;/Project&gt;\n</code></pre>"},{"location":"dotnet-first-project/#step-4-examine-the-program-code","title":"Step 4: Examine the Program Code","text":"<pre><code>// Program.cs (Traditional approach)\nusing System;\n\nnamespace HelloWorld\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello, World!\");\n        }\n    }\n}\n\n// Program.cs (Modern top-level approach - .NET 6+)\nConsole.WriteLine(\"Hello, World!\");\n</code></pre>"},{"location":"dotnet-first-project/#step-5-run-your-application","title":"Step 5: Run Your Application","text":"<pre><code># Run the application\ndotnet run\n\n# Expected output:\n# Hello, World!\n</code></pre>"},{"location":"dotnet-first-project/#building-a-more-interactive-console-app","title":"Building a More Interactive Console App","text":""},{"location":"dotnet-first-project/#enhanced-program-example","title":"Enhanced Program Example","text":"<pre><code>// Program.cs - Interactive Console Application\nusing System;\n\nConsole.WriteLine(\"=== Welcome to My First .NET Application ===\");\nConsole.WriteLine();\n\n// Get user input\nConsole.Write(\"Please enter your name: \");\nstring? userName = Console.ReadLine();\n\nConsole.Write(\"Please enter your age: \");\nstring? ageInput = Console.ReadLine();\n\n// Validate and process input\nif (string.IsNullOrEmpty(userName))\n{\n    userName = \"Anonymous\";\n}\n\nif (int.TryParse(ageInput, out int age))\n{\n    Console.WriteLine();\n    Console.WriteLine($\"Hello, {userName}!\");\n    Console.WriteLine($\"You are {age} years old.\");\n\n    if (age &gt;= 18)\n    {\n        Console.WriteLine(\"You are an adult.\");\n    }\n    else\n    {\n        Console.WriteLine($\"You will be an adult in {18 - age} years.\");\n    }\n}\nelse\n{\n    Console.WriteLine();\n    Console.WriteLine($\"Hello, {userName}!\");\n    Console.WriteLine(\"Invalid age entered, but nice to meet you!\");\n}\n\nConsole.WriteLine();\nConsole.WriteLine(\"Press any key to exit...\");\nConsole.ReadKey();\n</code></pre>"},{"location":"dotnet-first-project/#running-the-enhanced-application","title":"Running the Enhanced Application","text":"<pre><code># Build and run\ndotnet build\ndotnet run\n\n# Or run directly\ndotnet run\n\n# Example interaction:\n# === Welcome to My First .NET Application ===\n# \n# Please enter your name: John Doe\n# Please enter your age: 25\n# \n# Hello, John Doe!\n# You are 25 years old.\n# You are an adult.\n# \n# Press any key to exit...\n</code></pre>"},{"location":"dotnet-first-project/#creating-a-class-library","title":"Creating a Class Library","text":""},{"location":"dotnet-first-project/#step-1-create-the-library-project","title":"Step 1: Create the Library Project","text":"<pre><code># Create class library\ndotnet new classlib -n MyLibrary\ncd MyLibrary\n</code></pre>"},{"location":"dotnet-first-project/#step-2-create-a-useful-class","title":"Step 2: Create a Useful Class","text":"<pre><code>// Calculator.cs\nnamespace MyLibrary\n{\n    public class Calculator\n    {\n        public int Add(int a, int b)\n        {\n            return a + b;\n        }\n\n        public int Subtract(int a, int b)\n        {\n            return a - b;\n        }\n\n        public int Multiply(int a, int b)\n        {\n            return a * b;\n        }\n\n        public double Divide(int a, int b)\n        {\n            if (b == 0)\n                throw new ArgumentException(\"Cannot divide by zero\", nameof(b));\n\n            return (double)a / b;\n        }\n\n        public double GetCircleArea(double radius)\n        {\n            if (radius &lt; 0)\n                throw new ArgumentException(\"Radius cannot be negative\", nameof(radius));\n\n            return Math.PI * radius * radius;\n        }\n    }\n}\n</code></pre>"},{"location":"dotnet-first-project/#step-3-create-a-person-class","title":"Step 3: Create a Person Class","text":"<pre><code>// Person.cs\nnamespace MyLibrary\n{\n    public class Person\n    {\n        public string FirstName { get; set; } = string.Empty;\n        public string LastName { get; set; } = string.Empty;\n        public DateTime BirthDate { get; set; }\n\n        public string FullName =&gt; $\"{FirstName} {LastName}\";\n\n        public int Age\n        {\n            get\n            {\n                var today = DateTime.Today;\n                var age = today.Year - BirthDate.Year;\n\n                if (BirthDate.Date &gt; today.AddYears(-age))\n                    age--;\n\n                return age;\n            }\n        }\n\n        public bool IsAdult =&gt; Age &gt;= 18;\n\n        public Person(string firstName, string lastName, DateTime birthDate)\n        {\n            FirstName = firstName;\n            LastName = lastName;\n            BirthDate = birthDate;\n        }\n\n        public override string ToString()\n        {\n            return $\"{FullName} (Age: {Age})\";\n        }\n    }\n}\n</code></pre>"},{"location":"dotnet-first-project/#creating-a-console-app-that-uses-the-library","title":"Creating a Console App That Uses the Library","text":""},{"location":"dotnet-first-project/#step-1-create-solution-structure","title":"Step 1: Create Solution Structure","text":"<pre><code># Go back to root directory\ncd ..\n\n# Create solution\ndotnet new sln -n MyFirstSolution\n\n# Add projects to solution\ndotnet sln add HelloWorld/HelloWorld.csproj\ndotnet sln add MyLibrary/MyLibrary.csproj\n\n# Create new console app that uses the library\ndotnet new console -n CalculatorApp\ndotnet sln add CalculatorApp/CalculatorApp.csproj\n\n# Add reference from console app to library\ndotnet add CalculatorApp/CalculatorApp.csproj reference MyLibrary/MyLibrary.csproj\n</code></pre>"},{"location":"dotnet-first-project/#step-2-build-the-calculator-console-app","title":"Step 2: Build the Calculator Console App","text":"<pre><code>// CalculatorApp/Program.cs\nusing MyLibrary;\n\nConsole.WriteLine(\"=== Simple Calculator ===\");\nConsole.WriteLine();\n\nvar calculator = new Calculator();\nbool continueCalculation = true;\n\nwhile (continueCalculation)\n{\n    try\n    {\n        Console.WriteLine(\"Choose an operation:\");\n        Console.WriteLine(\"1. Addition\");\n        Console.WriteLine(\"2. Subtraction\");\n        Console.WriteLine(\"3. Multiplication\");\n        Console.WriteLine(\"4. Division\");\n        Console.WriteLine(\"5. Circle Area\");\n        Console.WriteLine(\"6. Exit\");\n        Console.Write(\"Enter your choice (1-6): \");\n\n        string? choice = Console.ReadLine();\n\n        switch (choice)\n        {\n            case \"1\":\n                PerformBasicOperation(calculator.Add, \"Addition\");\n                break;\n            case \"2\":\n                PerformBasicOperation(calculator.Subtract, \"Subtraction\");\n                break;\n            case \"3\":\n                PerformBasicOperation(calculator.Multiply, \"Multiplication\");\n                break;\n            case \"4\":\n                PerformDivision(calculator);\n                break;\n            case \"5\":\n                CalculateCircleArea(calculator);\n                break;\n            case \"6\":\n                continueCalculation = false;\n                Console.WriteLine(\"Thank you for using the calculator!\");\n                break;\n            default:\n                Console.WriteLine(\"Invalid choice. Please try again.\");\n                break;\n        }\n\n        if (continueCalculation)\n        {\n            Console.WriteLine();\n            Console.WriteLine(\"Press any key to continue...\");\n            Console.ReadKey();\n            Console.Clear();\n        }\n    }\n    catch (Exception ex)\n    {\n        Console.WriteLine($\"An error occurred: {ex.Message}\");\n        Console.WriteLine();\n    }\n}\n\nstatic void PerformBasicOperation(Func&lt;int, int, int&gt; operation, string operationName)\n{\n    Console.Write(\"Enter first number: \");\n    if (int.TryParse(Console.ReadLine(), out int num1))\n    {\n        Console.Write(\"Enter second number: \");\n        if (int.TryParse(Console.ReadLine(), out int num2))\n        {\n            int result = operation(num1, num2);\n            Console.WriteLine($\"{operationName} result: {result}\");\n        }\n        else\n        {\n            Console.WriteLine(\"Invalid second number.\");\n        }\n    }\n    else\n    {\n        Console.WriteLine(\"Invalid first number.\");\n    }\n}\n\nstatic void PerformDivision(Calculator calculator)\n{\n    Console.Write(\"Enter first number: \");\n    if (int.TryParse(Console.ReadLine(), out int num1))\n    {\n        Console.Write(\"Enter second number: \");\n        if (int.TryParse(Console.ReadLine(), out int num2))\n        {\n            try\n            {\n                double result = calculator.Divide(num1, num2);\n                Console.WriteLine($\"Division result: {result:F2}\");\n            }\n            catch (ArgumentException ex)\n            {\n                Console.WriteLine($\"Error: {ex.Message}\");\n            }\n        }\n        else\n        {\n            Console.WriteLine(\"Invalid second number.\");\n        }\n    }\n    else\n    {\n        Console.WriteLine(\"Invalid first number.\");\n    }\n}\n\nstatic void CalculateCircleArea(Calculator calculator)\n{\n    Console.Write(\"Enter radius: \");\n    if (double.TryParse(Console.ReadLine(), out double radius))\n    {\n        try\n        {\n            double area = calculator.GetCircleArea(radius);\n            Console.WriteLine($\"Circle area: {area:F2}\");\n        }\n        catch (ArgumentException ex)\n        {\n            Console.WriteLine($\"Error: {ex.Message}\");\n        }\n    }\n    else\n    {\n        Console.WriteLine(\"Invalid radius.\");\n    }\n}\n</code></pre>"},{"location":"dotnet-first-project/#step-3-run-the-calculator-app","title":"Step 3: Run the Calculator App","text":"<pre><code># Navigate to calculator app\ncd CalculatorApp\n\n# Run the application\ndotnet run\n\n# Or run from solution root\ncd ..\ndotnet run --project CalculatorApp\n</code></pre>"},{"location":"dotnet-first-project/#creating-your-first-web-application","title":"Creating Your First Web Application","text":""},{"location":"dotnet-first-project/#step-1-create-web-api-project","title":"Step 1: Create Web API Project","text":"<pre><code># Create web API project\ndotnet new webapi -n MyFirstWebAPI\ncd MyFirstWebAPI\n\n# Add to solution\ncd ..\ndotnet sln add MyFirstWebAPI/MyFirstWebAPI.csproj\n</code></pre>"},{"location":"dotnet-first-project/#step-2-examine-web-api-structure","title":"Step 2: Examine Web API Structure","text":"<pre><code>MyFirstWebAPI/\n\u251c\u2500\u2500 Controllers/\n\u2502   \u2514\u2500\u2500 WeatherForecastController.cs\n\u251c\u2500\u2500 Properties/\n\u2502   \u2514\u2500\u2500 launchSettings.json\n\u251c\u2500\u2500 appsettings.json\n\u251c\u2500\u2500 appsettings.Development.json\n\u251c\u2500\u2500 MyFirstWebAPI.csproj\n\u2514\u2500\u2500 Program.cs\n</code></pre>"},{"location":"dotnet-first-project/#step-3-create-a-simple-api-controller","title":"Step 3: Create a Simple API Controller","text":"<pre><code>// Controllers/PersonController.cs\nusing Microsoft.AspNetCore.Mvc;\nusing MyLibrary;\n\nnamespace MyFirstWebAPI.Controllers\n{\n    [ApiController]\n    [Route(\"api/[controller]\")]\n    public class PersonController : ControllerBase\n    {\n        [HttpGet]\n        public ActionResult&lt;IEnumerable&lt;Person&gt;&gt; Get()\n        {\n            var people = new List&lt;Person&gt;\n            {\n                new Person(\"John\", \"Doe\", new DateTime(1990, 5, 15)),\n                new Person(\"Jane\", \"Smith\", new DateTime(1985, 8, 22)),\n                new Person(\"Bob\", \"Johnson\", new DateTime(2000, 12, 3))\n            };\n\n            return Ok(people);\n        }\n\n        [HttpGet(\"{id}\")]\n        public ActionResult&lt;Person&gt; Get(int id)\n        {\n            if (id &lt; 1 || id &gt; 3)\n                return NotFound();\n\n            var people = new List&lt;Person&gt;\n            {\n                new Person(\"John\", \"Doe\", new DateTime(1990, 5, 15)),\n                new Person(\"Jane\", \"Smith\", new DateTime(1985, 8, 22)),\n                new Person(\"Bob\", \"Johnson\", new DateTime(2000, 12, 3))\n            };\n\n            return Ok(people[id - 1]);\n        }\n\n        [HttpPost]\n        public ActionResult&lt;Person&gt; Create([FromBody] CreatePersonRequest request)\n        {\n            if (string.IsNullOrEmpty(request.FirstName) || string.IsNullOrEmpty(request.LastName))\n                return BadRequest(\"First name and last name are required.\");\n\n            var person = new Person(request.FirstName, request.LastName, request.BirthDate);\n            return Ok(person);\n        }\n    }\n\n    public class CreatePersonRequest\n    {\n        public string FirstName { get; set; } = string.Empty;\n        public string LastName { get; set; } = string.Empty;\n        public DateTime BirthDate { get; set; }\n    }\n}\n</code></pre>"},{"location":"dotnet-first-project/#step-4-add-library-reference-to-web-api","title":"Step 4: Add Library Reference to Web API","text":"<pre><code># Add reference to library\ndotnet add MyFirstWebAPI/MyFirstWebAPI.csproj reference MyLibrary/MyLibrary.csproj\n</code></pre>"},{"location":"dotnet-first-project/#step-5-run-the-web-api","title":"Step 5: Run the Web API","text":"<pre><code># Navigate to web API project\ncd MyFirstWebAPI\n\n# Run the application\ndotnet run\n\n# The application will start and show something like:\n# info: Microsoft.Hosting.Lifetime[14]\n#       Now listening on: https://localhost:7001\n#       Now listening on: http://localhost:5000\n</code></pre>"},{"location":"dotnet-first-project/#step-6-test-the-api","title":"Step 6: Test the API","text":"<pre><code># Test using curl (in another terminal)\ncurl https://localhost:7001/api/person\n\n# Or test specific endpoints\ncurl https://localhost:7001/api/person/1\n\n# Create new person\ncurl -X POST https://localhost:7001/api/person \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"firstName\":\"Alice\",\"lastName\":\"Wonder\",\"birthDate\":\"1995-03-10T00:00:00\"}'\n</code></pre>"},{"location":"dotnet-first-project/#creating-a-unit-test-project","title":"Creating a Unit Test Project","text":""},{"location":"dotnet-first-project/#step-1-create-test-project","title":"Step 1: Create Test Project","text":"<pre><code># Create xUnit test project\ndotnet new xunit -n MyLibrary.Tests\n\n# Add to solution\ndotnet sln add MyLibrary.Tests/MyLibrary.Tests.csproj\n\n# Add reference to library being tested\ndotnet add MyLibrary.Tests/MyLibrary.Tests.csproj reference MyLibrary/MyLibrary.csproj\n</code></pre>"},{"location":"dotnet-first-project/#step-2-write-unit-tests","title":"Step 2: Write Unit Tests","text":"<pre><code>// MyLibrary.Tests/CalculatorTests.cs\nusing Xunit;\nusing MyLibrary;\n\nnamespace MyLibrary.Tests\n{\n    public class CalculatorTests\n    {\n        private readonly Calculator _calculator;\n\n        public CalculatorTests()\n        {\n            _calculator = new Calculator();\n        }\n\n        [Fact]\n        public void Add_TwoPositiveNumbers_ReturnsSum()\n        {\n            // Arrange\n            int a = 5;\n            int b = 3;\n            int expected = 8;\n\n            // Act\n            int result = _calculator.Add(a, b);\n\n            // Assert\n            Assert.Equal(expected, result);\n        }\n\n        [Fact]\n        public void Subtract_TwoNumbers_ReturnsDifference()\n        {\n            // Arrange\n            int a = 10;\n            int b = 4;\n            int expected = 6;\n\n            // Act\n            int result = _calculator.Subtract(a, b);\n\n            // Assert\n            Assert.Equal(expected, result);\n        }\n\n        [Fact]\n        public void Multiply_TwoNumbers_ReturnsProduct()\n        {\n            // Arrange\n            int a = 6;\n            int b = 7;\n            int expected = 42;\n\n            // Act\n            int result = _calculator.Multiply(a, b);\n\n            // Assert\n            Assert.Equal(expected, result);\n        }\n\n        [Fact]\n        public void Divide_TwoNumbers_ReturnsQuotient()\n        {\n            // Arrange\n            int a = 15;\n            int b = 3;\n            double expected = 5.0;\n\n            // Act\n            double result = _calculator.Divide(a, b);\n\n            // Assert\n            Assert.Equal(expected, result, 2); // 2 decimal places precision\n        }\n\n        [Fact]\n        public void Divide_ByZero_ThrowsArgumentException()\n        {\n            // Arrange\n            int a = 10;\n            int b = 0;\n\n            // Act &amp; Assert\n            Assert.Throws&lt;ArgumentException&gt;(() =&gt; _calculator.Divide(a, b));\n        }\n\n        [Theory]\n        [InlineData(1, 3.14159)]\n        [InlineData(2, 12.56636)]\n        [InlineData(0, 0)]\n        public void GetCircleArea_ValidRadius_ReturnsCorrectArea(double radius, double expectedArea)\n        {\n            // Act\n            double result = _calculator.GetCircleArea(radius);\n\n            // Assert\n            Assert.Equal(expectedArea, result, 2);\n        }\n\n        [Fact]\n        public void GetCircleArea_NegativeRadius_ThrowsArgumentException()\n        {\n            // Arrange\n            double radius = -5;\n\n            // Act &amp; Assert\n            Assert.Throws&lt;ArgumentException&gt;(() =&gt; _calculator.GetCircleArea(radius));\n        }\n    }\n}\n</code></pre>"},{"location":"dotnet-first-project/#step-3-write-person-tests","title":"Step 3: Write Person Tests","text":"<pre><code>// MyLibrary.Tests/PersonTests.cs\nusing Xunit;\nusing MyLibrary;\n\nnamespace MyLibrary.Tests\n{\n    public class PersonTests\n    {\n        [Fact]\n        public void Constructor_ValidInput_CreatesPersonCorrectly()\n        {\n            // Arrange\n            string firstName = \"John\";\n            string lastName = \"Doe\";\n            DateTime birthDate = new DateTime(1990, 5, 15);\n\n            // Act\n            var person = new Person(firstName, lastName, birthDate);\n\n            // Assert\n            Assert.Equal(firstName, person.FirstName);\n            Assert.Equal(lastName, person.LastName);\n            Assert.Equal(birthDate, person.BirthDate);\n            Assert.Equal(\"John Doe\", person.FullName);\n        }\n\n        [Fact]\n        public void Age_BornInPast_ReturnsCorrectAge()\n        {\n            // Arrange\n            var birthDate = DateTime.Today.AddYears(-25).AddDays(-100); // 25+ years ago\n            var person = new Person(\"John\", \"Doe\", birthDate);\n\n            // Act\n            int age = person.Age;\n\n            // Assert\n            Assert.True(age &gt;= 25);\n        }\n\n        [Fact]\n        public void IsAdult_PersonOver18_ReturnsTrue()\n        {\n            // Arrange\n            var birthDate = DateTime.Today.AddYears(-20); // 20 years ago\n            var person = new Person(\"John\", \"Doe\", birthDate);\n\n            // Act\n            bool isAdult = person.IsAdult;\n\n            // Assert\n            Assert.True(isAdult);\n        }\n\n        [Fact]\n        public void IsAdult_PersonUnder18_ReturnsFalse()\n        {\n            // Arrange\n            var birthDate = DateTime.Today.AddYears(-16); // 16 years ago\n            var person = new Person(\"Jane\", \"Doe\", birthDate);\n\n            // Act\n            bool isAdult = person.IsAdult;\n\n            // Assert\n            Assert.False(isAdult);\n        }\n\n        [Fact]\n        public void ToString_ReturnsFormattedString()\n        {\n            // Arrange\n            var person = new Person(\"John\", \"Doe\", new DateTime(1990, 5, 15));\n\n            // Act\n            string result = person.ToString();\n\n            // Assert\n            Assert.Contains(\"John Doe\", result);\n            Assert.Contains(\"Age:\", result);\n        }\n    }\n}\n</code></pre>"},{"location":"dotnet-first-project/#step-4-run-tests","title":"Step 4: Run Tests","text":"<pre><code># Run all tests\ndotnet test\n\n# Run tests with verbose output\ndotnet test -v normal\n\n# Run specific test project\ndotnet test MyLibrary.Tests\n\n# Run with coverage (requires additional packages)\ndotnet test --collect:\"XPlat Code Coverage\"\n</code></pre>"},{"location":"dotnet-first-project/#project-structure-best-practices","title":"Project Structure Best Practices","text":""},{"location":"dotnet-first-project/#final-solution-structure","title":"Final Solution Structure","text":"<pre><code>MyFirstSolution/\n\u251c\u2500\u2500 MyFirstSolution.sln\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 MyLibrary/\n\u2502   \u2502   \u251c\u2500\u2500 Calculator.cs\n\u2502   \u2502   \u251c\u2500\u2500 Person.cs\n\u2502   \u2502   \u2514\u2500\u2500 MyLibrary.csproj\n\u2502   \u251c\u2500\u2500 HelloWorld/\n\u2502   \u2502   \u251c\u2500\u2500 Program.cs\n\u2502   \u2502   \u2514\u2500\u2500 HelloWorld.csproj\n\u2502   \u251c\u2500\u2500 CalculatorApp/\n\u2502   \u2502   \u251c\u2500\u2500 Program.cs\n\u2502   \u2502   \u2514\u2500\u2500 CalculatorApp.csproj\n\u2502   \u2514\u2500\u2500 MyFirstWebAPI/\n\u2502       \u251c\u2500\u2500 Controllers/\n\u2502       \u251c\u2500\u2500 Program.cs\n\u2502       \u2514\u2500\u2500 MyFirstWebAPI.csproj\n\u2514\u2500\u2500 tests/\n    \u2514\u2500\u2500 MyLibrary.Tests/\n        \u251c\u2500\u2500 CalculatorTests.cs\n        \u251c\u2500\u2500 PersonTests.cs\n        \u2514\u2500\u2500 MyLibrary.Tests.csproj\n</code></pre>"},{"location":"dotnet-first-project/#organizing-with-folders","title":"Organizing with Folders","text":"<pre><code># Create organized structure\nmkdir src tests\n\n# Move projects to appropriate folders\nmv MyLibrary src/\nmv HelloWorld src/\nmv CalculatorApp src/\nmv MyFirstWebAPI src/\nmv MyLibrary.Tests tests/\n\n# Update solution file references (automatic with newer .NET versions)\ndotnet sln list  # Check current projects\n</code></pre>"},{"location":"dotnet-first-project/#building-and-running-everything","title":"Building and Running Everything","text":""},{"location":"dotnet-first-project/#build-entire-solution","title":"Build Entire Solution","text":"<pre><code># Build all projects in solution\ndotnet build\n\n# Build in Release mode\ndotnet build -c Release\n\n# Clean and rebuild\ndotnet clean\ndotnet build\n</code></pre>"},{"location":"dotnet-first-project/#run-different-projects","title":"Run Different Projects","text":"<pre><code># Run console app\ndotnet run --project src/HelloWorld\n\n# Run calculator app\ndotnet run --project src/CalculatorApp\n\n# Run web API\ndotnet run --project src/MyFirstWebAPI\n\n# Run tests\ndotnet test tests/MyLibrary.Tests\n</code></pre>"},{"location":"dotnet-first-project/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"dotnet-first-project/#issue-1-project-reference-not-found","title":"Issue 1: Project Reference Not Found","text":"<pre><code># Problem: Cannot find referenced project\n# Solution: Check and fix project references\ndotnet list reference\ndotnet add reference ../MyLibrary/MyLibrary.csproj\n</code></pre>"},{"location":"dotnet-first-project/#issue-2-package-restore-issues","title":"Issue 2: Package Restore Issues","text":"<pre><code># Problem: NuGet packages not restored\n# Solution: Restore packages\ndotnet restore\n\n# Clear cache if needed\ndotnet nuget locals all --clear\ndotnet restore\n</code></pre>"},{"location":"dotnet-first-project/#issue-3-build-errors","title":"Issue 3: Build Errors","text":"<pre><code># Problem: Build fails\n# Solution: Clean and rebuild\ndotnet clean\ndotnet build -v normal  # Verbose output for debugging\n</code></pre>"},{"location":"dotnet-first-project/#next-steps","title":"Next Steps","text":"<p>After creating your first projects:</p> <ol> <li>Learn NuGet package management</li> <li>Understand dependency injection</li> <li>Explore Entity Framework</li> <li>Build REST APIs</li> </ol>"},{"location":"dotnet-first-project/#summary","title":"Summary","text":"<p>You've successfully created:</p> Project Type Purpose Key Learning Console App Command-line application Basic .NET structure Class Library Reusable code components Code organization Web API REST API service Web development basics Unit Tests Code quality assurance Testing fundamentals <p>These foundational projects demonstrate core .NET concepts and provide a solid base for more advanced development. Practice building variations of these project types to strengthen your understanding of .NET development patterns.</p>"},{"location":"dotnet-installation/","title":"Installing .NET on Various Operating Systems","text":""},{"location":"dotnet-installation/#overview","title":"Overview","text":"<p>.NET is a cross-platform development framework that can be installed on Windows, macOS, and Linux. This guide covers installation methods for all supported operating systems, including troubleshooting common issues.</p>"},{"location":"dotnet-installation/#system-requirements","title":"System Requirements","text":""},{"location":"dotnet-installation/#minimum-requirements","title":"Minimum Requirements","text":"Component Requirement OS Windows 10+, macOS 10.15+, or Linux RAM 512 MB minimum, 2 GB recommended Disk Space 500 MB for SDK Architecture x64, x86, ARM64"},{"location":"dotnet-installation/#supported-operating-systems","title":"Supported Operating Systems","text":"<pre><code>graph TD\n    A[.NET Runtime Support] --&gt; B[Windows]\n    A --&gt; C[macOS]\n    A --&gt; D[Linux]\n\n    B --&gt; B1[Windows 10/11]\n    B --&gt; B2[Windows Server 2016+]\n\n    C --&gt; C1[macOS 10.15+]\n    C --&gt; C2[Intel &amp; Apple Silicon]\n\n    D --&gt; D1[Ubuntu 18.04+]\n    D --&gt; D2[Debian 9+]\n    D --&gt; D3[CentOS 7+]\n    D --&gt; D4[RHEL 7+]\n    D --&gt; D5[Fedora 32+]\n    D --&gt; D6[SUSE Linux Enterprise 12+]\n</code></pre>"},{"location":"dotnet-installation/#installation-options","title":"Installation Options","text":""},{"location":"dotnet-installation/#net-runtime-vs-sdk","title":".NET Runtime vs SDK","text":"Package Purpose Contains .NET Runtime Run applications Runtime only .NET SDK Develop applications Runtime + Tools + Compilers <p>Recommendation: Install SDK for development, Runtime for production.</p>"},{"location":"dotnet-installation/#windows-installation","title":"Windows Installation","text":""},{"location":"dotnet-installation/#method-1-download-from-microsoft-recommended","title":"Method 1: Download from Microsoft (Recommended)","text":"<ol> <li> <p>Visit Official Website <pre><code>https://dotnet.microsoft.com/download\n</code></pre></p> </li> <li> <p>Choose Version</p> </li> <li>Select latest LTS version (recommended)</li> <li> <p>Choose SDK for development</p> </li> <li> <p>Run Installer <pre><code># Download and run the installer\n# Follow the installation wizard\n</code></pre></p> </li> <li> <p>Verify Installation <pre><code>dotnet --version\ndotnet --info\n</code></pre></p> </li> </ol>"},{"location":"dotnet-installation/#method-2-using-package-managers","title":"Method 2: Using Package Managers","text":""},{"location":"dotnet-installation/#chocolatey","title":"Chocolatey","text":"<pre><code># Install Chocolatey first (if not installed)\nSet-ExecutionPolicy Bypass -Scope Process -Force\n[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072\niex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\n\n# Install .NET SDK\nchoco install dotnet-sdk\n\n# Install specific version\nchoco install dotnet-sdk --version=8.0.0\n</code></pre>"},{"location":"dotnet-installation/#winget","title":"Winget","text":"<pre><code># Install latest SDK\nwinget install Microsoft.DotNet.SDK.8\n\n# List available versions\nwinget search Microsoft.DotNet\n</code></pre>"},{"location":"dotnet-installation/#scoop","title":"Scoop","text":"<pre><code># Install Scoop first\niwr -useb get.scoop.sh | iex\n\n# Install .NET\nscoop bucket add extras\nscoop install dotnet-sdk\n</code></pre>"},{"location":"dotnet-installation/#method-3-visual-studio-installer","title":"Method 3: Visual Studio Installer","text":"<pre><code># Visual Studio includes .NET SDK\n# Select \".NET desktop development\" workload\n# Or \"ASP.NET and web development\" workload\n</code></pre>"},{"location":"dotnet-installation/#macos-installation","title":"macOS Installation","text":""},{"location":"dotnet-installation/#method-1-download-from-microsoft","title":"Method 1: Download from Microsoft","text":"<ol> <li> <p>Download Installer <pre><code># Visit: https://dotnet.microsoft.com/download\n# Select macOS installer\n# Choose Intel or Apple Silicon version\n</code></pre></p> </li> <li> <p>Install Package <pre><code># Double-click the .pkg file\n# Follow installation wizard\n</code></pre></p> </li> <li> <p>Verify Installation <pre><code>dotnet --version\ndotnet --info\n</code></pre></p> </li> </ol>"},{"location":"dotnet-installation/#method-2-using-homebrew","title":"Method 2: Using Homebrew","text":"<pre><code># Install Homebrew (if not installed)\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n\n# Install .NET SDK\nbrew install --cask dotnet-sdk\n\n# Install specific version\nbrew install --cask dotnet-sdk@8\n\n# Verify installation\ndotnet --version\n</code></pre>"},{"location":"dotnet-installation/#method-3-manual-installation","title":"Method 3: Manual Installation","text":"<pre><code># Download and extract manually\ncurl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --version latest\n\n# Add to PATH (add to ~/.zshrc or ~/.bash_profile)\nexport DOTNET_ROOT=$HOME/.dotnet\nexport PATH=$PATH:$HOME/.dotnet:$HOME/.dotnet/tools\n</code></pre>"},{"location":"dotnet-installation/#linux-installation","title":"Linux Installation","text":""},{"location":"dotnet-installation/#ubuntudebian","title":"Ubuntu/Debian","text":""},{"location":"dotnet-installation/#method-1-microsoft-repository","title":"Method 1: Microsoft Repository","text":"<pre><code># Add Microsoft repository\nwget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb\nsudo dpkg -i packages-microsoft-prod.deb\nrm packages-microsoft-prod.deb\n\n# Update package index\nsudo apt update\n\n# Install .NET SDK\nsudo apt install -y dotnet-sdk-8.0\n\n# Install Runtime only\nsudo apt install -y aspnetcore-runtime-8.0\n</code></pre>"},{"location":"dotnet-installation/#method-2-snap-package","title":"Method 2: Snap Package","text":"<pre><code># Install using Snap\nsudo snap install dotnet-sdk --classic --channel=8.0\n\n# Install Runtime only\nsudo snap install dotnet-runtime-80 --classic\n</code></pre>"},{"location":"dotnet-installation/#method-3-manual-installation_1","title":"Method 3: Manual Installation","text":"<pre><code># Download installation script\ncurl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --version latest\n\n# Add to PATH\necho 'export DOTNET_ROOT=$HOME/.dotnet' &gt;&gt; ~/.bashrc\necho 'export PATH=$PATH:$HOME/.dotnet:$HOME/.dotnet/tools' &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n</code></pre>"},{"location":"dotnet-installation/#centosrhelfedora","title":"CentOS/RHEL/Fedora","text":""},{"location":"dotnet-installation/#rhelcentos-8","title":"RHEL/CentOS 8+","text":"<pre><code># Add Microsoft repository\nsudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\nsudo wget -O /etc/yum.repos.d/microsoft-prod.repo https://packages.microsoft.com/config/rhel/8/prod.repo\n\n# Install .NET SDK\nsudo dnf install dotnet-sdk-8.0\n\n# Install Runtime only\nsudo dnf install aspnetcore-runtime-8.0\n</code></pre>"},{"location":"dotnet-installation/#fedora","title":"Fedora","text":"<pre><code># Add Microsoft repository\nsudo rpm --import https://packages.microsoft.com/keys/microsoft.asc\nsudo wget -O /etc/yum.repos.d/microsoft-prod.repo https://packages.microsoft.com/config/fedora/37/prod.repo\n\n# Install .NET SDK\nsudo dnf install dotnet-sdk-8.0\n</code></pre>"},{"location":"dotnet-installation/#arch-linux","title":"Arch Linux","text":"<pre><code># Install from AUR\nyay -S dotnet-runtime dotnet-sdk\n\n# Or using pacman (if in official repos)\nsudo pacman -S dotnet-runtime dotnet-sdk\n</code></pre>"},{"location":"dotnet-installation/#alpine-linux","title":"Alpine Linux","text":"<pre><code># Add community repository\necho \"http://dl-cdn.alpinelinux.org/alpine/edge/community\" &gt;&gt; /etc/apk/repositories\n\n# Update package index\napk update\n\n# Install .NET\napk add dotnet8-sdk\n</code></pre>"},{"location":"dotnet-installation/#docker-installation","title":"Docker Installation","text":""},{"location":"dotnet-installation/#using-official-docker-images","title":"Using Official Docker Images","text":"<pre><code># .NET SDK image for development\ndocker pull mcr.microsoft.com/dotnet/sdk:8.0\n\n# .NET Runtime image for production\ndocker pull mcr.microsoft.com/dotnet/runtime:8.0\n\n# ASP.NET Core Runtime for web apps\ndocker pull mcr.microsoft.com/dotnet/aspnet:8.0\n\n# Run container with SDK\ndocker run -it mcr.microsoft.com/dotnet/sdk:8.0\n</code></pre>"},{"location":"dotnet-installation/#dockerfile-example","title":"Dockerfile Example","text":"<pre><code># Multi-stage build example\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\nWORKDIR /app\n\n# Copy project files\nCOPY *.csproj ./\nRUN dotnet restore\n\n# Copy source code and build\nCOPY . ./\nRUN dotnet publish -c Release -o out\n\n# Runtime stage\nFROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime\nWORKDIR /app\nCOPY --from=build /app/out .\n\nENTRYPOINT [\"dotnet\", \"MyApp.dll\"]\n</code></pre>"},{"location":"dotnet-installation/#version-management","title":"Version Management","text":""},{"location":"dotnet-installation/#installing-multiple-versions","title":"Installing Multiple Versions","text":"<pre><code># Install specific versions side by side\ncurl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --version 6.0.0\ncurl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --version 7.0.0\ncurl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin --version 8.0.0\n\n# List installed versions\ndotnet --list-sdks\ndotnet --list-runtimes\n</code></pre>"},{"location":"dotnet-installation/#globaljson-for-project-specific-versions","title":"Global.json for Project-Specific Versions","text":"<pre><code>{\n  \"sdk\": {\n    \"version\": \"8.0.0\",\n    \"rollForward\": \"latestMinor\"\n  }\n}\n</code></pre>"},{"location":"dotnet-installation/#installation-verification","title":"Installation Verification","text":""},{"location":"dotnet-installation/#basic-verification","title":"Basic Verification","text":"<pre><code># Check .NET version\ndotnet --version\n\n# Show detailed information\ndotnet --info\n\n# List installed SDKs\ndotnet --list-sdks\n\n# List installed runtimes\ndotnet --list-runtimes\n\n# Show help\ndotnet --help\n</code></pre>"},{"location":"dotnet-installation/#create-test-application","title":"Create Test Application","text":"<pre><code># Create new console application\ndotnet new console -n TestApp\ncd TestApp\n\n# Run the application\ndotnet run\n\n# Expected output: \"Hello, World!\"\n</code></pre>"},{"location":"dotnet-installation/#advanced-verification","title":"Advanced Verification","text":"<pre><code># Check runtime information\ndotnet --info\n\n# Example output should show:\n# - .NET version\n# - Runtime environment\n# - Host information\n# - Installed workloads\n</code></pre>"},{"location":"dotnet-installation/#troubleshooting-common-issues","title":"Troubleshooting Common Issues","text":""},{"location":"dotnet-installation/#issue-1-permission-denied-linuxmacos","title":"Issue 1: Permission Denied (Linux/macOS)","text":"<pre><code># Problem: Cannot install due to permissions\n# Solution: Use proper installation method or fix permissions\n\n# For manual installation\nchmod +x dotnet-install.sh\n./dotnet-install.sh --version latest\n\n# Or use sudo for system-wide installation\nsudo apt install dotnet-sdk-8.0\n</code></pre>"},{"location":"dotnet-installation/#issue-2-path-not-set","title":"Issue 2: PATH Not Set","text":"<pre><code># Problem: dotnet command not found\n# Solution: Add .NET to PATH\n\n# For bash\necho 'export PATH=$PATH:$HOME/.dotnet' &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n\n# For zsh (macOS)\necho 'export PATH=$PATH:$HOME/.dotnet' &gt;&gt; ~/.zshrc\nsource ~/.zshrc\n\n# For fish shell\nset -U fish_user_paths $HOME/.dotnet $fish_user_paths\n</code></pre>"},{"location":"dotnet-installation/#issue-3-certificate-issues","title":"Issue 3: Certificate Issues","text":"<pre><code># Problem: SSL/TLS certificate errors\n# Solution: Trust certificates\n\n# Windows\ncertlm.msc  # Import certificates\n\n# Linux\nsudo apt-get update &amp;&amp; sudo apt-get install ca-certificates\n\n# macOS\n# Certificates usually work by default\n</code></pre>"},{"location":"dotnet-installation/#issue-4-architecture-mismatch","title":"Issue 4: Architecture Mismatch","text":"<pre><code># Problem: Wrong architecture installed\n# Solution: Install correct version\n\n# Check system architecture\nuname -m\n\n# Install correct version\n# For ARM64: use arm64 installer\n# For x64: use x64 installer\n</code></pre>"},{"location":"dotnet-installation/#issue-5-multiple-versions-conflict","title":"Issue 5: Multiple Versions Conflict","text":"<pre><code># Problem: Multiple .NET versions causing issues\n# Solution: Use global.json or remove conflicting versions\n\n# Create global.json to specify version\necho '{\"sdk\":{\"version\":\"8.0.0\"}}' &gt; global.json\n\n# Or remove specific version\nsudo rm -rf /usr/share/dotnet/sdk/7.0.0\n</code></pre>"},{"location":"dotnet-installation/#development-environment-setup","title":"Development Environment Setup","text":""},{"location":"dotnet-installation/#ideeditor-installation","title":"IDE/Editor Installation","text":""},{"location":"dotnet-installation/#visual-studio-windowsmacos","title":"Visual Studio (Windows/macOS)","text":"<pre><code># Download from: https://visualstudio.microsoft.com/\n# Choose appropriate edition:\n# - Community (Free)\n# - Professional\n# - Enterprise\n</code></pre>"},{"location":"dotnet-installation/#visual-studio-code-cross-platform","title":"Visual Studio Code (Cross-platform)","text":"<pre><code># Download from: https://code.visualstudio.com/\n\n# Install C# extension\ncode --install-extension ms-dotnettools.csharp\ncode --install-extension ms-dotnettools.vscode-dotnet-runtime\n</code></pre>"},{"location":"dotnet-installation/#jetbrains-rider","title":"JetBrains Rider","text":"<pre><code># Download from: https://www.jetbrains.com/rider/\n# Premium IDE with excellent .NET support\n</code></pre>"},{"location":"dotnet-installation/#additional-tools","title":"Additional Tools","text":"<pre><code># Entity Framework Tools\ndotnet tool install --global dotnet-ef\n\n# ASP.NET Core HTTPS development certificate\ndotnet dev-certs https --trust\n\n# User secrets for development\ndotnet user-secrets init\ndotnet user-secrets set \"ConnectionString\" \"Server=...\"\n</code></pre>"},{"location":"dotnet-installation/#performance-optimization","title":"Performance Optimization","text":""},{"location":"dotnet-installation/#ahead-of-time-aot-compilation","title":"Ahead-of-Time (AOT) Compilation","text":"<pre><code>&lt;!-- In .csproj file --&gt;\n&lt;PropertyGroup&gt;\n  &lt;PublishAot&gt;true&lt;/PublishAot&gt;\n&lt;/PropertyGroup&gt;\n</code></pre>"},{"location":"dotnet-installation/#ready-to-run-images","title":"Ready-to-Run Images","text":"<pre><code># Publish with ReadyToRun\ndotnet publish -c Release -r win-x64 --self-contained true -p:PublishReadyToRun=true\n</code></pre>"},{"location":"dotnet-installation/#trim-unused-code","title":"Trim Unused Code","text":"<pre><code>&lt;PropertyGroup&gt;\n  &lt;PublishTrimmed&gt;true&lt;/PublishTrimmed&gt;\n  &lt;TrimMode&gt;link&lt;/TrimMode&gt;\n&lt;/PropertyGroup&gt;\n</code></pre>"},{"location":"dotnet-installation/#installation-flow-diagram","title":"Installation Flow Diagram","text":"<pre><code>graph TD\n    A[Choose Installation Method] --&gt; B{Operating System?}\n\n    B --&gt;|Windows| C[Windows Options]\n    B --&gt;|macOS| D[macOS Options]\n    B --&gt;|Linux| E[Linux Options]\n\n    C --&gt; C1[Official Installer]\n    C --&gt; C2[Package Manager]\n    C --&gt; C3[Visual Studio]\n\n    D --&gt; D1[Official Installer]\n    D --&gt; D2[Homebrew]\n    D --&gt; D3[Manual Install]\n\n    E --&gt; E1[Package Manager]\n    E --&gt; E2[Snap]\n    E --&gt; E3[Manual Install]\n\n    C1 --&gt; F[Verify Installation]\n    C2 --&gt; F\n    C3 --&gt; F\n    D1 --&gt; F\n    D2 --&gt; F\n    D3 --&gt; F\n    E1 --&gt; F\n    E2 --&gt; F\n    E3 --&gt; F\n\n    F --&gt; G[Create Test Project]\n    G --&gt; H[Development Ready]\n</code></pre>"},{"location":"dotnet-installation/#post-installation-configuration","title":"Post-Installation Configuration","text":""},{"location":"dotnet-installation/#configure-nuget","title":"Configure NuGet","text":"<pre><code># Add NuGet source\ndotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org\n\n# List configured sources\ndotnet nuget list source\n\n# Set NuGet config\ndotnet nuget config\n</code></pre>"},{"location":"dotnet-installation/#configure-development-environment","title":"Configure Development Environment","text":"<pre><code># Set default project template\ndotnet new --install Microsoft.DotNet.Web.ProjectTemplates\n\n# Configure global tools location\nexport DOTNET_TOOLS_PATH=$HOME/.dotnet/tools\nexport PATH=$PATH:$DOTNET_TOOLS_PATH\n</code></pre>"},{"location":"dotnet-installation/#summary","title":"Summary","text":"Platform Recommended Method Alternative Methods Windows Official Installer Chocolatey, Winget, Visual Studio macOS Homebrew Official Installer, Manual Ubuntu/Debian Microsoft Repository Snap, Manual RHEL/CentOS DNF Package Manager Manual Installation Docker Official Images Custom Dockerfile"},{"location":"dotnet-installation/#next-steps","title":"Next Steps","text":"<p>After successful installation:</p> <ol> <li>Learn .NET project structure</li> <li>Master .NET CLI commands</li> <li>Create your first project</li> <li>Explore NuGet packages</li> </ol> <p>Remember to always use the latest LTS version for production applications and keep your development environment updated with security patches.</p>"},{"location":"dotnet-introduction/","title":"Introduction to .NET: What and Why?","text":""},{"location":"dotnet-introduction/#what-is-net","title":"What is .NET?","text":"<p>.NET is a free, open-source, cross-platform framework developed by Microsoft for building various types of applications. It provides a comprehensive development platform that supports multiple programming languages, libraries, and tools.</p>"},{"location":"dotnet-introduction/#net-evolution-timeline","title":".NET Evolution Timeline","text":"<pre><code>timeline\n    title .NET Evolution\n    2002 : .NET Framework 1.0\n         : Windows Only\n    2010 : .NET Framework 4.0\n         : Enhanced Features\n    2014 : .NET Core 1.0\n         : Cross-Platform\n    2020 : .NET 5\n         : Unified Platform\n    2021 : .NET 6\n         : LTS Version\n    2022 : .NET 7\n         : Performance Focus\n    2023 : .NET 8\n         : Latest LTS\n</code></pre>"},{"location":"dotnet-introduction/#net-ecosystem-overview","title":".NET Ecosystem Overview","text":"<pre><code>graph TD\n    A[.NET Ecosystem] --&gt; B[.NET Runtime]\n    A --&gt; C[Languages]\n    A --&gt; D[Application Types]\n    A --&gt; E[Development Tools]\n\n    B --&gt; B1[CoreCLR]\n    B --&gt; B2[Mono Runtime]\n    B --&gt; B3[.NET Framework]\n\n    C --&gt; C1[C#]\n    C --&gt; C2[F#]\n    C --&gt; C3[VB.NET]\n    C --&gt; C4[C++/CLI]\n\n    D --&gt; D1[Web Apps]\n    D --&gt; D2[Desktop Apps]\n    D --&gt; D3[Mobile Apps]\n    D --&gt; D4[APIs]\n    D --&gt; D5[Microservices]\n    D --&gt; D6[Cloud Apps]\n\n    E --&gt; E1[Visual Studio]\n    E --&gt; E2[VS Code]\n    E --&gt; E3[JetBrains Rider]\n    E --&gt; E4[.NET CLI]\n</code></pre>"},{"location":"dotnet-introduction/#key-components","title":"Key Components","text":""},{"location":"dotnet-introduction/#1-runtime-environment","title":"1. Runtime Environment","text":"<p>The .NET runtime executes applications and provides services like: - Garbage Collection: Automatic memory management - JIT Compilation: Just-in-time code compilation - Exception Handling: Robust error management - Threading: Multi-threading support</p>"},{"location":"dotnet-introduction/#2-base-class-library-bcl","title":"2. Base Class Library (BCL)","text":"<p>Comprehensive set of classes providing: - Collections: Arrays, Lists, Dictionaries - I/O Operations: File and network operations - String Manipulation: Text processing - Date/Time: Temporal operations - Security: Authentication and encryption</p>"},{"location":"dotnet-introduction/#3-language-support","title":"3. Language Support","text":"<p>Multiple programming languages: - C#: Primary object-oriented language - F#: Functional programming language - VB.NET: Visual Basic for .NET - C++/CLI: C++ with .NET integration</p>"},{"location":"dotnet-introduction/#why-choose-net","title":"Why Choose .NET?","text":""},{"location":"dotnet-introduction/#1-cross-platform-compatibility","title":"1. Cross-Platform Compatibility","text":"<pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Windows   \u2502    macOS    \u2502    Linux    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502     \u2713       \u2502      \u2713      \u2502      \u2713      \u2502\n\u2502  Full       \u2502   Full      \u2502   Full      \u2502\n\u2502  Support    \u2502   Support   \u2502   Support   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"dotnet-introduction/#2-performance-and-scalability","title":"2. Performance and Scalability","text":"Feature Benefit JIT Compilation Optimized native code execution Garbage Collection Automatic memory management Async Programming Non-blocking operations Multi-threading Parallel processing support"},{"location":"dotnet-introduction/#3-rich-ecosystem","title":"3. Rich Ecosystem","text":"<ul> <li>NuGet Package Manager: 300,000+ packages</li> <li>Extensive Documentation: Comprehensive learning resources</li> <li>Active Community: Large developer community</li> <li>Microsoft Support: Enterprise-grade support</li> </ul>"},{"location":"dotnet-introduction/#4-development-productivity","title":"4. Development Productivity","text":"<pre><code>graph LR\n    A[High Productivity] --&gt; B[IntelliSense]\n    A --&gt; C[Debugging Tools]\n    A --&gt; D[Package Management]\n    A --&gt; E[Project Templates]\n    A --&gt; F[Testing Framework]\n\n    B --&gt; B1[Code Completion]\n    B --&gt; B2[Error Detection]\n\n    C --&gt; C1[Breakpoints]\n    C --&gt; C2[Variable Inspection]\n\n    D --&gt; D1[NuGet Integration]\n    D --&gt; D2[Dependency Management]\n\n    E --&gt; E1[Web API]\n    E --&gt; E2[Console App]\n    E --&gt; E3[Class Library]\n\n    F --&gt; F1[Unit Testing]\n    F --&gt; F2[Integration Testing]\n</code></pre>"},{"location":"dotnet-introduction/#application-types-you-can-build","title":"Application Types You Can Build","text":""},{"location":"dotnet-introduction/#1-web-applications","title":"1. Web Applications","text":"<ul> <li>ASP.NET Core MVC: Model-View-Controller pattern</li> <li>Blazor: Web UI with C#</li> <li>ASP.NET Web API: RESTful services</li> <li>SignalR: Real-time communication</li> </ul> <pre><code>// Simple Web API Controller\n[ApiController]\n[Route(\"api/[controller]\")]\npublic class ProductsController : ControllerBase\n{\n    [HttpGet]\n    public IActionResult GetProducts()\n    {\n        return Ok(new { message = \"Hello from .NET API!\" });\n    }\n}\n</code></pre>"},{"location":"dotnet-introduction/#2-desktop-applications","title":"2. Desktop Applications","text":"<ul> <li>WPF: Windows Presentation Foundation</li> <li>WinForms: Traditional Windows forms</li> <li>MAUI: Multi-platform app development</li> <li>Avalonia: Cross-platform UI framework</li> </ul>"},{"location":"dotnet-introduction/#3-mobile-applications","title":"3. Mobile Applications","text":"<ul> <li>.NET MAUI: iOS, Android, Windows</li> <li>Xamarin: Legacy mobile development</li> <li>Uno Platform: Cross-platform development</li> </ul>"},{"location":"dotnet-introduction/#4-cloud-and-microservices","title":"4. Cloud and Microservices","text":"<ul> <li>Azure Functions: Serverless computing</li> <li>Docker Containers: Containerized applications</li> <li>Kubernetes: Container orchestration</li> <li>Service Mesh: Microservices communication</li> </ul>"},{"location":"dotnet-introduction/#5-game-development","title":"5. Game Development","text":"<ul> <li>Unity: Popular game engine</li> <li>MonoGame: Cross-platform framework</li> <li>Godot: Open-source game engine</li> </ul>"},{"location":"dotnet-introduction/#net-versions-comparison","title":".NET Versions Comparison","text":"Version Release LTS EOL Key Features .NET 8 Nov 2023 \u2713 Nov 2026 Performance, Native AOT .NET 7 Nov 2022 \u2717 May 2024 Performance improvements .NET 6 Nov 2021 \u2713 Nov 2024 MAUI, Hot Reload .NET 5 Nov 2020 \u2717 May 2022 Unified platform .NET Core 3.1 Dec 2019 \u2713 Dec 2022 Windows desktop apps"},{"location":"dotnet-introduction/#lts-long-term-support-benefits","title":"LTS (Long Term Support) Benefits","text":"<ul> <li>3 years of support</li> <li>Security updates</li> <li>Bug fixes</li> <li>Production stability</li> </ul>"},{"location":"dotnet-introduction/#development-environment","title":"Development Environment","text":""},{"location":"dotnet-introduction/#required-tools","title":"Required Tools","text":"<ol> <li> <p>.NET SDK <pre><code># Download from: https://dotnet.microsoft.com/download\ndotnet --version\n</code></pre></p> </li> <li> <p>Code Editor/IDE</p> </li> <li>Visual Studio: Full-featured IDE (Windows/Mac)</li> <li>Visual Studio Code: Lightweight editor (Cross-platform)</li> <li> <p>JetBrains Rider: Premium IDE (Cross-platform)</p> </li> <li> <p>Additional Tools</p> </li> <li>Git: Version control</li> <li>Docker: Containerization</li> <li>Azure CLI: Cloud deployment</li> </ol>"},{"location":"dotnet-introduction/#development-workflow","title":"Development Workflow","text":"<pre><code>graph LR\n    A[Write Code] --&gt; B[Build]\n    B --&gt; C[Test]\n    C --&gt; D[Debug]\n    D --&gt; E{Issues?}\n    E --&gt;|Yes| A\n    E --&gt;|No| F[Deploy]\n    F --&gt; G[Monitor]\n    G --&gt; H[Maintain]\n</code></pre>"},{"location":"dotnet-introduction/#getting-started-example","title":"Getting Started Example","text":""},{"location":"dotnet-introduction/#1-create-your-first-application","title":"1. Create Your First Application","text":"<pre><code># Create new console application\ndotnet new console -n MyFirstApp\n\n# Navigate to project\ncd MyFirstApp\n\n# Run the application\ndotnet run\n</code></pre>"},{"location":"dotnet-introduction/#2-basic-program-structure","title":"2. Basic Program Structure","text":"<pre><code>// Program.cs\nusing System;\n\nnamespace MyFirstApp\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Console.WriteLine(\"Hello, .NET World!\");\n\n            // Get user input\n            Console.Write(\"Enter your name: \");\n            string name = Console.ReadLine();\n\n            // Display personalized message\n            Console.WriteLine($\"Hello, {name}! Welcome to .NET!\");\n        }\n    }\n}\n</code></pre>"},{"location":"dotnet-introduction/#3-enhanced-example-with-classes","title":"3. Enhanced Example with Classes","text":"<pre><code>// Person.cs\npublic class Person\n{\n    public string Name { get; set; }\n    public int Age { get; set; }\n\n    public void Introduce()\n    {\n        Console.WriteLine($\"Hi, I'm {Name} and I'm {Age} years old.\");\n    }\n}\n\n// Program.cs\nusing System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var person = new Person \n        { \n            Name = \"John Doe\", \n            Age = 30 \n        };\n\n        person.Introduce();\n    }\n}\n</code></pre>"},{"location":"dotnet-introduction/#net-architecture","title":".NET Architecture","text":"<pre><code>graph TB\n    subgraph \"Application Layer\"\n        A1[Your Application]\n        A2[Third-party Libraries]\n    end\n\n    subgraph \".NET Runtime\"\n        B1[Base Class Library]\n        B2[Runtime Services]\n        B3[Garbage Collector]\n        B4[JIT Compiler]\n    end\n\n    subgraph \"Operating System\"\n        C1[Windows]\n        C2[macOS]\n        C3[Linux]\n    end\n\n    A1 --&gt; B1\n    A2 --&gt; B1\n    B1 --&gt; B2\n    B2 --&gt; B3\n    B2 --&gt; B4\n    B2 --&gt; C1\n    B2 --&gt; C2\n    B2 --&gt; C3\n</code></pre>"},{"location":"dotnet-introduction/#performance-benefits","title":"Performance Benefits","text":""},{"location":"dotnet-introduction/#compilation-process","title":"Compilation Process","text":"<pre><code>graph LR\n    A[C# Source Code] --&gt; B[IL Code]\n    B --&gt; C[JIT Compiler]\n    C --&gt; D[Native Machine Code]\n    D --&gt; E[Execution]\n\n    style A fill:#e3f2fd\n    style B fill:#fff3e0\n    style C fill:#f3e5f5\n    style D fill:#e8f5e8\n    style E fill:#fff8e1\n</code></pre>"},{"location":"dotnet-introduction/#performance-features","title":"Performance Features","text":"<ol> <li>Just-In-Time (JIT) Compilation</li> <li>Optimizes code for target hardware</li> <li> <p>Caches compiled code for reuse</p> </li> <li> <p>Ahead-of-Time (AOT) Compilation</p> </li> <li>Pre-compiled native binaries</li> <li>Faster startup times</li> <li> <p>Smaller deployment size</p> </li> <li> <p>Garbage Collection</p> </li> <li>Automatic memory management</li> <li>Generational collection</li> <li>Low-latency modes available</li> </ol>"},{"location":"dotnet-introduction/#community-and-support","title":"Community and Support","text":""},{"location":"dotnet-introduction/#learning-resources","title":"Learning Resources","text":"<ul> <li>Microsoft Learn: Free interactive tutorials</li> <li>Documentation: Comprehensive API reference</li> <li>GitHub: Open-source projects and samples</li> <li>Stack Overflow: Community Q&amp;A</li> <li>YouTube: Video tutorials and conferences</li> </ul>"},{"location":"dotnet-introduction/#getting-help","title":"Getting Help","text":"<pre><code># Built-in help\ndotnet --help\ndotnet new --help\ndotnet build --help\n\n# Community resources\n# - Stack Overflow: [asp.net-core], [c#], [.net]\n# - Reddit: r/dotnet, r/csharp\n# - Discord: .NET Community Discord\n</code></pre>"},{"location":"dotnet-introduction/#real-world-success-stories","title":"Real-World Success Stories","text":""},{"location":"dotnet-introduction/#enterprise-applications","title":"Enterprise Applications","text":"<ul> <li>Stack Overflow: High-performance Q&amp;A platform</li> <li>Microsoft Office: Office 365 services</li> <li>Stackoverflow: Developer community platform</li> </ul>"},{"location":"dotnet-introduction/#e-commerce","title":"E-commerce","text":"<ul> <li>GoDaddy: Domain and hosting services</li> <li>Alibaba: Cloud services platform</li> </ul>"},{"location":"dotnet-introduction/#financial-services","title":"Financial Services","text":"<ul> <li>UBS: Investment banking systems</li> <li>S&amp;P Global: Financial data services</li> </ul>"},{"location":"dotnet-introduction/#next-steps","title":"Next Steps","text":"<p>After understanding what .NET is and its benefits:</p> <ol> <li>Install .NET on your system</li> <li>Learn C# programming language</li> <li>Understand project structure</li> <li>Master .NET CLI commands</li> </ol>"},{"location":"dotnet-introduction/#summary","title":"Summary","text":"<p>.NET is a powerful, versatile, and modern development platform that offers:</p> Advantage Description Cross-Platform Run on Windows, macOS, and Linux High Performance JIT compilation and optimizations Rich Ecosystem Extensive libraries and tools Developer Friendly Excellent tooling and documentation Enterprise Ready Scalable and secure applications Open Source Community-driven development <p>Whether you're building web applications, desktop software, mobile apps, or cloud services, .NET provides the tools and framework to create robust, scalable, and maintainable applications.</p> <p>The combination of performance, productivity, and platform flexibility makes .NET an excellent choice for modern software development projects of any scale.</p>"},{"location":"dotnet-overview/","title":"Dotnet overview","text":""},{"location":"dotnet-overview/#net-articles-overview","title":".NET Articles Overview","text":""},{"location":"dotnet-overview/#basic-net","title":"Basic .NET","text":"<ul> <li>Introduction to .NET: What and Why?</li> <li>Installing .NET on Various Operating Systems</li> <li>Getting to Know C# Programming Language</li> <li>Project and Solution Structure in .NET</li> <li>Essential .NET CLI Commands</li> <li>Creating and Running Your First Project</li> <li>Package Management with NuGet</li> <li>Class and Object Concepts in C#</li> <li>Interface and Inheritance Concepts in C#</li> </ul>"},{"location":"dotnet-overview/#advanced-net","title":"Advanced .NET","text":"<ul> <li>Dependency Injection in .NET</li> <li>Entity Framework Core: ORM in .NET</li> <li>Building REST API with ASP.NET Core</li> <li>Middleware Concepts in ASP.NET Core</li> <li>Authentication &amp; Authorization in .NET</li> <li>Logging and Monitoring in .NET</li> <li>Unit and Integration Testing in .NET</li> <li>Clean Architecture in .NET</li> <li>Microservices with .NET</li> </ul>"},{"location":"dotnet-overview/#tips-and-tricks","title":"Tips and Tricks","text":"<ul> <li>Debugging Tips in Visual Studio &amp; VS Code</li> <li>Solving Common Issues in .NET</li> <li>Performance Optimization for .NET Applications</li> <li>Managing Environment Variables in .NET</li> <li>Best Practices for Naming and Folder Structure</li> <li>Build &amp; Deployment Automation with CI/CD</li> </ul>"},{"location":"dotnet-overview/#case-studies","title":"Case Studies","text":"<ul> <li>Building Simple CRUD Application with .NET</li> <li>Integrating .NET with SQL Server Database</li> <li>Creating Web API and Frontend Consumption</li> <li>Implementing JWT Authentication in .NET</li> <li>Case Study: Microservices with .NET and Docker</li> <li>Setting Up Isolated Development Environment with .NET</li> </ul>"},{"location":"dotnet-package/","title":".NET Package","text":""},{"location":"dotnet-package/#add-package","title":"Add Package","text":"<pre><code>dotnet add package &lt;PackageName&gt;\n</code></pre>"},{"location":"dotnet-ping-pong-api/","title":"Dotnet ping pong api","text":"<pre><code>dotnet new web -n PingPongAPI --framework net8.0\n</code></pre> <p>code :  <pre><code>var builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\napp.MapGet(\"/ping\", () =&gt; Results.Ok(\"pong\"));\n\napp.Run();\n</code></pre></p>"},{"location":"dotnet-project-creation/","title":"Dotnet project creation","text":"<p>For microservices purpose there.</p>"},{"location":"dotnet-project-creation/#references","title":"References","text":"<ul> <li>https://medium.com/codex/building-microservices-with-net-core-a-comprehensive-guide-804c60a85f3a</li> </ul>"},{"location":"dotnet-project-structure/","title":"Project and Solution Structure in .NET","text":""},{"location":"dotnet-project-structure/#overview","title":"Overview","text":"<p>Understanding .NET project and solution structure is crucial for organizing code effectively. This guide covers the anatomy of .NET projects, solutions, and best practices for structuring applications.</p>"},{"location":"dotnet-project-structure/#project-vs-solution","title":"Project vs Solution","text":""},{"location":"dotnet-project-structure/#project","title":"Project","text":"<p>A project is a single compilable unit that produces one output (executable, library, etc.).</p>"},{"location":"dotnet-project-structure/#solution","title":"Solution","text":"<p>A solution is a container that holds one or more related projects.</p> <pre><code>graph TD\n    A[Solution (.sln)] --&gt; B[Project 1 (.csproj)]\n    A --&gt; C[Project 2 (.csproj)]\n    A --&gt; D[Project 3 (.csproj)]\n\n    B --&gt; B1[Source Files]\n    B --&gt; B2[References]\n    B --&gt; B3[Resources]\n\n    C --&gt; C1[Source Files]\n    C --&gt; C2[References]\n    C --&gt; C3[Resources]\n\n    D --&gt; D1[Source Files]\n    D --&gt; D2[References]\n    D --&gt; D3[Resources]\n</code></pre>"},{"location":"dotnet-project-structure/#project-file-structure","title":"Project File Structure","text":""},{"location":"dotnet-project-structure/#basic-console-application-structure","title":"Basic Console Application Structure","text":"<pre><code>MyConsoleApp/\n\u251c\u2500\u2500 MyConsoleApp.csproj    # Project file\n\u251c\u2500\u2500 Program.cs             # Entry point\n\u251c\u2500\u2500 appsettings.json       # Configuration (optional)\n\u251c\u2500\u2500 bin/                   # Compiled output\n\u2502   \u2514\u2500\u2500 Debug/\n\u2502       \u2514\u2500\u2500 net8.0/\n\u251c\u2500\u2500 obj/                   # Temporary build files\n\u2514\u2500\u2500 Properties/            # Assembly info (optional)\n    \u2514\u2500\u2500 launchSettings.json\n</code></pre>"},{"location":"dotnet-project-structure/#web-application-structure","title":"Web Application Structure","text":"<pre><code>MyWebApp/\n\u251c\u2500\u2500 MyWebApp.csproj\n\u251c\u2500\u2500 Program.cs\n\u251c\u2500\u2500 appsettings.json\n\u251c\u2500\u2500 appsettings.Development.json\n\u251c\u2500\u2500 Controllers/\n\u2502   \u251c\u2500\u2500 HomeController.cs\n\u2502   \u2514\u2500\u2500 WeatherController.cs\n\u251c\u2500\u2500 Models/\n\u2502   \u251c\u2500\u2500 User.cs\n\u2502   \u2514\u2500\u2500 Product.cs\n\u251c\u2500\u2500 Views/\n\u2502   \u251c\u2500\u2500 Home/\n\u2502   \u2502   \u251c\u2500\u2500 Index.cshtml\n\u2502   \u2502   \u2514\u2500\u2500 Privacy.cshtml\n\u2502   \u2514\u2500\u2500 Shared/\n\u2502       \u251c\u2500\u2500 _Layout.cshtml\n\u2502       \u2514\u2500\u2500 _ViewStart.cshtml\n\u251c\u2500\u2500 wwwroot/               # Static files\n\u2502   \u251c\u2500\u2500 css/\n\u2502   \u251c\u2500\u2500 js/\n\u2502   \u2514\u2500\u2500 images/\n\u251c\u2500\u2500 bin/\n\u251c\u2500\u2500 obj/\n\u2514\u2500\u2500 Properties/\n    \u2514\u2500\u2500 launchSettings.json\n</code></pre>"},{"location":"dotnet-project-structure/#class-library-structure","title":"Class Library Structure","text":"<pre><code>MyLibrary/\n\u251c\u2500\u2500 MyLibrary.csproj\n\u251c\u2500\u2500 Class1.cs\n\u251c\u2500\u2500 Interfaces/\n\u2502   \u2514\u2500\u2500 IMyService.cs\n\u251c\u2500\u2500 Services/\n\u2502   \u2514\u2500\u2500 MyService.cs\n\u251c\u2500\u2500 Models/\n\u2502   \u2514\u2500\u2500 MyModel.cs\n\u251c\u2500\u2500 bin/\n\u2514\u2500\u2500 obj/\n</code></pre>"},{"location":"dotnet-project-structure/#project-file-anatomy-csproj","title":"Project File Anatomy (.csproj)","text":""},{"location":"dotnet-project-structure/#modern-sdk-style-project-file","title":"Modern SDK-Style Project File","text":"<pre><code>&lt;Project Sdk=\"Microsoft.NET.Sdk\"&gt;\n\n  &lt;!-- Project Properties --&gt;\n  &lt;PropertyGroup&gt;\n    &lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;\n    &lt;OutputType&gt;Exe&lt;/OutputType&gt;\n    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;\n    &lt;Nullable&gt;enable&lt;/Nullable&gt;\n    &lt;AssemblyName&gt;MyApplication&lt;/AssemblyName&gt;\n    &lt;RootNamespace&gt;MyApplication&lt;/RootNamespace&gt;\n    &lt;Version&gt;1.0.0&lt;/Version&gt;\n    &lt;Authors&gt;Your Name&lt;/Authors&gt;\n    &lt;Company&gt;Your Company&lt;/Company&gt;\n    &lt;Product&gt;My Product&lt;/Product&gt;\n    &lt;Description&gt;Application description&lt;/Description&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;!-- Package References --&gt;\n  &lt;ItemGroup&gt;\n    &lt;PackageReference Include=\"Newtonsoft.Json\" Version=\"13.0.3\" /&gt;\n    &lt;PackageReference Include=\"Microsoft.Extensions.Hosting\" Version=\"8.0.0\" /&gt;\n  &lt;/ItemGroup&gt;\n\n  &lt;!-- Project References --&gt;\n  &lt;ItemGroup&gt;\n    &lt;ProjectReference Include=\"..\\MyLibrary\\MyLibrary.csproj\" /&gt;\n  &lt;/ItemGroup&gt;\n\n  &lt;!-- Content Files --&gt;\n  &lt;ItemGroup&gt;\n    &lt;Content Include=\"appsettings.json\"&gt;\n      &lt;CopyToOutputDirectory&gt;PreserveNewest&lt;/CopyToOutputDirectory&gt;\n    &lt;/Content&gt;\n  &lt;/ItemGroup&gt;\n\n  &lt;!-- Embedded Resources --&gt;\n  &lt;ItemGroup&gt;\n    &lt;EmbeddedResource Include=\"Resources\\messages.json\" /&gt;\n  &lt;/ItemGroup&gt;\n\n&lt;/Project&gt;\n</code></pre>"},{"location":"dotnet-project-structure/#property-groups-explained","title":"Property Groups Explained","text":"Property Description Example <code>TargetFramework</code> .NET version to target <code>net8.0</code>, <code>net6.0</code> <code>OutputType</code> Type of output <code>Exe</code>, <code>Library</code>, <code>WinExe</code> <code>ImplicitUsings</code> Auto-include common namespaces <code>enable</code>, <code>disable</code> <code>Nullable</code> Enable nullable reference types <code>enable</code>, <code>warnings</code>, <code>annotations</code> <code>AssemblyName</code> Name of compiled assembly <code>MyApp.exe</code> <code>RootNamespace</code> Default namespace for new files <code>MyCompany.MyApp</code>"},{"location":"dotnet-project-structure/#web-application-project-file","title":"Web Application Project File","text":"<pre><code>&lt;Project Sdk=\"Microsoft.NET.Sdk.Web\"&gt;\n\n  &lt;PropertyGroup&gt;\n    &lt;TargetFramework&gt;net8.0&lt;/TargetFramework&gt;\n    &lt;ImplicitUsings&gt;enable&lt;/ImplicitUsings&gt;\n    &lt;Nullable&gt;enable&lt;/Nullable&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;ItemGroup&gt;\n    &lt;PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"8.0.0\" /&gt;\n    &lt;PackageReference Include=\"Microsoft.EntityFrameworkCore.SqlServer\" Version=\"8.0.0\" /&gt;\n    &lt;PackageReference Include=\"Swashbuckle.AspNetCore\" Version=\"6.4.0\" /&gt;\n  &lt;/ItemGroup&gt;\n\n&lt;/Project&gt;\n</code></pre>"},{"location":"dotnet-project-structure/#solution-structure","title":"Solution Structure","text":""},{"location":"dotnet-project-structure/#simple-solution-structure","title":"Simple Solution Structure","text":"<pre><code>MySolution/\n\u251c\u2500\u2500 MySolution.sln\n\u251c\u2500\u2500 src/                   # Source code projects\n\u2502   \u251c\u2500\u2500 MyApp/\n\u2502   \u2502   \u2514\u2500\u2500 MyApp.csproj\n\u2502   \u2514\u2500\u2500 MyLibrary/\n\u2502       \u2514\u2500\u2500 MyLibrary.csproj\n\u251c\u2500\u2500 tests/                 # Test projects\n\u2502   \u2514\u2500\u2500 MyApp.Tests/\n\u2502       \u2514\u2500\u2500 MyApp.Tests.csproj\n\u2514\u2500\u2500 docs/                  # Documentation\n    \u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"dotnet-project-structure/#enterprise-solution-structure","title":"Enterprise Solution Structure","text":"<pre><code>EnterpriseSolution/\n\u251c\u2500\u2500 EnterpriseSolution.sln\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 Core/              # Core business logic\n\u2502   \u2502   \u251c\u2500\u2500 Domain/\n\u2502   \u2502   \u251c\u2500\u2500 Application/\n\u2502   \u2502   \u2514\u2500\u2500 Infrastructure/\n\u2502   \u251c\u2500\u2500 Presentation/      # UI layers\n\u2502   \u2502   \u251c\u2500\u2500 WebAPI/\n\u2502   \u2502   \u251c\u2500\u2500 WebApp/\n\u2502   \u2502   \u2514\u2500\u2500 ConsoleApp/\n\u2502   \u2514\u2500\u2500 Shared/           # Shared libraries\n\u2502       \u251c\u2500\u2500 Common/\n\u2502       \u2514\u2500\u2500 Contracts/\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 UnitTests/\n\u2502   \u251c\u2500\u2500 IntegrationTests/\n\u2502   \u2514\u2500\u2500 PerformanceTests/\n\u251c\u2500\u2500 tools/                # Build tools and scripts\n\u251c\u2500\u2500 docs/                 # Documentation\n\u251c\u2500\u2500 docker/               # Docker configurations\n\u251c\u2500\u2500 scripts/              # Build and deployment scripts\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 Directory.Build.props  # Shared build properties\n\u2514\u2500\u2500 Directory.Packages.props # Central package management\n</code></pre>"},{"location":"dotnet-project-structure/#solution-file-sln","title":"Solution File (.sln)","text":""},{"location":"dotnet-project-structure/#solution-file-structure","title":"Solution File Structure","text":"<pre><code>Microsoft Visual Studio Solution File, Format Version 12.00\n# Visual Studio Version 17\nVisualStudioVersion = 17.0.31903.59\nMinimumVisualStudioVersion = 10.0.40219.1\n\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"MyApp\", \"src\\MyApp\\MyApp.csproj\", \"{GUID-HERE}\"\nEndProject\n\nProject(\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\") = \"MyLibrary\", \"src\\MyLibrary\\MyLibrary.csproj\", \"{GUID-HERE}\"\nEndProject\n\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"tests\", \"tests\", \"{GUID-HERE}\"\nEndProject\n\nGlobal\n    GlobalSection(SolutionConfigurationPlatforms) = preSolution\n        Debug|Any CPU = Debug|Any CPU\n        Release|Any CPU = Release|Any CPU\n    EndGlobalSection\n\n    GlobalSection(ProjectConfigurationPlatforms) = postSolution\n        {GUID-HERE}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\n        {GUID-HERE}.Debug|Any CPU.Build.0 = Debug|Any CPU\n        {GUID-HERE}.Release|Any CPU.ActiveCfg = Release|Any CPU\n        {GUID-HERE}.Release|Any CPU.Build.0 = Release|Any CPU\n    EndGlobalSection\nEndGlobal\n</code></pre>"},{"location":"dotnet-project-structure/#directory-structure-best-practices","title":"Directory Structure Best Practices","text":""},{"location":"dotnet-project-structure/#clean-architecture-structure","title":"Clean Architecture Structure","text":"<pre><code>CleanArchitecture/\n\u251c\u2500\u2500 CleanArchitecture.sln\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 Domain/                    # Core business entities\n\u2502   \u2502   \u251c\u2500\u2500 Domain.csproj\n\u2502   \u2502   \u251c\u2500\u2500 Entities/\n\u2502   \u2502   \u251c\u2500\u2500 Enums/\n\u2502   \u2502   \u251c\u2500\u2500 Exceptions/\n\u2502   \u2502   \u251c\u2500\u2500 Interfaces/\n\u2502   \u2502   \u2514\u2500\u2500 ValueObjects/\n\u2502   \u251c\u2500\u2500 Application/               # Business logic\n\u2502   \u2502   \u251c\u2500\u2500 Application.csproj\n\u2502   \u2502   \u251c\u2500\u2500 Common/\n\u2502   \u2502   \u251c\u2500\u2500 Features/\n\u2502   \u2502   \u251c\u2500\u2500 Interfaces/\n\u2502   \u2502   \u2514\u2500\u2500 Services/\n\u2502   \u251c\u2500\u2500 Infrastructure/            # External dependencies\n\u2502   \u2502   \u251c\u2500\u2500 Infrastructure.csproj\n\u2502   \u2502   \u251c\u2500\u2500 Data/\n\u2502   \u2502   \u251c\u2500\u2500 Services/\n\u2502   \u2502   \u2514\u2500\u2500 Repositories/\n\u2502   \u2514\u2500\u2500 Presentation/              # UI layer\n\u2502       \u251c\u2500\u2500 WebAPI/\n\u2502       \u2514\u2500\u2500 WebApp/\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 Domain.Tests/\n\u2502   \u251c\u2500\u2500 Application.Tests/\n\u2502   \u251c\u2500\u2500 Infrastructure.Tests/\n\u2502   \u2514\u2500\u2500 Integration.Tests/\n\u2514\u2500\u2500 tools/\n    \u2514\u2500\u2500 BuildTools/\n</code></pre>"},{"location":"dotnet-project-structure/#microservices-structure","title":"Microservices Structure","text":"<pre><code>MicroservicesApp/\n\u251c\u2500\u2500 MicroservicesApp.sln\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 Services/\n\u2502   \u2502   \u251c\u2500\u2500 UserService/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 UserService.API/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 UserService.Domain/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 UserService.Infrastructure/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 UserService.Tests/\n\u2502   \u2502   \u251c\u2500\u2500 OrderService/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 OrderService.API/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 OrderService.Domain/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 OrderService.Infrastructure/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 OrderService.Tests/\n\u2502   \u2502   \u2514\u2500\u2500 PaymentService/\n\u2502   \u251c\u2500\u2500 Shared/\n\u2502   \u2502   \u251c\u2500\u2500 Common/\n\u2502   \u2502   \u251c\u2500\u2500 Events/\n\u2502   \u2502   \u2514\u2500\u2500 Contracts/\n\u2502   \u2514\u2500\u2500 Gateway/\n\u2502       \u2514\u2500\u2500 ApiGateway/\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 IntegrationTests/\n\u2502   \u2514\u2500\u2500 LoadTests/\n\u251c\u2500\u2500 docker/\n\u2502   \u251c\u2500\u2500 docker-compose.yml\n\u2502   \u2514\u2500\u2500 Dockerfile\n\u2514\u2500\u2500 k8s/                          # Kubernetes manifests\n    \u251c\u2500\u2500 deployments/\n    \u2514\u2500\u2500 services/\n</code></pre>"},{"location":"dotnet-project-structure/#configuration-files","title":"Configuration Files","text":""},{"location":"dotnet-project-structure/#appsettingsjson","title":"appsettings.json","text":"<pre><code>{\n  \"Logging\": {\n    \"LogLevel\": {\n      \"Default\": \"Information\",\n      \"Microsoft.AspNetCore\": \"Warning\"\n    }\n  },\n  \"ConnectionStrings\": {\n    \"DefaultConnection\": \"Server=localhost;Database=MyApp;Trusted_Connection=true;\",\n    \"Redis\": \"localhost:6379\"\n  },\n  \"AppSettings\": {\n    \"JwtSecret\": \"your-secret-key\",\n    \"TokenExpirationMinutes\": 60,\n    \"EnableSwagger\": true\n  },\n  \"ExternalApis\": {\n    \"PaymentGateway\": {\n      \"BaseUrl\": \"https://api.payment.com\",\n      \"ApiKey\": \"your-api-key\"\n    }\n  }\n}\n</code></pre>"},{"location":"dotnet-project-structure/#launchsettingsjson","title":"launchSettings.json","text":"<pre><code>{\n  \"profiles\": {\n    \"Development\": {\n      \"commandName\": \"Project\",\n      \"dotnetRunMessages\": true,\n      \"launchBrowser\": true,\n      \"applicationUrl\": \"https://localhost:7001;http://localhost:5001\",\n      \"environmentVariables\": {\n        \"ASPNETCORE_ENVIRONMENT\": \"Development\"\n      }\n    },\n    \"Production\": {\n      \"commandName\": \"Project\",\n      \"launchBrowser\": false,\n      \"applicationUrl\": \"https://localhost:443;http://localhost:80\",\n      \"environmentVariables\": {\n        \"ASPNETCORE_ENVIRONMENT\": \"Production\"\n      }\n    }\n  }\n}\n</code></pre>"},{"location":"dotnet-project-structure/#working-with-projects-and-solutions","title":"Working with Projects and Solutions","text":""},{"location":"dotnet-project-structure/#creating-projects-and-solutions","title":"Creating Projects and Solutions","text":"<pre><code># Create new solution\ndotnet new sln -n MySolution\n\n# Create projects\ndotnet new console -n MyConsoleApp\ndotnet new webapi -n MyWebAPI\ndotnet new classlib -n MyLibrary\ndotnet new xunit -n MyLibrary.Tests\n\n# Add projects to solution\ndotnet sln add MyConsoleApp/MyConsoleApp.csproj\ndotnet sln add MyWebAPI/MyWebAPI.csproj\ndotnet sln add MyLibrary/MyLibrary.csproj\ndotnet sln add MyLibrary.Tests/MyLibrary.Tests.csproj\n\n# Add project references\ndotnet add MyConsoleApp/MyConsoleApp.csproj reference MyLibrary/MyLibrary.csproj\ndotnet add MyLibrary.Tests/MyLibrary.Tests.csproj reference MyLibrary/MyLibrary.csproj\n</code></pre>"},{"location":"dotnet-project-structure/#building-projects-and-solutions","title":"Building Projects and Solutions","text":"<pre><code># Build entire solution\ndotnet build\n\n# Build specific project\ndotnet build MyWebAPI/MyWebAPI.csproj\n\n# Build in Release mode\ndotnet build -c Release\n\n# Restore packages\ndotnet restore\n\n# Clean solution\ndotnet clean\n</code></pre>"},{"location":"dotnet-project-structure/#build-configuration","title":"Build Configuration","text":""},{"location":"dotnet-project-structure/#directorybuildprops","title":"Directory.Build.props","text":"<pre><code>&lt;Project&gt;\n  &lt;!-- Global properties for all projects --&gt;\n  &lt;PropertyGroup&gt;\n    &lt;LangVersion&gt;latest&lt;/LangVersion&gt;\n    &lt;TreatWarningsAsErrors&gt;true&lt;/TreatWarningsAsErrors&gt;\n    &lt;WarningsAsErrors /&gt;\n    &lt;WarningsNotAsErrors&gt;CS1591&lt;/WarningsNotAsErrors&gt;\n    &lt;Version&gt;1.0.0&lt;/Version&gt;\n    &lt;Company&gt;My Company&lt;/Company&gt;\n    &lt;Product&gt;My Product&lt;/Product&gt;\n    &lt;Copyright&gt;Copyright \u00a9 My Company 2024&lt;/Copyright&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;!-- Global package references --&gt;\n  &lt;ItemGroup&gt;\n    &lt;PackageReference Include=\"Microsoft.CodeAnalysis.Analyzers\" Version=\"3.3.4\" PrivateAssets=\"all\" /&gt;\n    &lt;PackageReference Include=\"StyleCop.Analyzers\" Version=\"1.1.118\" PrivateAssets=\"all\" /&gt;\n  &lt;/ItemGroup&gt;\n&lt;/Project&gt;\n</code></pre>"},{"location":"dotnet-project-structure/#directorypackagesprops","title":"Directory.Packages.props","text":"<pre><code>&lt;Project&gt;\n  &lt;PropertyGroup&gt;\n    &lt;ManagePackageVersionsCentrally&gt;true&lt;/ManagePackageVersionsCentrally&gt;\n  &lt;/PropertyGroup&gt;\n\n  &lt;ItemGroup&gt;\n    &lt;PackageVersion Include=\"Microsoft.Extensions.Hosting\" Version=\"8.0.0\" /&gt;\n    &lt;PackageVersion Include=\"Microsoft.Extensions.DependencyInjection\" Version=\"8.0.0\" /&gt;\n    &lt;PackageVersion Include=\"Newtonsoft.Json\" Version=\"13.0.3\" /&gt;\n    &lt;PackageVersion Include=\"Serilog\" Version=\"3.1.1\" /&gt;\n    &lt;PackageVersion Include=\"xunit\" Version=\"2.4.2\" /&gt;\n    &lt;PackageVersion Include=\"Microsoft.NET.Test.Sdk\" Version=\"17.8.0\" /&gt;\n  &lt;/ItemGroup&gt;\n&lt;/Project&gt;\n</code></pre>"},{"location":"dotnet-project-structure/#file-and-folder-naming-conventions","title":"File and Folder Naming Conventions","text":""},{"location":"dotnet-project-structure/#c-naming-conventions","title":"C# Naming Conventions","text":"Element Convention Example Namespace PascalCase <code>MyCompany.MyProduct.MyModule</code> Class PascalCase <code>UserService</code>, <code>ProductController</code> Interface I + PascalCase <code>IUserService</code>, <code>IRepository&lt;T&gt;</code> Method PascalCase <code>GetUser()</code>, <code>CreateProduct()</code> Property PascalCase <code>UserName</code>, <code>CreatedDate</code> Field (private) _camelCase <code>_userName</code>, <code>_createdDate</code> Variable camelCase <code>userName</code>, <code>productList</code> Constant PascalCase <code>MaxRetryCount</code>, <code>DefaultTimeout</code>"},{"location":"dotnet-project-structure/#file-and-folder-conventions","title":"File and Folder Conventions","text":"<pre><code>Project/\n\u251c\u2500\u2500 Controllers/           # PascalCase for folders\n\u2502   \u251c\u2500\u2500 UserController.cs  # Controller suffix\n\u2502   \u2514\u2500\u2500 ProductController.cs\n\u251c\u2500\u2500 Services/\n\u2502   \u251c\u2500\u2500 IUserService.cs    # Interface with I prefix\n\u2502   \u2514\u2500\u2500 UserService.cs     # Implementation\n\u251c\u2500\u2500 Models/\n\u2502   \u251c\u2500\u2500 User.cs           # Entity/Model names\n\u2502   \u2514\u2500\u2500 CreateUserRequest.cs # Descriptive names\n\u251c\u2500\u2500 Repositories/\n\u2502   \u251c\u2500\u2500 IUserRepository.cs\n\u2502   \u2514\u2500\u2500 UserRepository.cs\n\u2514\u2500\u2500 Extensions/\n    \u2514\u2500\u2500 StringExtensions.cs # Extensions suffix\n</code></pre>"},{"location":"dotnet-project-structure/#project-templates","title":"Project Templates","text":""},{"location":"dotnet-project-structure/#custom-project-template","title":"Custom Project Template","text":"<pre><code># Install template\ndotnet new install MyCompany.ProjectTemplates\n\n# Create project from template\ndotnet new mytemplate -n MyNewProject\n\n# List available templates\ndotnet new list\n</code></pre>"},{"location":"dotnet-project-structure/#creating-custom-template","title":"Creating Custom Template","text":"<pre><code>MyTemplate/\n\u251c\u2500\u2500 .template.config/\n\u2502   \u2514\u2500\u2500 template.json\n\u251c\u2500\u2500 MyTemplate.csproj\n\u251c\u2500\u2500 Program.cs\n\u2514\u2500\u2500 README.md\n</code></pre> <pre><code>{\n  \"$schema\": \"http://json.schemastore.org/template\",\n  \"author\": \"Your Name\",\n  \"classifications\": [\"Web\", \"API\"],\n  \"identity\": \"MyCompany.WebAPI.Template\",\n  \"name\": \"My Web API Template\",\n  \"shortName\": \"mywebapi\",\n  \"tags\": {\n    \"language\": \"C#\",\n    \"type\": \"project\"\n  },\n  \"sourceName\": \"MyTemplate\",\n  \"preferNameDirectory\": true\n}\n</code></pre>"},{"location":"dotnet-project-structure/#best-practices","title":"Best Practices","text":""},{"location":"dotnet-project-structure/#project-organization","title":"Project Organization","text":"<ol> <li>Separate Concerns</li> <li>Keep business logic separate from UI</li> <li> <p>Use layers (Domain, Application, Infrastructure)</p> </li> <li> <p>Consistent Naming</p> </li> <li>Follow C# naming conventions</li> <li> <p>Use descriptive names</p> </li> <li> <p>Project Dependencies</p> </li> <li>Avoid circular references</li> <li>Keep dependencies minimal</li> <li>Use interfaces for loose coupling</li> </ol>"},{"location":"dotnet-project-structure/#solution-organization","title":"Solution Organization","text":"<ol> <li> <p>Logical Grouping <pre><code>src/           # Source code\ntests/         # Test projects\ntools/         # Build tools\ndocs/          # Documentation\nsamples/       # Example code\n</code></pre></p> </li> <li> <p>Multiple Solutions</p> </li> <li>For large codebases</li> <li>Group related projects</li> <li>Maintain build performance</li> </ol>"},{"location":"dotnet-project-structure/#file-organization","title":"File Organization","text":"<ol> <li>One Class Per File</li> <li>Match File Name to Class Name</li> <li>Group Related Files in Folders</li> <li>Use Partial Classes When Appropriate</li> </ol>"},{"location":"dotnet-project-structure/#project-structure-visualization","title":"Project Structure Visualization","text":"<pre><code>graph TD\n    A[Solution] --&gt; B[Source Projects]\n    A --&gt; C[Test Projects]\n    A --&gt; D[Documentation]\n\n    B --&gt; B1[Domain Layer]\n    B --&gt; B2[Application Layer]\n    B --&gt; B3[Infrastructure Layer]\n    B --&gt; B4[Presentation Layer]\n\n    B1 --&gt; B1a[Entities]\n    B1 --&gt; B1b[Interfaces]\n    B1 --&gt; B1c[Value Objects]\n\n    B2 --&gt; B2a[Services]\n    B2 --&gt; B2b[Features]\n    B2 --&gt; B2c[DTOs]\n\n    B3 --&gt; B3a[Data Access]\n    B3 --&gt; B3b[External Services]\n    B3 --&gt; B3c[File System]\n\n    B4 --&gt; B4a[Web API]\n    B4 --&gt; B4b[Web App]\n    B4 --&gt; B4c[Console App]\n\n    C --&gt; C1[Unit Tests]\n    C --&gt; C2[Integration Tests]\n    C --&gt; C3[Performance Tests]\n</code></pre>"},{"location":"dotnet-project-structure/#next-steps","title":"Next Steps","text":"<p>After understanding project structure:</p> <ol> <li>Learn .NET CLI commands</li> <li>Create your first project</li> <li>Explore NuGet package management</li> <li>Understand dependency injection</li> </ol> <p>Understanding proper project and solution structure is fundamental to building maintainable, scalable .NET applications. Start with simple structures and evolve them as your applications grow in complexity.</p>"},{"location":"dotnet-starter/","title":".Net Starter","text":""},{"location":"dotnet-starter/#create-net-project","title":"Create .NET Project","text":""},{"location":"dotnet-starter/#console-based-application","title":"Console Based Application","text":"<p><pre><code>dotnet new console -n AppName\n</code></pre> or  <pre><code>dotnet new console --name AppName\n</code></pre></p>"},{"location":"dotnet-starter/#web-based-application","title":"Web Based Application","text":"<p><pre><code>dotnet new web -n AppName\n</code></pre> or  <pre><code>dotnet new web --name AppName\n</code></pre></p>"},{"location":"dotnet-starter/#mvc-web-application","title":"MVC Web Application","text":"<p><pre><code>dotnet new mvc -n AppName\n</code></pre> or  ``` dotnet new mvc --name AppName</p>"},{"location":"dotnet-webapi/","title":".Net Web API","text":""},{"location":"dotnet-webapi/#install-entity-framework-core-tools","title":"install Entity Framework Core Tools","text":"<pre><code>dotnet tool install --global dotnet-ef\n</code></pre>"},{"location":"dotnet-webapi/#insall-entity-net-framework","title":"Insall Entity .NET Framework","text":"<pre><code>dotnet add package MySql.Data\ndotnet add package Pomelo.EntityFrameworkCore.MySql\ndotnet add package Microsoft.EntityFrameworkCore.Tools\n</code></pre>"},{"location":"dotnet-webapi/#migration","title":"Migration","text":"<pre><code>dotnet ef migrations add InitialCreate\ndotnet ef database update\n</code></pre>"},{"location":"dotnet-webapi/#run","title":"Run","text":"<pre><code>dotnet run\n</code></pre>"},{"location":"dotnet-webapi/#build","title":"Build","text":"<pre><code>dotnet build\n</code></pre>"},{"location":"dotnet-webapi/#create-gitignore","title":"Create .gitignore","text":"<pre><code>dotnet new gitignore\n</code></pre> <p>Read :  - Create PingPing API</p>"},{"location":"dotnet/","title":".NET","text":"<ul> <li>.NET Starter</li> <li>.NET WebApi Best Practice</li> <li>.NET Package</li> <li>.NET Nuget Packages</li> </ul>"},{"location":"github/","title":"Github","text":"<pre><code>git init\n</code></pre> <pre><code>git add &lt;args&gt;\n</code></pre> <pre><code>git commit -m \"commit message\"\n</code></pre> <pre><code>git branch -M main\n</code></pre> <pre><code>git remote add origin &lt;repository &gt;\n</code></pre>"},{"location":"homepage/","title":"Homepage","text":""},{"location":"homepage/#hello-world-im-mek","title":"Hello World, Im Mek.","text":"<p>This wiki is a collection of my personal notes, tutorials, and projects. One of the goals in establishing this wiki is to document the projects I am currently undertaking or researching.</p> <p>Not only that, but you can also find various programming tutorials, both basic and advanced, on this wiki. The next step is to visit the Table of Content to see the list of available articles.</p> <p>All resources you access on this wiki are free and open source. Provide feedback to me in developing this wiki. Visit the Table of Content to see the list of available articles. Some articles are quite useful,</p> <p>Go to see list of Table of Content.</p>"},{"location":"homepage/#interesting-article","title":"Interesting article","text":"<p>Docker Fundamentals: Essential Basics Every Developer Should Know</p> <p>Build, ship, and run anything, anywhere\u2014discover the power of Docker fundamentals.</p> <p> Getting started</p> <p></p> <p>Getting Started with C# and .NET: Fundamentals Made Easy</p> <p>Understand key concepts and workflows in .NET C# to build a solid programming foundation.</p> <p> Getting started</p> <p></p> <p>Ubuntu 101 Unlocked: Master the Basics Like a Professional</p> <p>Learn the key tricks and tools that make Ubuntu a powerhouse for your workflow.</p> <p> Getting started</p>"},{"location":"index-old/","title":"Welcome","text":"<p>This wiki is a collection of my personal notes, tutorials, and projects. One of the goals in establishing this wiki is to document the projects I am currently undertaking or researching.</p> <p>Not only that, but you can also find various programming tutorials, both basic and advanced, on this wiki. The next step is to visit the Table of Content to see the list of available articles. You can contribute to enriching the content of this wiki. You can register and create an account at this registration link.</p> <p>All resources you access on this wiki are free and open source.</p> <p>Provide feedback to me in developing this wiki.</p> <p>Visit the Table of Content to see the list of available articles.</p> <p>Some articles are quite useful,</p> <ul> <li>C#</li> <li>Docker</li> <li>Github</li> <li>Programming Language</li> <li>Ubuntu</li> </ul> <p>Go to see list of Table of Content.</p>"},{"location":"kubernetes-deploy-application/","title":"Kubernetes deploy application","text":""},{"location":"kubernetes-deploy-application/#service","title":"Service","text":"<p>Create a sample deployment and expose it on port 8080:</p> <pre><code>kubectl create deployment hello-minikube --image=kicbase/echo-server:1.0\nkubectl expose deployment hello-minikube --type=NodePort --port=8080\n</code></pre> <p>Copy</p> <p>It may take a moment, but your deployment will soon show up when you run:</p> <pre><code>kubectl get services hello-minikube\n</code></pre> <p>Copy</p> <p>The easiest way to access this service is to let minikube launch a web browser for you:</p> <pre><code>minikube service hello-minikube\n</code></pre> <p>Copy</p> <p>Alternatively, use kubectl to forward the port:</p> <pre><code>kubectl port-forward service/hello-minikube 7080:8080\n</code></pre> <p>Copy</p> <p>Tada! Your application is now available at\u00a0http://localhost:7080/.</p> <p>You should be able to see the request metadata in the application output. Try changing the path of the request and observe the changes. Similarly, you can do a POST request and observe the body show up in the output.</p>"},{"location":"kubernetes-installation/","title":"Kubernetes Installation","text":""},{"location":"kubernetes-installation/#windows","title":"\ud83e\ude9fWindows","text":"<pre><code>curl.exe -LO \"https://dl.k8s.io/release/v1.32.0/bin/windows/amd64/kubectl.exe\"\n</code></pre>"},{"location":"kubernetes-installation/#validate-installation-optional","title":"Validate installation (optional)","text":"<p><pre><code>curl.exe -LO \"https://dl.k8s.io/v1.32.0/bin/windows/amd64/kubectl.exe.sha256\"\n</code></pre> <pre><code>CertUtil -hashfile kubectl.exe SHA256\ntype kubectl.exe.sha256\n</code></pre></p>"},{"location":"kubernetes-start-locally-windows/","title":"Kubernetes start locally windows","text":""},{"location":"kubernetes-start-locally-windows/#prerequisite-installation","title":"Prerequisite Installation","text":"<p>Sebelum install Minikube, pastikan:</p> <ul> <li>Virtualization diaktifkan (Cek di Task Manager \u2192 Performance \u2192 CPU \u2192 Virtualization: Enabled).</li> <li>Hyper-V atau Docker Desktop sudah terinstal (pilih salah satu sebagai driver Minikube).</li> </ul> <p>Jika belum ada Docker Desktop, kamu bisa aktifkan Hyper-V: <pre><code>Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-All -NoRestart\n</code></pre></p>"},{"location":"kubernetes-start-locally-windows/#install-minikube","title":"Install Minikube","text":"<pre><code>winget install Kubernetes.minikube\n</code></pre>"},{"location":"kubernetes-start-locally-windows/#start-your-cluster","title":"Start your cluster","text":"<pre><code>minikube start\n</code></pre>"},{"location":"kubernetes-start-locally-windows/#interact-with-your-cluster","title":"Interact with your cluster","text":"<pre><code>minikube start\n</code></pre> <pre><code>minikube dashboard\n</code></pre>"},{"location":"material-mkdocs-yml/","title":"Material mkdocs yml","text":"<p>on:   push:     branches:       - main  </p> <p>jobs:   deploy:     runs-on: ubuntu-latest</p> <pre><code>steps:\n  - name: Checkout repository\n    uses: actions/checkout@v3\n\n  - name: Set up Python\n    uses: actions/setup-python@v4\n    with:\n      python-version: '3.12'\n\n  - name: Install MkDocs and Material\n    run: |\n      pip install mkdocs mkdocs-material\n\n  - name: Build MkDocs\n    run: mkdocs build\n\n  - name: Move build to docs folder\n    run: |\n      rm -rf docs/*  \n      cp -r site/* docs/\n\n  - name: Commit and push changes\n    run: |\n      git config user.name \"maulanaaghnii\"\n      git config user.email \"maulanaaghni.contact@gmail.com\"  # Ganti dengan alamat email kamu\n      git add -f docs/*  \n      git commit -m \"Deploy MkDocs site\" || echo \"No changes to commit\"\n      git push -f https://$PAT_TOKEN@github.com/maulanaaghnii/maulanaaghnii.github.io.git main\n    env:\n      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}\n</code></pre>"},{"location":"mysql/","title":"Uninstall MySQL","text":"<pre><code>sudo systemctl stop mysql\n\nsudo apt-get remove --purge mysql-server mysql-client mysql-common mysql-server-core-* mysql-client-core-* -y\n\nsudo rm -rf /etc/mysql /var/lib/mysql\n\nsudo rm -rf /var/log/mysql\n\nsudo apt-get autoremove\n\nsudo apt-get autoclean\n</code></pre>"},{"location":"mysql/#install-mysql","title":"Install Mysql","text":"<pre><code>CREATE USER 'new_user'@'localhost' IDENTIFIED BY 'password123';\n\nGRANT ALL PRIVILEGES ON *.* TO 'new_user'@'localhost' WITH GRANT OPTION;\n\nFLUSH PRIVILEGES;\n\nEXIT;\n</code></pre>"},{"location":"mysql/#create-new-user-with-grant","title":"Create New User With GRANT","text":"<pre><code>CREATE USER 'new_user'@'%' IDENTIFIED BY 'new_user_password';\n\nGRANT ALL PRIVILEGES ON *.* TO 'new_user'@'%';\n\nFLUSH PRIVILEGES;\n</code></pre>"},{"location":"mysql/#docker","title":"Docker","text":"<pre><code>docker run -d \\\n  --name mariadb-container \\\n  -e MARIADB_ROOT_PASSWORD=yourpassword \\\n  -p 3306:3306 \\\n  mariadb\n</code></pre>"},{"location":"postgresql/","title":"PostgreSQL","text":""},{"location":"postgresql/#postgresql-group-concat-equivalent","title":"PostgreSQL Group Concat equivalent","text":"<pre><code>select string_agg(column_name, ', ') from table_name;\n</code></pre>"},{"location":"python/","title":"Python","text":""},{"location":"test/","title":"Test","text":"CC++ <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre> <ul> <li> HTML for content and structure</li> <li> JavaScript for interactivity</li> <li> CSS for text running out of boxes</li> <li> Internet Explorer ... huh?</li> </ul> <p>Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> <p></p> <p>Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> <p></p> <p>Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> <ul> <li> <p> Set up in 5 minutes</p> <p>Install <code>mkdocs-material</code> with <code>pip</code> and get up and running in minutes</p> <p> Getting started</p> </li> <li> <p> It's just Markdown</p> <p>Focus on your content and generate a responsive and searchable static site</p> <p> Reference</p> </li> <li> <p> Made to measure</p> <p>Change the colors, fonts, language, icons, logo and more with a few lines</p> <p> Customization</p> </li> <li> <p> Open Source, MIT</p> <p>Material for MkDocs is licensed under MIT and available on [GitHub]</p> <p> License</p> </li> </ul> <p></p> <p> HTML for content and structure</p> <p> JavaScript for interactivity</p> <p> CSS for text running out of boxes</p> <p> Internet Explorer ... huh?</p> Unordered listOrdered list <ul> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ul> <ol> <li>Sed sagittis eleifend rutrum</li> <li>Donec vitae suscipit est</li> <li>Nulla tempor lobortis orci</li> </ol> Content tabs<pre><code>=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n</code></pre>"},{"location":"ubuntu-desktop-environment/","title":"Getting to Know Desktop Environment in Ubuntu","text":""},{"location":"ubuntu-desktop-environment/#overview","title":"Overview","text":"<p>Ubuntu's desktop environment is your gateway to interacting with the system. Understanding the desktop environment helps you navigate efficiently, customize your workspace, and maximize productivity. This guide covers GNOME (Ubuntu's default) and other popular alternatives.</p>"},{"location":"ubuntu-desktop-environment/#ubuntu-desktop-environment-gnome","title":"Ubuntu Desktop Environment (GNOME)","text":""},{"location":"ubuntu-desktop-environment/#what-is-gnome","title":"What is GNOME?","text":"<p>GNOME (GNU Network Object Model Environment) is Ubuntu's default desktop environment since version 17.10. It provides a modern, clean, and user-friendly interface designed for productivity and ease of use.</p>"},{"location":"ubuntu-desktop-environment/#gnome-shell-architecture","title":"GNOME Shell Architecture","text":"<pre><code>graph TD\n    A[GNOME Shell] --&gt; B[Top Bar]\n    A --&gt; C[Activities Overview]\n    A --&gt; D[Dash to Dock]\n    A --&gt; E[Application Grid]\n    A --&gt; F[Workspace Switcher]\n\n    B --&gt; B1[Clock &amp; Calendar]\n    B --&gt; B2[System Indicators]\n    B --&gt; B3[User Menu]\n\n    C --&gt; C1[Search]\n    C --&gt; C2[Running Apps]\n    C --&gt; C3[Workspaces]\n\n    D --&gt; D1[Favorite Apps]\n    D --&gt; D2[Running Apps]\n    D --&gt; D3[App Launcher]\n</code></pre>"},{"location":"ubuntu-desktop-environment/#desktop-components","title":"Desktop Components","text":""},{"location":"ubuntu-desktop-environment/#1-top-bar-panel","title":"1. Top Bar (Panel)","text":"<p>The top bar spans the full width of your screen and contains:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Activities  \u23f0 Mon 15:30  \ud83d\udcf6 \ud83d\udd0a \ud83d\udd0b \u2699\ufe0f \ud83d\udc64                  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"ubuntu-desktop-environment/#left-side-activities-button","title":"Left Side: Activities Button","text":"<ul> <li>Click to open Activities Overview</li> <li>Search for applications and files</li> <li>Switch between workspaces</li> </ul>"},{"location":"ubuntu-desktop-environment/#center-clock-and-calendar","title":"Center: Clock and Calendar","text":"<ul> <li>Shows current time and date</li> <li>Click to view calendar</li> <li>Displays notifications and events</li> </ul>"},{"location":"ubuntu-desktop-environment/#right-side-system-indicators","title":"Right Side: System Indicators","text":"<ul> <li>Network: Wi-Fi, Ethernet, VPN status</li> <li>Audio: Volume control and output selection</li> <li>Battery: Power level and settings (laptops)</li> <li>Settings: Quick settings menu</li> <li>User Menu: Account options and power controls</li> </ul>"},{"location":"ubuntu-desktop-environment/#2-activities-overview","title":"2. Activities Overview","text":"<p>Press <code>Super</code> key or click \"Activities\" to access:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                        \ud83d\udd0d Search                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502  \ud83d\udda5\ufe0f     \ud83d\udcc1     \ud83c\udf10     \u2709\ufe0f      \ud83d\udcdd     \ud83c\udfb5                    \u2502\n\u2502 Apps   Files Firefox Thunderbird Text   Music              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                                 \u2502 Workspace \u2502\n\u2502          Active Application Windows             \u2502     1     \u2502\n\u2502                                                 \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                                 \u2502 Workspace \u2502\n\u2502                                                 \u2502     2     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"ubuntu-desktop-environment/#features","title":"Features:","text":"<ul> <li>Universal Search: Find apps, files, settings</li> <li>Application Grid: Browse all installed applications</li> <li>Running Applications: Switch between open windows</li> <li>Workspaces: Organize applications across virtual desktops</li> </ul>"},{"location":"ubuntu-desktop-environment/#3-dock-ubuntu-dock","title":"3. Dock (Ubuntu Dock)","text":"<p>The left sidebar shows:</p> <pre><code>\u250c\u2500\u2510\n\u2502\ud83d\udcc1\u2502 Files\n\u251c\u2500\u2524\n\u2502\ud83c\udf10\u2502 Firefox\n\u251c\u2500\u2524\n\u2502\u2699\ufe0f\u2502 Settings\n\u251c\u2500\u2524\n\u2502\ud83d\udce7\u2502 Thunderbird\n\u251c\u2500\u2524\n\u2502\ud83d\uddd1\ufe0f\u2502 Trash\n\u2514\u2500\u2518\n</code></pre>"},{"location":"ubuntu-desktop-environment/#functions","title":"Functions:","text":"<ul> <li>Launch Applications: Click to open</li> <li>Switch Windows: Click running app to switch</li> <li>Indicators: Dots show running applications</li> <li>Drag &amp; Drop: Organize and add favorites</li> </ul>"},{"location":"ubuntu-desktop-environment/#4-application-menu","title":"4. Application Menu","text":"<p>Access all applications via:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  \ud83d\udcf1 All Applications                    \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 \ud83c\udfa8 Graphics    \ud83d\udcca Office    \ud83d\udd27 System  \u2502\n\u2502 \ud83c\udf10 Internet    \ud83c\udfb5 Media     \ud83d\udd2c Science \u2502\n\u2502 \ud83c\udfae Games       \ud83d\udcda Education \ud83d\udee0\ufe0f Dev    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"ubuntu-desktop-environment/#workspaces-and-window-management","title":"Workspaces and Window Management","text":""},{"location":"ubuntu-desktop-environment/#understanding-workspaces","title":"Understanding Workspaces","text":"<p>Workspaces are virtual desktops that help organize your work:</p> <pre><code>graph LR\n    A[Workspace 1&lt;br/&gt;Web Development] --&gt; B[Workspace 2&lt;br/&gt;Email &amp; Chat]\n    B --&gt; C[Workspace 3&lt;br/&gt;Media &amp; Design]\n    C --&gt; D[Workspace 4&lt;br/&gt;System Admin]\n</code></pre>"},{"location":"ubuntu-desktop-environment/#workspace-management","title":"Workspace Management","text":"<pre><code># Keyboard shortcuts for workspaces\nSuper + Page Up     # Move to workspace above\nSuper + Page Down   # Move to workspace below\nCtrl + Alt + Up     # Switch to workspace above\nCtrl + Alt + Down   # Switch to workspace below\n\n# Move windows between workspaces\nSuper + Shift + Page Up    # Move window to workspace above\nSuper + Shift + Page Down  # Move window to workspace below\n</code></pre>"},{"location":"ubuntu-desktop-environment/#window-management","title":"Window Management","text":""},{"location":"ubuntu-desktop-environment/#tiling-and-snapping","title":"Tiling and Snapping","text":"<pre><code># Window tiling shortcuts\nSuper + Left   # Snap window to left half\nSuper + Right  # Snap window to right half\nSuper + Up     # Maximize window\nSuper + Down   # Restore/minimize window\n\n# Advanced tiling\nSuper + H      # Hide window\nAlt + F4       # Close window\nAlt + F10      # Maximize/restore toggle\n</code></pre>"},{"location":"ubuntu-desktop-environment/#window-switching","title":"Window Switching","text":"<pre><code># Application switching\nAlt + Tab              # Switch between applications\nAlt + Shift + Tab      # Reverse application switching\nAlt + `                # Switch between windows of same app\nSuper + Tab            # Switch between applications on all workspaces\n</code></pre>"},{"location":"ubuntu-desktop-environment/#customizing-the-desktop-environment","title":"Customizing the Desktop Environment","text":""},{"location":"ubuntu-desktop-environment/#using-gnome-settings","title":"Using GNOME Settings","text":"<p>Access settings via: <code>Settings</code> app or <code>gnome-control-center</code></p>"},{"location":"ubuntu-desktop-environment/#appearance-settings","title":"Appearance Settings","text":"<pre><code># Change theme and appearance\nSettings \u2192 Appearance\n- Style: Light/Dark mode\n- Wallpaper: Background images\n- Desktop Icons: Show/hide desktop icons\n</code></pre>"},{"location":"ubuntu-desktop-environment/#desktop-behavior","title":"Desktop Behavior","text":"<pre><code># Customize desktop behavior\nSettings \u2192 Desktop\n- Auto Hide Dock: Show/hide dock automatically\n- Dock Position: Left, Bottom, Right\n- Icon Size: Small, Medium, Large\n</code></pre>"},{"location":"ubuntu-desktop-environment/#gnome-extensions","title":"GNOME Extensions","text":"<p>Extensions add functionality to GNOME Shell:</p>"},{"location":"ubuntu-desktop-environment/#installing-extensions","title":"Installing Extensions","text":"<pre><code># Method 1: Browser extension\n# Visit: https://extensions.gnome.org/\n# Install browser extension\n# Browse and install GNOME extensions\n\n# Method 2: Package manager\nsudo apt install gnome-shell-extensions\nsudo apt install gnome-shell-extension-manager\n\n# Method 3: Manual installation\n# Download .zip file\ngnome-extensions install extension.zip\n</code></pre>"},{"location":"ubuntu-desktop-environment/#popular-extensions","title":"Popular Extensions","text":"<pre><code># Essential extensions\n- Dash to Panel: Windows-style taskbar\n- AppIndicator Support: System tray support\n- Workspace Indicator: Workspace numbers in top bar\n- User Themes: Custom theme support\n- Clipboard Indicator: Clipboard history\n- Weather: Weather in top bar\n- Vitals: System monitoring\n</code></pre>"},{"location":"ubuntu-desktop-environment/#managing-extensions","title":"Managing Extensions","text":"<pre><code># Command line management\ngnome-extensions list                    # List installed extensions\ngnome-extensions enable extension-name   # Enable extension\ngnome-extensions disable extension-name  # Disable extension\ngnome-extensions reset extension-name    # Reset extension settings\n\n# GUI management\ngnome-extensions-app  # Extensions app\n</code></pre>"},{"location":"ubuntu-desktop-environment/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":""},{"location":"ubuntu-desktop-environment/#essential-shortcuts","title":"Essential Shortcuts","text":"Shortcut Action <code>Super</code> Open Activities Overview <code>Super + A</code> Show applications grid <code>Super + L</code> Lock screen <code>Super + D</code> Show desktop <code>Alt + F2</code> Run command dialog <code>Ctrl + Alt + T</code> Open terminal <code>Print Screen</code> Take screenshot"},{"location":"ubuntu-desktop-environment/#window-management_1","title":"Window Management","text":"Shortcut Action <code>Super + M</code> Open notification list <code>Super + V</code> Show notification list <code>Alt + Space</code> Window menu <code>Alt + F4</code> Close window <code>Alt + F10</code> Maximize/restore window"},{"location":"ubuntu-desktop-environment/#customizing-shortcuts","title":"Customizing Shortcuts","text":"<pre><code># Access keyboard shortcuts\nSettings \u2192 Keyboard \u2192 Keyboard Shortcuts\n\n# Categories:\n- Navigation: Workspace and window switching\n- Windows: Window management\n- System: System functions\n- Custom: User-defined shortcuts\n</code></pre>"},{"location":"ubuntu-desktop-environment/#alternative-desktop-environments","title":"Alternative Desktop Environments","text":""},{"location":"ubuntu-desktop-environment/#kde-plasma-kubuntu","title":"KDE Plasma (Kubuntu)","text":""},{"location":"ubuntu-desktop-environment/#installation","title":"Installation","text":"<pre><code># Install KDE Plasma\nsudo apt update\nsudo apt install kubuntu-desktop\n\n# Switch session at login screen\n# Select \"Plasma\" session\n</code></pre>"},{"location":"ubuntu-desktop-environment/#features_1","title":"Features","text":"<pre><code>KDE Plasma Features:\n\u251c\u2500\u2500 Highly Customizable Interface\n\u251c\u2500\u2500 Advanced Window Management\n\u251c\u2500\u2500 Integrated Applications (Konqueror, Dolphin)\n\u251c\u2500\u2500 Widgets and Plasmoids\n\u251c\u2500\u2500 Multiple Panel Layouts\n\u2514\u2500\u2500 Advanced System Settings\n</code></pre>"},{"location":"ubuntu-desktop-environment/#xfce-xubuntu","title":"Xfce (Xubuntu)","text":""},{"location":"ubuntu-desktop-environment/#installation_1","title":"Installation","text":"<pre><code># Install Xfce\nsudo apt update\nsudo apt install xubuntu-desktop\n\n# Lightweight and fast\n# Good for older hardware\n</code></pre>"},{"location":"ubuntu-desktop-environment/#characteristics","title":"Characteristics","text":"<ul> <li>Lightweight: Low resource usage</li> <li>Traditional: Classic desktop metaphor</li> <li>Customizable: Flexible layout options</li> <li>Stable: Reliable and proven</li> </ul>"},{"location":"ubuntu-desktop-environment/#lxqt-lubuntu","title":"LXQt (Lubuntu)","text":""},{"location":"ubuntu-desktop-environment/#installation_2","title":"Installation","text":"<pre><code># Install LXQt\nsudo apt update\nsudo apt install lubuntu-desktop\n\n# Very lightweight\n# Minimal resource usage\n</code></pre>"},{"location":"ubuntu-desktop-environment/#mate-ubuntu-mate","title":"MATE (Ubuntu MATE)","text":""},{"location":"ubuntu-desktop-environment/#installation_3","title":"Installation","text":"<pre><code># Install MATE\nsudo apt update\nsudo apt install ubuntu-mate-desktop\n\n# Traditional GNOME 2 experience\n# Familiar interface for long-time users\n</code></pre>"},{"location":"ubuntu-desktop-environment/#file-manager-nautilus","title":"File Manager (Nautilus)","text":""},{"location":"ubuntu-desktop-environment/#basic-navigation","title":"Basic Navigation","text":"<pre><code>Nautilus Interface:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u2190 \u2192 \u2191 Home Documents Pictures Music Videos Downloads \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Sidebar   \u2502           Main View                     \u2502\n\u2502           \u2502                                         \u2502\n\u2502 Places    \u2502  \ud83d\udcc1 folder1    \ud83d\udcc4 document.txt         \u2502\n\u2502 Bookmarks \u2502  \ud83d\udcc1 folder2    \ud83d\uddbc\ufe0f image.jpg            \u2502\n\u2502 Devices   \u2502  \ud83d\udcc1 folder3    \ud83c\udfb5 song.mp3             \u2502\n\u2502           \u2502                                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"ubuntu-desktop-environment/#file-operations","title":"File Operations","text":"<pre><code># Keyboard shortcuts in Files\nCtrl + N         # New window\nCtrl + T         # New tab\nCtrl + W         # Close tab\nCtrl + L         # Address bar\nCtrl + H         # Show hidden files\nF9               # Toggle sidebar\nCtrl + 1/2/3     # Change view (icons/list/compact)\nSpace            # Preview file\n</code></pre>"},{"location":"ubuntu-desktop-environment/#bookmarks-and-places","title":"Bookmarks and Places","text":"<pre><code># Default places\n- Home: User home directory\n- Desktop: Desktop folder\n- Documents: Documents folder\n- Downloads: Download folder\n- Music: Music folder\n- Pictures: Pictures folder\n- Videos: Videos folder\n- Computer: System drives\n- Network: Network locations\n</code></pre>"},{"location":"ubuntu-desktop-environment/#application-launcher-and-management","title":"Application Launcher and Management","text":""},{"location":"ubuntu-desktop-environment/#application-categories","title":"Application Categories","text":"<pre><code>Application Categories:\n\u251c\u2500\u2500 Accessories (Utilities)\n\u251c\u2500\u2500 Games\n\u251c\u2500\u2500 Graphics\n\u251c\u2500\u2500 Internet\n\u251c\u2500\u2500 Office\n\u251c\u2500\u2500 Programming\n\u251c\u2500\u2500 Sound &amp; Video\n\u251c\u2500\u2500 System Tools\n\u2514\u2500\u2500 Universal Access\n</code></pre>"},{"location":"ubuntu-desktop-environment/#installing-applications","title":"Installing Applications","text":""},{"location":"ubuntu-desktop-environment/#ubuntu-software-center","title":"Ubuntu Software Center","text":"<pre><code># Launch Ubuntu Software\nubuntu-software\n\n# Or from command line\nsnap-store\n\n# Features:\n- Browse by category\n- Search applications\n- Read reviews and ratings\n- Install/remove software\n- Manage updates\n</code></pre>"},{"location":"ubuntu-desktop-environment/#command-line-installation","title":"Command Line Installation","text":"<pre><code># APT packages\nsudo apt update\nsudo apt install application-name\n\n# Snap packages\nsudo snap install application-name\n\n# Flatpak packages\nflatpak install flathub application-id\n</code></pre>"},{"location":"ubuntu-desktop-environment/#notifications-and-system-tray","title":"Notifications and System Tray","text":""},{"location":"ubuntu-desktop-environment/#notification-system","title":"Notification System","text":"<pre><code>Notification Area:\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \ud83d\udce7 New Email from John              \u2502\n\u2502 \ud83d\udcf1 System Update Available          \u2502\n\u2502 \ud83d\udd14 Calendar: Meeting in 15 minutes  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"ubuntu-desktop-environment/#managing-notifications","title":"Managing Notifications","text":"<pre><code># Access notification settings\nSettings \u2192 Notifications\n\n# Options:\n- Do Not Disturb: Silence notifications\n- Application notifications: Per-app settings\n- Lock screen notifications: Show/hide on lock screen\n</code></pre>"},{"location":"ubuntu-desktop-environment/#accessibility-features","title":"Accessibility Features","text":""},{"location":"ubuntu-desktop-environment/#visual-accessibility","title":"Visual Accessibility","text":"<pre><code># Access accessibility settings\nSettings \u2192 Accessibility\n\n# Visual options:\n- High Contrast: Enhanced visibility\n- Large Text: Increased font size\n- Magnifier: Screen magnification\n- Screen Reader: Orca screen reader\n- Sound Keys: Audio feedback for typing\n</code></pre>"},{"location":"ubuntu-desktop-environment/#motor-accessibility","title":"Motor Accessibility","text":"<pre><code># Motor accessibility features:\n- Sticky Keys: Modifier key assistance\n- Slow Keys: Typing assistance\n- Bounce Keys: Repeat key filtering\n- Mouse Keys: Keyboard mouse control\n- Click Assist: Click timing assistance\n</code></pre>"},{"location":"ubuntu-desktop-environment/#performance-and-optimization","title":"Performance and Optimization","text":""},{"location":"ubuntu-desktop-environment/#system-monitoring","title":"System Monitoring","text":"<pre><code># Check system resources\ngnome-system-monitor  # GUI system monitor\nhtop                 # Terminal system monitor\n\n# GNOME usage monitoring\ngnome-usage          # Disk and system usage\n</code></pre>"},{"location":"ubuntu-desktop-environment/#optimizing-performance","title":"Optimizing Performance","text":"<pre><code># Disable unnecessary extensions\ngnome-extensions disable extension-name\n\n# Reduce animations\ngsettings set org.gnome.desktop.interface enable-animations false\n\n# Limit background applications\n# Use System Monitor to identify resource-heavy processes\n</code></pre>"},{"location":"ubuntu-desktop-environment/#troubleshooting-desktop-issues","title":"Troubleshooting Desktop Issues","text":""},{"location":"ubuntu-desktop-environment/#common-problems","title":"Common Problems","text":""},{"location":"ubuntu-desktop-environment/#desktop-not-loading","title":"Desktop Not Loading","text":"<pre><code># Reset GNOME settings\ndconf reset -f /org/gnome/\n\n# Restart GNOME Shell\nAlt + F2 \u2192 type \"r\" \u2192 Enter\n\n# Reinstall GNOME packages\nsudo apt install --reinstall ubuntu-desktop-minimal\n</code></pre>"},{"location":"ubuntu-desktop-environment/#extensions-not-working","title":"Extensions Not Working","text":"<pre><code># Reload extensions\ngnome-extensions list\ngnome-extensions reset extension-name\n\n# Check compatibility\ngnome-shell --version\n# Ensure extensions support your GNOME version\n</code></pre>"},{"location":"ubuntu-desktop-environment/#performance-issues","title":"Performance Issues","text":"<pre><code># Check graphics drivers\nubuntu-drivers devices\nsudo ubuntu-drivers autoinstall\n\n# Reduce visual effects\ngsettings set org.gnome.desktop.interface enable-animations false\n\n# Monitor resource usage\ngnome-system-monitor\n</code></pre>"},{"location":"ubuntu-desktop-environment/#customization-examples","title":"Customization Examples","text":""},{"location":"ubuntu-desktop-environment/#theme-customization","title":"Theme Customization","text":"<pre><code># Install GNOME Tweaks\nsudo apt install gnome-tweaks\n\n# Custom themes location\n~/.themes/          # User themes\n/usr/share/themes/  # System themes\n\n# Apply custom theme\ngnome-tweaks \u2192 Appearance \u2192 Themes\n</code></pre>"},{"location":"ubuntu-desktop-environment/#icon-customization","title":"Icon Customization","text":"<pre><code># Icon themes location\n~/.icons/          # User icons\n/usr/share/icons/  # System icons\n\n# Popular icon themes\nsudo apt install papirus-icon-theme\nsudo apt install numix-icon-theme\n</code></pre>"},{"location":"ubuntu-desktop-environment/#wallpaper-management","title":"Wallpaper Management","text":"<pre><code># Wallpaper locations\n~/Pictures/                    # User wallpapers\n/usr/share/backgrounds/        # System wallpapers\n\n# Set wallpaper via command line\ngsettings set org.gnome.desktop.background picture-uri file:///path/to/image.jpg\n</code></pre>"},{"location":"ubuntu-desktop-environment/#desktop-environment-comparison","title":"Desktop Environment Comparison","text":"Feature GNOME KDE Plasma Xfce LXQt Resource Usage Medium Medium-High Low Very Low Customization Limited Extensive Good Moderate Modern Design Excellent Excellent Traditional Simple Touch Support Good Excellent Limited Limited Learning Curve Easy Moderate Easy Easy"},{"location":"ubuntu-desktop-environment/#best-practices","title":"Best Practices","text":""},{"location":"ubuntu-desktop-environment/#workflow-optimization","title":"Workflow Optimization","text":"<ol> <li>Use Workspaces: Organize different tasks</li> <li>Master Shortcuts: Learn essential keyboard shortcuts</li> <li>Customize Dock: Add frequently used applications</li> <li>Configure Notifications: Minimize distractions</li> <li>Regular Maintenance: Keep system updated</li> </ol>"},{"location":"ubuntu-desktop-environment/#security-considerations","title":"Security Considerations","text":"<pre><code># Lock screen automatically\nSettings \u2192 Privacy \u2192 Screen Lock\n- Automatic Screen Lock: ON\n- Lock Screen Delay: 5 minutes\n\n# Disable guest session\nsudo sh -c 'printf \"[Seat:*]\\nallow-guest=false\\n\" &gt;/etc/lightdm/lightdm.conf.d/50-no-guest.conf'\n</code></pre>"},{"location":"ubuntu-desktop-environment/#next-steps","title":"Next Steps","text":"<p>After mastering the desktop environment:</p> <ol> <li>Learn file and folder management</li> <li>Master user and permissions</li> <li>Explore system customization</li> <li>Set up development environment</li> </ol>"},{"location":"ubuntu-desktop-environment/#summary","title":"Summary","text":"<p>Ubuntu's desktop environment provides:</p> Component Purpose Key Features GNOME Shell Main interface Activities overview, search, workspaces Top Bar System status Clock, indicators, user menu Dock App launcher Favorites, running apps, quick access File Manager File operations Browse, search, organize files Extensions Extended functionality Customization and additional features <p>Understanding these components enables you to work efficiently and customize Ubuntu to match your workflow preferences.</p>"},{"location":"ubuntu-installation/","title":"Installing Ubuntu on Various Devices","text":""},{"location":"ubuntu-installation/#overview","title":"Overview","text":"<p>Ubuntu can be installed on a wide variety of devices, from desktop computers to servers, virtual machines, and even single-board computers. This comprehensive guide covers all installation methods and scenarios.</p>"},{"location":"ubuntu-installation/#system-requirements","title":"System Requirements","text":""},{"location":"ubuntu-installation/#minimum-requirements","title":"Minimum Requirements","text":"Component Requirement Recommended RAM 4 GB 8 GB or more Storage 25 GB 50 GB or more Processor 2 GHz dual-core 2 GHz quad-core Graphics VGA capable of 1024x768 1920x1080 or higher Network Internet connection Ethernet or Wi-Fi Boot UEFI or BIOS UEFI with Secure Boot"},{"location":"ubuntu-installation/#supported-architectures","title":"Supported Architectures","text":"<pre><code>graph TD\n    A[Ubuntu Support] --&gt; B[x86_64 - AMD64]\n    A --&gt; C[ARM64 - AArch64]\n    A --&gt; D[ARMhf - ARM Hard Float]\n    A --&gt; E[PowerPC64le]\n    A --&gt; F[s390x - IBM Z]\n\n    B --&gt; B1[Desktop PCs]\n    B --&gt; B2[Laptops]\n    B --&gt; B3[Servers]\n\n    C --&gt; C1[Raspberry Pi 4]\n    C --&gt; C2[Apple M1/M2 Macs]\n    C --&gt; C3[ARM Servers]\n\n    D --&gt; D1[Raspberry Pi 2/3]\n    D --&gt; D2[Older ARM devices]\n</code></pre>"},{"location":"ubuntu-installation/#pre-installation-preparation","title":"Pre-Installation Preparation","text":""},{"location":"ubuntu-installation/#1-backup-important-data","title":"1. Backup Important Data","text":"<pre><code># Create backup of important files\nrsync -av /home/username/Documents/ /backup/Documents/\nrsync -av /home/username/Pictures/ /backup/Pictures/\n\n# Or use GUI tools like:\n# - D\u00e9j\u00e0 Dup (built-in backup tool)\n# - rsync with GUI (Grsync)\n# - Commercial solutions (Carbonite, etc.)\n</code></pre>"},{"location":"ubuntu-installation/#2-check-hardware-compatibility","title":"2. Check Hardware Compatibility","text":"<pre><code># Check if your hardware is compatible\n# Visit: https://certification.ubuntu.com/\n\n# Test Ubuntu without installing (Live USB)\n# This helps identify potential hardware issues\n</code></pre>"},{"location":"ubuntu-installation/#3-gather-system-information","title":"3. Gather System Information","text":"<pre><code># Before installation, note:\n# - Current OS and version\n# - Partition layout (fdisk -l or Disk Utility)\n# - Network settings\n# - Installed software list\n</code></pre>"},{"location":"ubuntu-installation/#installation-methods","title":"Installation Methods","text":""},{"location":"ubuntu-installation/#method-1-desktop-installation-most-common","title":"Method 1: Desktop Installation (Most Common)","text":""},{"location":"ubuntu-installation/#step-1-download-ubuntu","title":"Step 1: Download Ubuntu","text":"<pre><code># Visit official website\nhttps://ubuntu.com/download/desktop\n\n# Choose version:\n# - Latest LTS (recommended for stability)\n# - Latest version (for newest features)\n\n# Verify download (optional but recommended)\nsha256sum ubuntu-22.04.3-desktop-amd64.iso\n</code></pre>"},{"location":"ubuntu-installation/#step-2-create-installation-media","title":"Step 2: Create Installation Media","text":""},{"location":"ubuntu-installation/#using-usb-drive-recommended","title":"Using USB Drive (Recommended)","text":"<p>Windows: <pre><code># Using Rufus\n1. Download Rufus from https://rufus.ie/\n2. Insert USB drive (8GB or larger)\n3. Select Ubuntu ISO file\n4. Choose GPT partition scheme for UEFI\n5. Click \"Start\"\n\n# Using Balena Etcher\n1. Download from https://www.balena.io/etcher/\n2. Select ISO file\n3. Select USB drive\n4. Flash!\n</code></pre></p> <p>macOS: <pre><code># Using built-in tools\ndiskutil list\ndiskutil unmountDisk /dev/diskN\nsudo dd if=ubuntu-22.04.3-desktop-amd64.iso of=/dev/rdiskN bs=1m\n\n# Or use Balena Etcher (GUI method)\n</code></pre></p> <p>Linux: <pre><code># Find USB device\nlsblk\n\n# Create bootable USB\nsudo dd bs=4M if=ubuntu-22.04.3-desktop-amd64.iso of=/dev/sdX status=progress oflag=sync\n\n# Or use USB Creator\nusb-creator-gtk\n</code></pre></p>"},{"location":"ubuntu-installation/#step-3-boot-from-usb","title":"Step 3: Boot from USB","text":"<ol> <li>Insert USB drive</li> <li>Restart computer</li> <li>Enter BIOS/UEFI settings (usually F2, F12, DEL, or ESC)</li> <li>Change boot order to USB first</li> <li>Save and exit</li> </ol>"},{"location":"ubuntu-installation/#step-4-installation-process","title":"Step 4: Installation Process","text":"<pre><code>Ubuntu Installation Steps:\n\u251c\u2500\u2500 1. Language Selection\n\u251c\u2500\u2500 2. Keyboard Layout\n\u251c\u2500\u2500 3. Network Connection\n\u251c\u2500\u2500 4. Updates and Software\n\u2502   \u251c\u2500\u2500 Normal installation (recommended)\n\u2502   \u251c\u2500\u2500 Minimal installation\n\u2502   \u2514\u2500\u2500 Download updates while installing\n\u251c\u2500\u2500 5. Installation Type\n\u2502   \u251c\u2500\u2500 Erase disk and install Ubuntu\n\u2502   \u251c\u2500\u2500 Install alongside existing OS\n\u2502   \u251c\u2500\u2500 Something else (manual partitioning)\n\u2502   \u2514\u2500\u2500 Encrypt the new Ubuntu installation\n\u251c\u2500\u2500 6. Location/Timezone\n\u251c\u2500\u2500 7. User Account Creation\n\u2514\u2500\u2500 8. Installation Progress\n</code></pre>"},{"location":"ubuntu-installation/#method-2-server-installation","title":"Method 2: Server Installation","text":""},{"location":"ubuntu-installation/#download-ubuntu-server","title":"Download Ubuntu Server","text":"<pre><code># Download from\nhttps://ubuntu.com/download/server\n\n# Server benefits:\n# - No GUI by default (lighter)\n# - Optimized for server workloads\n# - More configuration options\n</code></pre>"},{"location":"ubuntu-installation/#server-installation-process","title":"Server Installation Process","text":"<pre><code># Boot from installation media\n# Follow these steps:\n\n1. Language and keyboard selection\n2. Network configuration\n   - Configure static IP if needed\n   - Set up proxy if required\n3. Storage configuration\n   - Guided storage (automatic)\n   - Manual partitioning\n   - LVM setup\n   - RAID configuration\n4. Profile setup\n   - User account creation\n   - SSH server installation\n5. Package selection\n   - Docker\n   - Kubernetes\n   - PostgreSQL\n   - etc.\n</code></pre>"},{"location":"ubuntu-installation/#method-3-virtual-machine-installation","title":"Method 3: Virtual Machine Installation","text":""},{"location":"ubuntu-installation/#vmware-workstationplayer","title":"VMware Workstation/Player","text":"<pre><code># VM Configuration:\n# - Memory: 4GB minimum, 8GB recommended\n# - Storage: 25GB minimum, 50GB recommended\n# - Network: NAT or Bridged\n# - Enable virtualization features\n\n# Installation steps:\n1. Create new VM\n2. Select Linux &gt; Ubuntu 64-bit\n3. Allocate resources\n4. Mount Ubuntu ISO\n5. Follow standard installation\n</code></pre>"},{"location":"ubuntu-installation/#virtualbox","title":"VirtualBox","text":"<pre><code># VM Setup:\n# - Type: Linux\n# - Version: Ubuntu (64-bit)\n# - Memory: 4096 MB minimum\n# - Hard disk: 25 GB minimum\n\n# Enable features:\n# - VT-x/AMD-V virtualization\n# - PAE/NX\n# - Hardware acceleration\n</code></pre>"},{"location":"ubuntu-installation/#hyper-v-windows","title":"Hyper-V (Windows)","text":"<pre><code># Enable Hyper-V\nEnable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All\n\n# Create VM\nNew-VM -Name \"Ubuntu\" -MemoryStartupBytes 4GB -NewVHDPath \"C:\\VMs\\Ubuntu.vhdx\" -NewVHDSizeBytes 50GB\n\n# Configure VM\nSet-VMProcessor -VMName \"Ubuntu\" -Count 2\nAdd-VMNetworkAdapter -VMName \"Ubuntu\"\n</code></pre>"},{"location":"ubuntu-installation/#method-4-dual-boot-installation","title":"Method 4: Dual Boot Installation","text":""},{"location":"ubuntu-installation/#pre-installation-steps","title":"Pre-Installation Steps","text":"<pre><code># 1. Shrink existing partition\n# Windows: Use Disk Management\n# macOS: Use Disk Utility\n# Linux: Use GParted\n\n# 2. Disable Fast Startup (Windows)\n# Control Panel &gt; Power Options &gt; Choose what power buttons do\n# Uncheck \"Turn on fast startup\"\n\n# 3. Disable Secure Boot (if needed)\n# Enter UEFI settings\n# Find Secure Boot option\n# Disable temporarily\n</code></pre>"},{"location":"ubuntu-installation/#dual-boot-setup","title":"Dual Boot Setup","text":"<pre><code>Partition Layout Example:\n\u251c\u2500\u2500 /dev/sda1 - EFI System Partition (512MB)\n\u251c\u2500\u2500 /dev/sda2 - Windows (C:) - 200GB\n\u251c\u2500\u2500 /dev/sda3 - Ubuntu Root (/) - 30GB\n\u251c\u2500\u2500 /dev/sda4 - Ubuntu Home (/home) - 50GB\n\u2514\u2500\u2500 /dev/sda5 - Swap - 8GB\n</code></pre>"},{"location":"ubuntu-installation/#grub-configuration","title":"GRUB Configuration","text":"<pre><code># After installation, GRUB will detect Windows\n# If Windows doesn't appear:\nsudo update-grub\n\n# Customize GRUB timeout\nsudo nano /etc/default/grub\n# GRUB_TIMEOUT=10\nsudo update-grub\n\n# Set default OS\n# GRUB_DEFAULT=0  # Ubuntu\n# GRUB_DEFAULT=2  # Windows (usually)\n</code></pre>"},{"location":"ubuntu-installation/#special-installation-scenarios","title":"Special Installation Scenarios","text":""},{"location":"ubuntu-installation/#installation-on-apple-silicon-macs","title":"Installation on Apple Silicon Macs","text":""},{"location":"ubuntu-installation/#asahi-linux-experimental","title":"Asahi Linux (Experimental)","text":"<pre><code># Note: This is experimental and may not be stable\n# Visit: https://asahilinux.org/\n\n# Requirements:\n# - macOS 12.3 or later\n# - At least 53GB free space\n# - Internet connection\n\n# Installation:\ncurl https://alx.sh | sh\n</code></pre>"},{"location":"ubuntu-installation/#utm-virtual-machine","title":"UTM Virtual Machine","text":"<pre><code># Alternative: Run Ubuntu in UTM\n# 1. Install UTM from App Store\n# 2. Download Ubuntu ARM64 ISO\n# 3. Create new VM with ARM64 architecture\n# 4. Follow standard installation\n</code></pre>"},{"location":"ubuntu-installation/#raspberry-pi-installation","title":"Raspberry Pi Installation","text":""},{"location":"ubuntu-installation/#raspberry-pi-45","title":"Raspberry Pi 4/5","text":"<pre><code># Download Ubuntu for Raspberry Pi\nhttps://ubuntu.com/download/raspberry-pi\n\n# Flash to microSD card\n# Use Raspberry Pi Imager or dd command\n\n# First boot setup:\n# 1. Connect monitor, keyboard, mouse\n# 2. Connect to network\n# 3. Follow setup wizard\n# 4. Enable SSH if needed\n</code></pre>"},{"location":"ubuntu-installation/#post-installation-configuration","title":"Post-Installation Configuration","text":"<pre><code># Update system\nsudo apt update &amp;&amp; sudo apt upgrade\n\n# Enable SSH\nsudo systemctl enable ssh\nsudo systemctl start ssh\n\n# Configure GPU memory split\nsudo raspi-config\n# Advanced Options &gt; Memory Split &gt; 16 (headless) or 64 (desktop)\n\n# Enable camera (if connected)\nsudo raspi-config\n# Interface Options &gt; Camera &gt; Enable\n</code></pre>"},{"location":"ubuntu-installation/#network-installation-pxe-boot","title":"Network Installation (PXE Boot)","text":""},{"location":"ubuntu-installation/#pxe-server-setup","title":"PXE Server Setup","text":"<pre><code># Install TFTP and DHCP server\nsudo apt install tftpd-hpa isc-dhcp-server\n\n# Configure DHCP\nsudo nano /etc/dhcp/dhcpd.conf\n# Add PXE boot configuration\n\n# Setup netboot files\ncd /var/lib/tftpboot\nsudo wget http://archive.ubuntu.com/ubuntu/dists/jammy/main/installer-amd64/current/legacy-images/netboot/netboot.tar.gz\nsudo tar -xzf netboot.tar.gz\n</code></pre>"},{"location":"ubuntu-installation/#automated-installation-preseed","title":"Automated Installation (Preseed)","text":""},{"location":"ubuntu-installation/#create-preseed-file","title":"Create Preseed File","text":"<pre><code># preseed.cfg example\nd-i debian-installer/language string en\nd-i debian-installer/country string US\nd-i debian-installer/locale string en_US.UTF-8\n\n# Keyboard\nd-i console-setup/ask_detect boolean false\nd-i keyboard-configuration/xkb-keymap select us\n\n# Network\nd-i netcfg/choose_interface select auto\nd-i netcfg/get_hostname string ubuntu-auto\n\n# User account\nd-i passwd/user-fullname string Ubuntu User\nd-i passwd/username string ubuntu\nd-i passwd/user-password password ubuntu\nd-i passwd/user-password-again password ubuntu\n\n# Partitioning\nd-i partman-auto/method string regular\nd-i partman-auto/choose_recipe select atomic\nd-i partman/confirm boolean true\nd-i partman/confirm_nooverwrite boolean true\n\n# Software selection\ntasksel tasksel/first multiselect ubuntu-desktop\nd-i pkgsel/include string openssh-server\n\n# GRUB\nd-i grub-installer/only_debian boolean true\nd-i grub-installer/with_other_os boolean true\n\n# Finish\nd-i finish-install/reboot_in_progress note\n</code></pre>"},{"location":"ubuntu-installation/#post-installation-setup","title":"Post-Installation Setup","text":""},{"location":"ubuntu-installation/#essential-first-steps","title":"Essential First Steps","text":"<pre><code># Update system\nsudo apt update &amp;&amp; sudo apt upgrade\n\n# Install essential packages\nsudo apt install curl wget git vim htop tree\n\n# Install media codecs\nsudo apt install ubuntu-restricted-extras\n\n# Install additional drivers\nsudo ubuntu-drivers autoinstall\n\n# Configure firewall\nsudo ufw enable\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\n</code></pre>"},{"location":"ubuntu-installation/#driver-installation","title":"Driver Installation","text":""},{"location":"ubuntu-installation/#graphics-drivers","title":"Graphics Drivers","text":"<pre><code># NVIDIA drivers\nsudo ubuntu-drivers devices\nsudo ubuntu-drivers autoinstall\n# Or specific version:\nsudo apt install nvidia-driver-535\n\n# AMD drivers (usually work out of box)\n# For additional support:\nsudo apt install mesa-utils\n\n# Intel graphics (built-in support)\nsudo apt install intel-media-va-driver\n</code></pre>"},{"location":"ubuntu-installation/#wi-fi-drivers","title":"Wi-Fi Drivers","text":"<pre><code># Check wireless device\nlspci | grep -i wireless\nlsusb | grep -i wireless\n\n# Common fixes:\n# Broadcom\nsudo apt install bcmwl-kernel-source\n\n# Realtek\nsudo apt install firmware-realtek\n\n# Intel\nsudo apt install firmware-iwlwifi\n</code></pre>"},{"location":"ubuntu-installation/#development-environment","title":"Development Environment","text":"<pre><code># Install development tools\nsudo apt install build-essential\n\n# Programming languages\nsudo apt install python3-pip nodejs npm openjdk-17-jdk\n\n# Version control\nsudo apt install git\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"your.email@example.com\"\n\n# Text editors and IDEs\nsudo snap install code --classic\nsudo snap install idea-ultimate --classic\n</code></pre>"},{"location":"ubuntu-installation/#troubleshooting-installation-issues","title":"Troubleshooting Installation Issues","text":""},{"location":"ubuntu-installation/#common-problems-and-solutions","title":"Common Problems and Solutions","text":""},{"location":"ubuntu-installation/#boot-issues","title":"Boot Issues","text":"<pre><code># Problem: Cannot boot from USB\n# Solutions:\n1. Check BIOS/UEFI settings\n2. Ensure Secure Boot is disabled\n3. Try different USB port\n4. Recreate bootable USB\n5. Check ISO file integrity\n\n# Problem: Black screen after installation\n# Solutions:\n1. Boot with nomodeset parameter\n2. Install proprietary drivers\n3. Check monitor connection\n</code></pre>"},{"location":"ubuntu-installation/#hardware-compatibility","title":"Hardware Compatibility","text":"<pre><code># Problem: Wi-Fi not working\n# Solution: Install drivers or use ethernet during installation\nsudo apt install linux-firmware\nsudo apt install firmware-b43-installer\n\n# Problem: Graphics issues\n# Solution: Use software rendering temporarily\nsudo apt install xserver-xorg-video-fbdev\n\n# Problem: Sound not working\n# Solution: Install ALSA and PulseAudio\nsudo apt install alsa-utils pulseaudio\n</code></pre>"},{"location":"ubuntu-installation/#installation-hangs","title":"Installation Hangs","text":"<pre><code># Problem: Installation freezes\n# Solutions:\n1. Check memory with memtest86+\n2. Try minimal installation\n3. Disconnect unnecessary peripherals\n4. Use alternate installer (netboot)\n</code></pre>"},{"location":"ubuntu-installation/#recovery-options","title":"Recovery Options","text":""},{"location":"ubuntu-installation/#rescue-mode","title":"Rescue Mode","text":"<pre><code># Boot from installation media\n# Choose \"Try Ubuntu\"\n# Mount existing installation:\n\nsudo mkdir /mnt/ubuntu\nsudo mount /dev/sda3 /mnt/ubuntu  # Root partition\nsudo mount /dev/sda1 /mnt/ubuntu/boot/efi  # EFI partition\nsudo mount --bind /dev /mnt/ubuntu/dev\nsudo mount --bind /proc /mnt/ubuntu/proc\nsudo mount --bind /sys /mnt/ubuntu/sys\n\n# Chroot into system\nsudo chroot /mnt/ubuntu\n\n# Fix issues (reinstall GRUB, etc.)\ngrub-install /dev/sda\nupdate-grub\n</code></pre>"},{"location":"ubuntu-installation/#installation-verification","title":"Installation Verification","text":""},{"location":"ubuntu-installation/#system-check","title":"System Check","text":"<pre><code># Check Ubuntu version\nlsb_release -a\n\n# Check kernel version\nuname -r\n\n# Check system resources\nfree -h\ndf -h\n\n# Check hardware recognition\nlspci\nlsusb\nlscpu\n\n# Check network\nip addr show\nping google.com\n\n# Check graphics\nglxinfo | grep renderer\n</code></pre>"},{"location":"ubuntu-installation/#performance-testing","title":"Performance Testing","text":"<pre><code># CPU benchmark\nstress-ng --cpu 4 --timeout 60s --metrics-brief\n\n# Memory test\nmemtester 1G 1\n\n# Disk performance\nhdparm -Tt /dev/sda\n\n# Graphics test\nglxgears\n</code></pre>"},{"location":"ubuntu-installation/#installation-flow-chart","title":"Installation Flow Chart","text":"<pre><code>graph TD\n    A[Choose Installation Method] --&gt; B{Device Type?}\n\n    B --&gt;|Desktop/Laptop| C[Desktop Installation]\n    B --&gt;|Server| D[Server Installation]\n    B --&gt;|Virtual Machine| E[VM Installation]\n    B --&gt;|Raspberry Pi| F[Pi Installation]\n\n    C --&gt; G[Download ISO]\n    D --&gt; G\n    E --&gt; G\n    F --&gt; H[Download Pi Image]\n\n    G --&gt; I[Create Bootable Media]\n    H --&gt; J[Flash to SD Card]\n\n    I --&gt; K[Boot from Media]\n    J --&gt; L[Boot Raspberry Pi]\n\n    K --&gt; M[Installation Wizard]\n    L --&gt; N[First Boot Setup]\n\n    M --&gt; O[Post-Installation Setup]\n    N --&gt; O\n\n    O --&gt; P[System Ready]\n</code></pre>"},{"location":"ubuntu-installation/#next-steps","title":"Next Steps","text":"<p>After successful Ubuntu installation:</p> <ol> <li>Learn desktop environment</li> <li>Master terminal commands</li> <li>Configure software installation</li> <li>Set up development environment</li> </ol>"},{"location":"ubuntu-installation/#summary","title":"Summary","text":"Installation Type Best For Difficulty Desktop General users, developers Easy Server Servers, headless systems Medium Virtual Machine Testing, learning Easy Dual Boot Using multiple OS Medium Raspberry Pi IoT, learning projects Easy <p>Ubuntu installation is straightforward with multiple options to suit different needs. Choose the method that best fits your use case and hardware configuration.</p>"},{"location":"ubuntu-introduction/","title":"Introduction to Ubuntu: What and Why?","text":""},{"location":"ubuntu-introduction/#what-is-ubuntu","title":"What is Ubuntu?","text":"<p>Ubuntu is a free and open-source Linux distribution based on Debian. It's designed to be user-friendly, secure, and accessible to both beginners and advanced users. Ubuntu is one of the most popular Linux distributions, known for its stability, extensive community support, and regular release cycle.</p>"},{"location":"ubuntu-introduction/#ubuntu-philosophy","title":"Ubuntu Philosophy","text":"<p>Ubuntu is built on the African philosophy of \"Ubuntu\" which means \"I am because we are\" - emphasizing community, sharing, and interconnectedness.</p>"},{"location":"ubuntu-introduction/#core-values","title":"Core Values","text":"<ul> <li>Free Software: No licensing fees, complete freedom to use, modify, and distribute</li> <li>Community Driven: Developed by a global community of volunteers</li> <li>Security First: Built-in security features and regular updates</li> <li>Accessibility: Designed to be usable by everyone</li> </ul>"},{"location":"ubuntu-introduction/#ubuntu-family-tree","title":"Ubuntu Family Tree","text":"<pre><code>graph TD\n    A[Debian] --&gt; B[Ubuntu]\n    B --&gt; C[Ubuntu Desktop]\n    B --&gt; D[Ubuntu Server]\n    B --&gt; E[Ubuntu Core]\n\n    B --&gt; F[Official Flavors]\n    F --&gt; F1[Kubuntu - KDE]\n    F --&gt; F2[Xubuntu - Xfce]\n    F --&gt; F3[Lubuntu - LXQt]\n    F --&gt; F4[Ubuntu MATE]\n    F --&gt; F5[Ubuntu Studio]\n    F --&gt; F6[Ubuntu Budgie]\n\n    B --&gt; G[Derivatives]\n    G --&gt; G1[Linux Mint]\n    G --&gt; G2[Elementary OS]\n    G --&gt; G3[Pop!_OS]\n    G --&gt; G4[Zorin OS]\n</code></pre>"},{"location":"ubuntu-introduction/#ubuntu-release-cycle","title":"Ubuntu Release Cycle","text":""},{"location":"ubuntu-introduction/#lts-vs-regular-releases","title":"LTS vs Regular Releases","text":"<pre><code>timeline\n    title Ubuntu Release Timeline\n    2020 : Ubuntu 20.04 LTS\n         : Focal Fossa\n         : 5 years support\n    2021 : Ubuntu 21.04\n         : Hirsute Hippo\n         : 9 months support\n    2021 : Ubuntu 21.10\n         : Impish Indri\n         : 9 months support\n    2022 : Ubuntu 22.04 LTS\n         : Jammy Jellyfish\n         : 5 years support\n    2022 : Ubuntu 22.10\n         : Kinetic Kudu\n         : 9 months support\n    2023 : Ubuntu 23.04\n         : Lunar Lobster\n         : 9 months support\n    2023 : Ubuntu 23.10\n         : Mantic Minotaur\n         : 9 months support\n    2024 : Ubuntu 24.04 LTS\n         : Noble Numbat\n         : 5 years support\n</code></pre>"},{"location":"ubuntu-introduction/#version-naming-scheme","title":"Version Naming Scheme","text":"<p>Ubuntu versions follow the pattern: YY.MM (Year.Month) - 20.04: Released in April 2020 - 22.04: Released in April 2022 - 24.04: Released in April 2024</p>"},{"location":"ubuntu-introduction/#why-choose-ubuntu","title":"Why Choose Ubuntu?","text":""},{"location":"ubuntu-introduction/#1-user-friendly-interface","title":"1. User-Friendly Interface","text":"<p>Ubuntu provides an intuitive desktop environment that's easy to navigate:</p> <pre><code>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u2630 Activities    \ud83d\udd50 Time    \ud83d\udd0b \u2699\ufe0f \ud83d\udc64    \u2502  \u2190 Top Bar\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                                         \u2502\n\u2502     \ud83d\uddc2\ufe0f Files    \ud83c\udf10 Firefox             \u2502  \u2190 Application Icons\n\u2502                                         \u2502\n\u2502     \u2699\ufe0f Settings  \ud83d\udcdd Text Editor        \u2502\n\u2502                                         \u2502\n\u2502     \ud83d\udce6 Software  \ud83c\udfb5 Music              \u2502\n\u2502                                         \u2502\n\u2502                                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 \ud83d\uddc2\ufe0f Files \ud83c\udf10 Firefox \ud83d\udce7 Mail \ud83d\udcf1 Phone \u2502  \u2190 Dock\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"ubuntu-introduction/#2-security-and-stability","title":"2. Security and Stability","text":"<ul> <li>Built-in Firewall: UFW (Uncomplicated Firewall)</li> <li>Automatic Security Updates: Critical patches applied automatically</li> <li>Sandboxed Applications: Snap packages run in isolation</li> <li>Encrypted Storage: Full disk encryption options</li> <li>Regular Security Audits: Community-driven security reviews</li> </ul>"},{"location":"ubuntu-introduction/#3-software-management","title":"3. Software Management","text":"<p>Ubuntu offers multiple ways to install software:</p> <pre><code>graph LR\n    A[Software Installation] --&gt; B[APT Package Manager]\n    A --&gt; C[Snap Store]\n    A --&gt; D[Flatpak]\n    A --&gt; E[AppImage]\n    A --&gt; F[DEB Packages]\n\n    B --&gt; B1[Command Line]\n    B --&gt; B2[Synaptic GUI]\n\n    C --&gt; C1[Ubuntu Software]\n    C --&gt; C2[Snap Command]\n\n    D --&gt; D1[GNOME Software]\n    D --&gt; D2[Flatpak Command]\n</code></pre>"},{"location":"ubuntu-introduction/#4-hardware-compatibility","title":"4. Hardware Compatibility","text":"<p>Ubuntu supports a wide range of hardware:</p> Hardware Type Support Level Notes Intel/AMD CPUs Excellent Full support for modern processors NVIDIA Graphics Very Good Proprietary drivers available AMD Graphics Excellent Open-source drivers included WiFi Adapters Very Good Most adapters work out-of-box Printers Excellent CUPS printing system Touchscreens Good Basic multi-touch support"},{"location":"ubuntu-introduction/#5-development-environment","title":"5. Development Environment","text":"<p>Ubuntu is excellent for developers:</p> <pre><code># Pre-installed development tools\ngcc --version        # GNU Compiler Collection\npython3 --version    # Python programming language\ngit --version        # Version control system\nssh --version        # Secure Shell\n\n# Easy installation of development tools\nsudo apt update\nsudo apt install nodejs npm       # Node.js development\nsudo apt install openjdk-17-jdk  # Java development\nsudo apt install docker.io       # Containerization\n</code></pre>"},{"location":"ubuntu-introduction/#ubuntu-editions","title":"Ubuntu Editions","text":""},{"location":"ubuntu-introduction/#1-ubuntu-desktop","title":"1. Ubuntu Desktop","text":"<ul> <li>Target: Home users, developers, students</li> <li>Desktop Environment: GNOME (default)</li> <li>Features: Complete desktop experience with GUI</li> <li>System Requirements: </li> <li>4 GB RAM (minimum), 8 GB recommended</li> <li>25 GB disk space</li> <li>1 GHz dual-core processor</li> </ul>"},{"location":"ubuntu-introduction/#2-ubuntu-server","title":"2. Ubuntu Server","text":"<ul> <li>Target: Servers, cloud deployments, IoT</li> <li>Interface: Command-line only</li> <li>Features: Optimized for server workloads</li> <li>System Requirements:</li> <li>1 GB RAM (minimum), 2 GB recommended</li> <li>2.5 GB disk space</li> <li>1 GHz processor</li> </ul>"},{"location":"ubuntu-introduction/#3-ubuntu-core","title":"3. Ubuntu Core","text":"<ul> <li>Target: IoT devices, embedded systems</li> <li>Package System: Snap-only</li> <li>Features: Minimal, transactional updates</li> <li>Benefits: Automatic security updates, rollback capability</li> </ul>"},{"location":"ubuntu-introduction/#ubuntu-desktop-environments","title":"Ubuntu Desktop Environments","text":""},{"location":"ubuntu-introduction/#gnome-default","title":"GNOME (Default)","text":"<pre><code>Features:\n\u251c\u2500\u2500 Modern Design\n\u251c\u2500\u2500 Touch-friendly Interface\n\u251c\u2500\u2500 Extension Support\n\u251c\u2500\u2500 Integrated Search\n\u2514\u2500\u2500 Accessibility Features\n</code></pre>"},{"location":"ubuntu-introduction/#available-alternatives","title":"Available Alternatives","text":"Desktop Environment Flavor Resource Usage Best For KDE Plasma Kubuntu Medium-High Power users, customization Xfce Xubuntu Low Older hardware, simplicity LXQt Lubuntu Very Low Very old hardware MATE Ubuntu MATE Low-Medium Traditional desktop feel Budgie Ubuntu Budgie Medium Modern, elegant interface"},{"location":"ubuntu-introduction/#package-management","title":"Package Management","text":""},{"location":"ubuntu-introduction/#apt-advanced-package-tool","title":"APT (Advanced Package Tool)","text":"<pre><code># Update package lists\nsudo apt update\n\n# Upgrade installed packages\nsudo apt upgrade\n\n# Install new software\nsudo apt install package-name\n\n# Remove software\nsudo apt remove package-name\n\n# Search for packages\napt search keyword\n\n# Show package information\napt show package-name\n\n# List installed packages\napt list --installed\n</code></pre>"},{"location":"ubuntu-introduction/#snap-packages","title":"Snap Packages","text":"<pre><code># Install snap package\nsudo snap install package-name\n\n# List installed snaps\nsnap list\n\n# Update all snaps\nsudo snap refresh\n\n# Remove snap package\nsudo snap remove package-name\n\n# Search for snaps\nsnap find keyword\n</code></pre>"},{"location":"ubuntu-introduction/#software-sources","title":"Software Sources","text":"<pre><code>graph TD\n    A[Ubuntu Software Sources] --&gt; B[Main Repository]\n    A --&gt; C[Universe Repository]\n    A --&gt; D[Restricted Repository]\n    A --&gt; E[Multiverse Repository]\n    A --&gt; F[Partner Repository]\n\n    B --&gt; B1[Officially supported packages]\n    C --&gt; C1[Community maintained packages]\n    D --&gt; D1[Proprietary drivers/firmware]\n    E --&gt; E1[Non-free software]\n    F --&gt; F1[Software from partners]\n\n    A --&gt; G[Third-party Sources]\n    G --&gt; G1[PPAs - Personal Package Archives]\n    G --&gt; G2[Snap Store]\n    G --&gt; G3[Flatpak Repositories]\n</code></pre>"},{"location":"ubuntu-introduction/#file-system-structure","title":"File System Structure","text":"<pre><code>/                    \u2190 Root directory\n\u251c\u2500\u2500 bin/            \u2190 Essential command binaries\n\u251c\u2500\u2500 boot/           \u2190 Boot loader files\n\u251c\u2500\u2500 dev/            \u2190 Device files\n\u251c\u2500\u2500 etc/            \u2190 Configuration files\n\u251c\u2500\u2500 home/           \u2190 User home directories\n\u2502   \u2514\u2500\u2500 username/   \u2190 Your personal directory\n\u251c\u2500\u2500 lib/            \u2190 Essential shared libraries\n\u251c\u2500\u2500 media/          \u2190 Removable media mount points\n\u251c\u2500\u2500 mnt/            \u2190 Temporary mount points\n\u251c\u2500\u2500 opt/            \u2190 Optional software packages\n\u251c\u2500\u2500 proc/           \u2190 Process information\n\u251c\u2500\u2500 root/           \u2190 Root user's home directory\n\u251c\u2500\u2500 run/            \u2190 Runtime variable data\n\u251c\u2500\u2500 sbin/           \u2190 System administration binaries\n\u251c\u2500\u2500 srv/            \u2190 Service data\n\u251c\u2500\u2500 sys/            \u2190 System information\n\u251c\u2500\u2500 tmp/            \u2190 Temporary files\n\u251c\u2500\u2500 usr/            \u2190 User programs and data\n\u2502   \u251c\u2500\u2500 bin/        \u2190 User command binaries\n\u2502   \u251c\u2500\u2500 lib/        \u2190 Libraries for /usr/bin and /usr/sbin\n\u2502   \u251c\u2500\u2500 local/      \u2190 Local hierarchy\n\u2502   \u2514\u2500\u2500 share/      \u2190 Architecture-independent data\n\u2514\u2500\u2500 var/            \u2190 Variable data files\n    \u251c\u2500\u2500 log/        \u2190 Log files\n    \u251c\u2500\u2500 cache/      \u2190 Application cache data\n    \u2514\u2500\u2500 lib/        \u2190 Variable state information\n</code></pre>"},{"location":"ubuntu-introduction/#terminal-and-command-line","title":"Terminal and Command Line","text":""},{"location":"ubuntu-introduction/#essential-commands","title":"Essential Commands","text":"<pre><code># Navigation\npwd                 # Print working directory\nls                  # List directory contents\ncd /path/to/dir     # Change directory\ncd ~                # Go to home directory\ncd ..               # Go up one directory\n\n# File Operations\ncp source dest      # Copy files/directories\nmv source dest      # Move/rename files\nrm filename         # Remove file\nrm -rf directory    # Remove directory recursively\nmkdir dirname       # Create directory\ntouch filename      # Create empty file\n\n# File Viewing\ncat filename        # Display file contents\nless filename       # View file page by page\nhead filename       # Show first 10 lines\ntail filename       # Show last 10 lines\ngrep pattern file   # Search for pattern in file\n\n# System Information\ntop                 # Show running processes\nps aux              # List all processes\ndf -h               # Show disk usage\nfree -h             # Show memory usage\nuname -a            # System information\nwhoami              # Current username\n</code></pre>"},{"location":"ubuntu-introduction/#file-permissions","title":"File Permissions","text":"<pre><code># Understanding permissions: rwxrwxrwx\n# r = read (4), w = write (2), x = execute (1)\n# First rwx: Owner, Second rwx: Group, Third rwx: Others\n\n# Change permissions\nchmod 755 filename  # rwxr-xr-x\nchmod +x script     # Add execute permission\nchmod -w file       # Remove write permission\n\n# Change ownership\nsudo chown user:group filename\nsudo chown -R user:group directory/\n</code></pre>"},{"location":"ubuntu-introduction/#ubuntu-for-different-use-cases","title":"Ubuntu for Different Use Cases","text":""},{"location":"ubuntu-introduction/#1-home-desktop","title":"1. Home Desktop","text":"<ul> <li>Web browsing: Firefox, Chrome</li> <li>Office suite: LibreOffice</li> <li>Media: VLC, Rhythmbox</li> <li>Graphics: GIMP, Inkscape</li> </ul>"},{"location":"ubuntu-introduction/#2-development-workstation","title":"2. Development Workstation","text":"<ul> <li>IDEs: VS Code, IntelliJ IDEA, Eclipse</li> <li>Programming languages: Python, Java, Node.js, C++</li> <li>Version control: Git, GitHub Desktop</li> <li>Containers: Docker, Podman</li> </ul>"},{"location":"ubuntu-introduction/#3-server-environment","title":"3. Server Environment","text":"<ul> <li>Web servers: Apache, Nginx</li> <li>Databases: MySQL, PostgreSQL, MongoDB</li> <li>Monitoring: Prometheus, Grafana</li> <li>Automation: Ansible, Puppet</li> </ul>"},{"location":"ubuntu-introduction/#4-educational-institution","title":"4. Educational Institution","text":"<ul> <li>Classroom management: Epoptes</li> <li>Educational software: GCompris, Stellarium</li> <li>Programming education: Scratch, Python IDLE</li> <li>Cost-effective: No licensing fees</li> </ul>"},{"location":"ubuntu-introduction/#getting-started-workflow","title":"Getting Started Workflow","text":"<pre><code>graph TD\n    A[Download Ubuntu] --&gt; B[Create Installation Media]\n    B --&gt; C[Boot from USB/DVD]\n    C --&gt; D[Try Ubuntu Live]\n    D --&gt; E{Satisfied?}\n    E --&gt;|Yes| F[Install Ubuntu]\n    E --&gt;|No| G[Try Different Flavor]\n    F --&gt; H[Initial Setup]\n    H --&gt; I[Update System]\n    I --&gt; J[Install Software]\n    J --&gt; K[Configure Settings]\n    K --&gt; L[Start Using Ubuntu]\n    G --&gt; D\n</code></pre>"},{"location":"ubuntu-introduction/#installation-options","title":"Installation Options","text":"<ol> <li>Dual Boot: Keep existing OS alongside Ubuntu</li> <li>Replace OS: Complete Ubuntu installation</li> <li>Virtual Machine: Run Ubuntu inside another OS</li> <li>Live USB: Portable Ubuntu without installation</li> </ol>"},{"location":"ubuntu-introduction/#community-and-support","title":"Community and Support","text":""},{"location":"ubuntu-introduction/#getting-help","title":"Getting Help","text":"Resource Type Best For Ubuntu Forums Community General questions, troubleshooting Ask Ubuntu Q&amp;A Site Specific technical problems Ubuntu Documentation Official Comprehensive guides IRC/Discord Real-time Chat Quick questions, discussions Local User Groups In-person Networking, learning"},{"location":"ubuntu-introduction/#contributing-back","title":"Contributing Back","text":"<pre><code>graph LR\n    A[Ways to Contribute] --&gt; B[Bug Reporting]\n    A --&gt; C[Documentation]\n    A --&gt; D[Translation]\n    A --&gt; E[Code Development]\n    A --&gt; F[Community Support]\n    A --&gt; G[Testing]\n\n    B --&gt; B1[Launchpad Bug Tracker]\n    C --&gt; C1[Wiki Editing]\n    D --&gt; D1[Launchpad Translations]\n    E --&gt; E1[Bazaar/Git Repositories]\n    F --&gt; F1[Forums/IRC Help]\n    G --&gt; G1[Daily Builds Testing]\n</code></pre>"},{"location":"ubuntu-introduction/#advantages-summary","title":"Advantages Summary","text":"Advantage Description Free No cost for download, use, or distribution Secure Built-in security features and regular updates Stable Reliable for both personal and professional use Customizable Modify interface and behavior to your needs Community Large, helpful community for support Privacy No data collection or telemetry by default Performance Efficient resource usage Compatibility Runs on wide range of hardware"},{"location":"ubuntu-introduction/#common-use-cases","title":"Common Use Cases","text":""},{"location":"ubuntu-introduction/#for-beginners","title":"For Beginners","text":"<ul> <li>Replace Windows/macOS with familiar interface</li> <li>Learn Linux without complexity</li> <li>Safe environment for experimentation</li> </ul>"},{"location":"ubuntu-introduction/#for-developers","title":"For Developers","text":"<ul> <li>Native development environment</li> <li>Package management for tools</li> <li>Container support built-in</li> </ul>"},{"location":"ubuntu-introduction/#for-system-administrators","title":"For System Administrators","text":"<ul> <li>Server management and automation</li> <li>Cloud deployment platform</li> <li>Enterprise support available</li> </ul>"},{"location":"ubuntu-introduction/#for-students","title":"For Students","text":"<ul> <li>Free alternative to expensive software</li> <li>Learning programming and system administration</li> <li>Academic discounts not needed</li> </ul>"},{"location":"ubuntu-introduction/#next-steps","title":"Next Steps","text":"<p>After understanding Ubuntu basics:</p> <ol> <li>Install Ubuntu on your system</li> <li>Learn basic terminal commands</li> <li>Explore the desktop environment</li> <li>Install and manage software</li> </ol> <p>Ubuntu represents freedom, community, and accessibility in computing. Whether you're a complete beginner or an experienced user, Ubuntu provides a solid foundation for your computing needs while respecting your privacy and giving you complete control over your system.</p>"},{"location":"ubuntu-overview/","title":"Ubuntu overview","text":""},{"location":"ubuntu-overview/#ubuntu-articles-overview","title":"Ubuntu Articles Overview","text":""},{"location":"ubuntu-overview/#basic-ubuntu","title":"Basic Ubuntu","text":"<ul> <li>Introduction to Ubuntu: What and Why?</li> <li>Installing Ubuntu on Various Devices</li> <li>Getting to Know Desktop Environment in Ubuntu</li> <li>Basic Ubuntu Terminal Commands</li> <li>File and Folder Management in Ubuntu</li> <li>Managing Users and Permissions</li> <li>Software Installation in Ubuntu (APT, Snap, Flatpak)</li> <li>Ubuntu System Update &amp; Upgrade</li> <li>Network Configuration in Ubuntu</li> </ul>"},{"location":"ubuntu-overview/#advanced-ubuntu","title":"Advanced Ubuntu","text":"<ul> <li>Ubuntu Interface Customization</li> <li>Task Automation with Cron</li> <li>Service Management with systemd</li> <li>Managing Repositories and PPA</li> <li>Basic Security in Ubuntu</li> <li>Data Backup and Restore in Ubuntu</li> <li>System Monitoring in Ubuntu</li> <li>Virtualization with KVM/VirtualBox</li> </ul>"},{"location":"ubuntu-overview/#tips-and-tricks","title":"Tips and Tricks","text":"<ul> <li>Resource Saving Tips in Ubuntu</li> <li>Solving Common Ubuntu Issues</li> <li>Important Keyboard Shortcuts in Ubuntu</li> <li>Managing Environment Variables in Ubuntu</li> <li>Boot and Startup Optimization for Ubuntu</li> <li>Best Practices for File and Folder Naming</li> </ul>"},{"location":"ubuntu-overview/#case-studies","title":"Case Studies","text":"<ul> <li>Installing LAMP Stack on Ubuntu</li> <li>Setting Up Web Server with Nginx on Ubuntu</li> <li>Making Ubuntu as File Server (Samba/FTP)</li> <li>Cloud Backup Automation in Ubuntu</li> <li>Case Study: Ubuntu for Software Development</li> <li>Creating Isolated Development Environment in Ubuntu</li> </ul>"},{"location":"ubuntu-software-installation/","title":"Software Installation in Ubuntu (APT, Snap, Flatpak)","text":""},{"location":"ubuntu-software-installation/#overview","title":"Overview","text":"<p>Ubuntu offers multiple package management systems for installing software. Each has its own advantages and use cases. This guide covers APT, Snap, Flatpak, and other installation methods comprehensively.</p>"},{"location":"ubuntu-software-installation/#package-management-systems-comparison","title":"Package Management Systems Comparison","text":"<pre><code>graph TD\n    A[Ubuntu Software Installation] --&gt; B[APT]\n    A --&gt; C[Snap]\n    A --&gt; D[Flatpak]\n    A --&gt; E[AppImage]\n    A --&gt; F[DEB Packages]\n    A --&gt; G[Source Code]\n\n    B --&gt; B1[System Packages]\n    B --&gt; B2[PPAs]\n    B --&gt; B3[.deb files]\n\n    C --&gt; C1[Universal Packages]\n    C --&gt; C2[Sandboxed Apps]\n    C --&gt; C3[Auto Updates]\n\n    D --&gt; D1[Cross-distro]\n    D --&gt; D2[Sandboxed]\n    D --&gt; D3[Runtime Libraries]\n\n    E --&gt; E1[Portable Apps]\n    E --&gt; E2[No Installation]\n    E --&gt; E3[Self-contained]\n</code></pre> Feature APT Snap Flatpak AppImage Security System-level Sandboxed Sandboxed Varies Updates Manual/Automatic Automatic Manual Manual Size Small Large Medium Large Performance Fast Slower startup Medium Fast Permissions Full system Confined Confined Varies"},{"location":"ubuntu-software-installation/#apt-package-manager","title":"APT Package Manager","text":""},{"location":"ubuntu-software-installation/#understanding-apt","title":"Understanding APT","text":"<p>APT (Advanced Package Tool) is the default package manager for Ubuntu, handling .deb packages and system libraries.</p>"},{"location":"ubuntu-software-installation/#basic-apt-commands","title":"Basic APT Commands","text":"<pre><code># Update package lists\nsudo apt update\n\n# Upgrade installed packages\nsudo apt upgrade\n\n# Full system upgrade\nsudo apt full-upgrade\n\n# Install package\nsudo apt install package-name\n\n# Install multiple packages\nsudo apt install package1 package2 package3\n\n# Remove package\nsudo apt remove package-name\n\n# Remove package and configuration files\nsudo apt purge package-name\n\n# Remove orphaned packages\nsudo apt autoremove\n\n# Clean package cache\nsudo apt autoclean\nsudo apt clean\n</code></pre>"},{"location":"ubuntu-software-installation/#search-and-information","title":"Search and Information","text":"<pre><code># Search for packages\napt search keyword\n\n# Show package information\napt show package-name\n\n# List installed packages\napt list --installed\n\n# List upgradable packages\napt list --upgradable\n\n# Check if package is installed\ndpkg -l | grep package-name\n\n# Show package dependencies\napt depends package-name\n\n# Show reverse dependencies\napt rdepends package-name\n</code></pre>"},{"location":"ubuntu-software-installation/#repository-management","title":"Repository Management","text":"<pre><code># List repositories\ngrep -rhE ^deb /etc/apt/sources.list*\n\n# Add repository key\nwget -qO - https://example.com/key.gpg | sudo apt-key add -\n\n# Add repository (modern method)\ncurl -fsSL https://example.com/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/example.gpg\necho \"deb [signed-by=/usr/share/keyrings/example.gpg] https://example.com/repo stable main\" | sudo tee /etc/apt/sources.list.d/example.list\n\n# Update after adding repository\nsudo apt update\n</code></pre>"},{"location":"ubuntu-software-installation/#installing-software-with-apt","title":"Installing Software with APT","text":""},{"location":"ubuntu-software-installation/#development-tools","title":"Development Tools","text":"<pre><code># Build essentials\nsudo apt install build-essential\n\n# Programming languages\nsudo apt install python3 python3-pip\nsudo apt install nodejs npm\nsudo apt install openjdk-17-jdk\nsudo apt install golang-go\nsudo apt install rust-all\n\n# Version control\nsudo apt install git subversion\n\n# Text editors\nsudo apt install vim neovim emacs\nsudo apt install code  # May need Microsoft repository\n</code></pre>"},{"location":"ubuntu-software-installation/#media-and-graphics","title":"Media and Graphics","text":"<pre><code># Media players\nsudo apt install vlc audacious rhythmbox\n\n# Graphics editors\nsudo apt install gimp inkscape blender\n\n# Image viewers\nsudo apt install eog gwenview\n\n# Video editing\nsudo apt install kdenlive openshot\n</code></pre>"},{"location":"ubuntu-software-installation/#system-tools","title":"System Tools","text":"<pre><code># File managers\nsudo apt install nautilus dolphin thunar\n\n# Archive tools\nsudo apt install p7zip-full unrar\n\n# System monitoring\nsudo apt install htop btop neofetch\n\n# Network tools\nsudo apt install curl wget nmap\n</code></pre>"},{"location":"ubuntu-software-installation/#snap-package-manager","title":"Snap Package Manager","text":""},{"location":"ubuntu-software-installation/#what-are-snap-packages","title":"What are Snap Packages?","text":"<p>Snap packages are containerized software packages that work across Linux distributions. They include all dependencies and run in sandboxed environments.</p>"},{"location":"ubuntu-software-installation/#basic-snap-commands","title":"Basic Snap Commands","text":"<pre><code># List installed snaps\nsnap list\n\n# Search for snaps\nsnap find keyword\n\n# Install snap\nsudo snap install package-name\n\n# Install from specific channel\nsudo snap install package-name --channel=stable\nsudo snap install package-name --beta\nsudo snap install package-name --edge\n\n# Update all snaps\nsudo snap refresh\n\n# Update specific snap\nsudo snap refresh package-name\n\n# Remove snap\nsudo snap remove package-name\n\n# Show snap information\nsnap info package-name\n</code></pre>"},{"location":"ubuntu-software-installation/#snap-channels","title":"Snap Channels","text":"<pre><code># Channels explained:\n# stable   - Production-ready releases\n# candidate - Release candidates\n# beta     - Beta releases\n# edge     - Development builds\n\n# Install from specific channel\nsudo snap install code --classic --channel=stable\nsudo snap install discord --beta\n</code></pre>"},{"location":"ubuntu-software-installation/#popular-snap-applications","title":"Popular Snap Applications","text":"<pre><code># Development\nsudo snap install code --classic\nsudo snap install intellij-idea-ultimate --classic\nsudo snap install atom --classic\nsudo snap install sublime-text --classic\n\n# Media\nsudo snap install vlc\nsudo snap install spotify\nsudo snap install discord\n\n# Productivity\nsudo snap install firefox\nsudo snap install chromium\nsudo snap install slack --classic\nsudo snap install teams\n\n# Graphics\nsudo snap install gimp\nsudo snap install inkscape\nsudo snap install blender --classic\n</code></pre>"},{"location":"ubuntu-software-installation/#snap-configuration","title":"Snap Configuration","text":"<pre><code># View snap connections\nsnap connections package-name\n\n# Connect interface\nsudo snap connect package-name:interface\n\n# Disconnect interface\nsudo snap disconnect package-name:interface\n\n# View snap services\nsnap services\n\n# Start/stop snap service\nsudo snap start package-name.service\nsudo snap stop package-name.service\n</code></pre>"},{"location":"ubuntu-software-installation/#flatpak-package-manager","title":"Flatpak Package Manager","text":""},{"location":"ubuntu-software-installation/#installing-flatpak","title":"Installing Flatpak","text":"<pre><code># Install Flatpak\nsudo apt install flatpak\n\n# Add Flathub repository\nflatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo\n\n# Install GNOME Software Flatpak plugin\nsudo apt install gnome-software-plugin-flatpak\n\n# Restart system (recommended)\nsudo reboot\n</code></pre>"},{"location":"ubuntu-software-installation/#basic-flatpak-commands","title":"Basic Flatpak Commands","text":"<pre><code># Search for applications\nflatpak search keyword\n\n# Install application\nflatpak install flathub application-id\n\n# List installed applications\nflatpak list\n\n# Update all applications\nflatpak update\n\n# Update specific application\nflatpak update application-id\n\n# Remove application\nflatpak uninstall application-id\n\n# Show application information\nflatpak info application-id\n\n# Run application\nflatpak run application-id\n</code></pre>"},{"location":"ubuntu-software-installation/#popular-flatpak-applications","title":"Popular Flatpak Applications","text":"<pre><code># Browsers\nflatpak install flathub org.mozilla.firefox\nflatpak install flathub com.google.Chrome\n\n# Development\nflatpak install flathub com.visualstudio.code\nflatpak install flathub org.gnome.Builder\n\n# Media\nflatpak install flathub org.videolan.VLC\nflatpak install flathub com.spotify.Client\n\n# Graphics\nflatpak install flathub org.gimp.GIMP\nflatpak install flathub org.inkscape.Inkscape\n\n# Office\nflatpak install flathub org.libreoffice.LibreOffice\nflatpak install flathub com.github.johnfactotum.Foliate\n</code></pre>"},{"location":"ubuntu-software-installation/#flatpak-management","title":"Flatpak Management","text":"<pre><code># List remotes\nflatpak remotes\n\n# Add remote repository\nflatpak remote-add --if-not-exists remotename https://repo-url\n\n# Remove remote repository\nflatpak remote-delete remotename\n\n# Clean up unused runtimes\nflatpak uninstall --unused\n\n# Show repository information\nflatpak remote-info flathub application-id\n</code></pre>"},{"location":"ubuntu-software-installation/#appimage-applications","title":"AppImage Applications","text":""},{"location":"ubuntu-software-installation/#what-are-appimages","title":"What are AppImages?","text":"<p>AppImages are portable application packages that don't require installation. They contain the application and all its dependencies.</p>"},{"location":"ubuntu-software-installation/#using-appimages","title":"Using AppImages","text":"<pre><code># Download AppImage\nwget https://example.com/app.AppImage\n\n# Make executable\nchmod +x app.AppImage\n\n# Run application\n./app.AppImage\n\n# Integrate with system (optional)\n./app.AppImage --appimage-integrate\n\n# Remove integration\n./app.AppImage --appimage-remove\n</code></pre>"},{"location":"ubuntu-software-installation/#appimage-management-tools","title":"AppImage Management Tools","text":"<pre><code># AppImageLauncher (GUI manager)\nsudo add-apt-repository ppa:appimagelauncher-team/stable\nsudo apt update\nsudo apt install appimagelauncher\n\n# AppImagePool (store-like interface)\nflatpak install flathub io.github.prateekmedia.appimagepool\n</code></pre>"},{"location":"ubuntu-software-installation/#software-centers-and-gui-tools","title":"Software Centers and GUI Tools","text":""},{"location":"ubuntu-software-installation/#ubuntu-software-center","title":"Ubuntu Software Center","text":"<pre><code># Launch Ubuntu Software\ngnome-software\n\n# Or from command line\nubuntu-software\n\n# Features:\n# - Browse categories\n# - Install/remove packages\n# - Automatic updates\n# - Reviews and ratings\n</code></pre>"},{"location":"ubuntu-software-installation/#synaptic-package-manager","title":"Synaptic Package Manager","text":"<pre><code># Install Synaptic\nsudo apt install synaptic\n\n# Launch\nsudo synaptic\n\n# Features:\n# - Advanced package management\n# - Repository management\n# - Package information\n# - Dependency resolution\n</code></pre>"},{"location":"ubuntu-software-installation/#appcenter-elementary-os-style","title":"AppCenter (elementary OS style)","text":"<pre><code># Install AppCenter\nsudo apt install appcenter\n\n# Alternative: GNOME Software\nsudo apt install gnome-software\n</code></pre>"},{"location":"ubuntu-software-installation/#installing-from-source-code","title":"Installing from Source Code","text":""},{"location":"ubuntu-software-installation/#prerequisites","title":"Prerequisites","text":"<pre><code># Install build tools\nsudo apt install build-essential\nsudo apt install cmake\nsudo apt install autotools-dev\nsudo apt install pkg-config\n\n# Install common dependencies\nsudo apt install libssl-dev\nsudo apt install libcurl4-openssl-dev\nsudo apt install zlib1g-dev\n</code></pre>"},{"location":"ubuntu-software-installation/#typical-source-installation","title":"Typical Source Installation","text":"<pre><code># Download source code\nwget https://example.com/source.tar.gz\ntar -xzf source.tar.gz\ncd source-directory\n\n# Configure build\n./configure --prefix=/usr/local\n\n# Or with CMake\nmkdir build &amp;&amp; cd build\ncmake ..\n\n# Compile\nmake -j$(nproc)\n\n# Install\nsudo make install\n\n# Or using checkinstall (creates .deb package)\nsudo apt install checkinstall\nsudo checkinstall\n</code></pre>"},{"location":"ubuntu-software-installation/#python-packages","title":"Python Packages","text":"<pre><code># Using pip\npip3 install package-name\n\n# User installation (recommended)\npip3 install --user package-name\n\n# Virtual environment (best practice)\npython3 -m venv myenv\nsource myenv/bin/activate\npip install package-name\n</code></pre>"},{"location":"ubuntu-software-installation/#nodejs-packages","title":"Node.js Packages","text":"<pre><code># Global installation\nsudo npm install -g package-name\n\n# Local installation\nnpm install package-name\n\n# Using Yarn\nnpm install -g yarn\nyarn global add package-name\n</code></pre>"},{"location":"ubuntu-software-installation/#adding-ppas-personal-package-archives","title":"Adding PPAs (Personal Package Archives)","text":""},{"location":"ubuntu-software-installation/#understanding-ppas","title":"Understanding PPAs","text":"<p>PPAs are user-contributed repositories that provide newer or additional software not available in official Ubuntu repositories.</p>"},{"location":"ubuntu-software-installation/#managing-ppas","title":"Managing PPAs","text":"<pre><code># Add PPA\nsudo add-apt-repository ppa:user/ppa-name\nsudo apt update\n\n# Remove PPA\nsudo add-apt-repository --remove ppa:user/ppa-name\nsudo apt update\n\n# List PPAs\ngrep -rhE ^deb.*ppa /etc/apt/sources.list*\n\n# Purge PPA packages\nsudo ppa-purge ppa:user/ppa-name\n</code></pre>"},{"location":"ubuntu-software-installation/#popular-ppas","title":"Popular PPAs","text":"<pre><code># Graphics drivers\nsudo add-apt-repository ppa:graphics-drivers/ppa\n\n# LibreOffice\nsudo add-apt-repository ppa:libreoffice/ppa\n\n# Git (latest version)\nsudo add-apt-repository ppa:git-core/ppa\n\n# OBS Studio\nsudo add-apt-repository ppa:obsproject/obs-studio\n\n# Wine\nsudo add-apt-repository ppa:wine/wine-builds\n</code></pre>"},{"location":"ubuntu-software-installation/#package-installation-strategies","title":"Package Installation Strategies","text":""},{"location":"ubuntu-software-installation/#choosing-the-right-package-format","title":"Choosing the Right Package Format","text":"<pre><code>graph TD\n    A[Need Software?] --&gt; B{Type of Software?}\n\n    B --&gt;|System Tool| C[Use APT]\n    B --&gt;|Desktop App| D{Security Important?}\n    B --&gt;|Development Tool| E{Need Latest Version?}\n\n    D --&gt;|Yes| F[Use Flatpak/Snap]\n    D --&gt;|No| G[Use APT/PPA]\n\n    E --&gt;|Yes| H[Use Snap/Source]\n    E --&gt;|No| C\n\n    C --&gt; I[sudo apt install]\n    F --&gt; J[flatpak install]\n    G --&gt; K[Add PPA + APT]\n    H --&gt; L[Compile from source]\n</code></pre>"},{"location":"ubuntu-software-installation/#installation-priority","title":"Installation Priority","text":"<ol> <li>APT (Official repositories) - First choice for system packages</li> <li>Snap/Flatpak - For desktop applications requiring sandboxing</li> <li>PPA - For newer versions of existing packages</li> <li>AppImage - For portable applications</li> <li>Source compilation - Last resort or specific requirements</li> </ol>"},{"location":"ubuntu-software-installation/#troubleshooting-installation-issues","title":"Troubleshooting Installation Issues","text":""},{"location":"ubuntu-software-installation/#common-apt-issues","title":"Common APT Issues","text":"<pre><code># Problem: Broken packages\nsudo apt --fix-broken install\nsudo dpkg --configure -a\n\n# Problem: Lock file exists\nsudo rm /var/lib/apt/lists/lock\nsudo rm /var/cache/apt/archives/lock\nsudo rm /var/lib/dpkg/lock*\n\n# Problem: GPG key errors\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys KEY-ID\n\n# Problem: Repository not found\nsudo apt update 2&gt;&amp;1 | grep -E \"Failed to fetch|404\"\n# Remove problematic repositories from /etc/apt/sources.list.d/\n</code></pre>"},{"location":"ubuntu-software-installation/#snap-issues","title":"Snap Issues","text":"<pre><code># Problem: Snap not connecting\nsudo snap connect app-name:interface-name\n\n# Problem: Snap not starting\nsnap logs app-name\n\n# Problem: Permission issues\nsudo snap refresh --devmode app-name\n\n# Problem: Interface not available\nsnap interface interface-name\n</code></pre>"},{"location":"ubuntu-software-installation/#flatpak-issues","title":"Flatpak Issues","text":"<pre><code># Problem: Runtime missing\nflatpak install flathub org.freedesktop.Platform//22.08\n\n# Problem: Permission issues\nflatpak override --user --filesystem=home app-id\n\n# Problem: Application won't start\nflatpak run --verbose app-id\n</code></pre>"},{"location":"ubuntu-software-installation/#automation-and-scripting","title":"Automation and Scripting","text":""},{"location":"ubuntu-software-installation/#automated-installation-script","title":"Automated Installation Script","text":"<pre><code>#!/bin/bash\n# install-essentials.sh\n\nset -e\n\necho \"Updating system...\"\nsudo apt update &amp;&amp; sudo apt upgrade -y\n\necho \"Installing essential packages...\"\nsudo apt install -y \\\n    curl \\\n    wget \\\n    git \\\n    vim \\\n    htop \\\n    tree \\\n    unzip \\\n    software-properties-common \\\n    apt-transport-https \\\n    ca-certificates \\\n    gnupg \\\n    lsb-release\n\necho \"Installing development tools...\"\nsudo apt install -y \\\n    build-essential \\\n    python3-pip \\\n    nodejs \\\n    npm\n\necho \"Installing media codecs...\"\nsudo apt install -y ubuntu-restricted-extras\n\necho \"Installing Flatpak...\"\nsudo apt install -y flatpak\nflatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo\n\necho \"Installing Snap applications...\"\nsudo snap install code --classic\nsudo snap install discord\nsudo snap install vlc\n\necho \"Installation complete!\"\n</code></pre>"},{"location":"ubuntu-software-installation/#package-list-management","title":"Package List Management","text":"<pre><code># Export installed packages\ndpkg --get-selections &gt; installed-packages.txt\nsnap list &gt; installed-snaps.txt\nflatpak list &gt; installed-flatpaks.txt\n\n# Install from package list\nsudo dpkg --set-selections &lt; installed-packages.txt\nsudo apt dselect-upgrade\n</code></pre>"},{"location":"ubuntu-software-installation/#security-considerations","title":"Security Considerations","text":""},{"location":"ubuntu-software-installation/#package-verification","title":"Package Verification","text":"<pre><code># Verify package signatures\napt-key list\n\n# Check package integrity\ndebsums package-name\n\n# Verify Snap publisher\nsnap info package-name | grep publisher\n</code></pre>"},{"location":"ubuntu-software-installation/#safe-installation-practices","title":"Safe Installation Practices","text":"<ol> <li>Use official repositories first</li> <li>Verify PPA sources before adding</li> <li>Check application permissions for Snaps/Flatpaks</li> <li>Keep system updated regularly</li> <li>Remove unused packages periodically</li> </ol>"},{"location":"ubuntu-software-installation/#repository-trust","title":"Repository Trust","text":"<pre><code># Check repository signatures\napt-key fingerprint\n\n# Add trusted keys properly\ncurl -fsSL https://example.com/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/example.gpg\n\n# Avoid apt-key add (deprecated)\n# Use gpg --dearmor instead\n</code></pre>"},{"location":"ubuntu-software-installation/#performance-optimization","title":"Performance Optimization","text":""},{"location":"ubuntu-software-installation/#package-cache-management","title":"Package Cache Management","text":"<pre><code># Check cache size\ndu -sh /var/cache/apt/archives/\n\n# Clean cache\nsudo apt autoclean  # Remove old package files\nsudo apt clean     # Remove all package files\n\n# Configure cache limit\necho 'APT::Cache-Limit \"100000000\";' | sudo tee /etc/apt/apt.conf.d/70cache-limit\n</code></pre>"},{"location":"ubuntu-software-installation/#parallel-downloads","title":"Parallel Downloads","text":"<pre><code># Enable parallel downloads for APT\necho 'APT::Acquire::Max-Workers \"4\";' | sudo tee /etc/apt/apt.conf.d/99parallel\n\n# Configure fastest mirror\nsudo apt install apt-fast\n</code></pre>"},{"location":"ubuntu-software-installation/#best-practices","title":"Best Practices","text":""},{"location":"ubuntu-software-installation/#regular-maintenance","title":"Regular Maintenance","text":"<pre><code># Weekly maintenance script\n#!/bin/bash\nsudo apt update\nsudo apt upgrade -y\nsudo apt autoremove -y\nsudo apt autoclean\nsudo snap refresh\nflatpak update -y\n</code></pre>"},{"location":"ubuntu-software-installation/#package-selection-guidelines","title":"Package Selection Guidelines","text":"<ol> <li>System integration: Use APT for system-level software</li> <li>Security: Use Flatpak/Snap for untrusted applications</li> <li>Portability: Use AppImage for portable tools</li> <li>Development: Use language-specific package managers when appropriate</li> </ol>"},{"location":"ubuntu-software-installation/#next-steps","title":"Next Steps","text":"<p>After mastering software installation:</p> <ol> <li>Learn system update management</li> <li>Configure user permissions</li> <li>Set up development environment</li> <li>Explore system monitoring</li> </ol>"},{"location":"ubuntu-software-installation/#summary","title":"Summary","text":"<p>Ubuntu's multiple package management systems provide flexibility for different use cases:</p> Use Case Recommended Method Example System tools APT <code>sudo apt install htop</code> Desktop apps Snap/Flatpak <code>snap install discord</code> Development Language managers <code>npm install -g package</code> Portable tools AppImage Download and run Latest versions PPA + APT Add PPA, then APT install <p>Understanding these different approaches allows you to choose the best installation method for each situation while maintaining system security and performance.</p>"},{"location":"ubuntu-terminal-basics/","title":"Basic Ubuntu Terminal Commands","text":""},{"location":"ubuntu-terminal-basics/#what-is-the-terminal","title":"What is the Terminal?","text":"<p>The terminal (also called command line, shell, or console) is a text-based interface for interacting with your Ubuntu system. While Ubuntu has a graphical interface, the terminal provides powerful tools for system administration, development, and automation.</p>"},{"location":"ubuntu-terminal-basics/#opening-the-terminal","title":"Opening the Terminal","text":""},{"location":"ubuntu-terminal-basics/#methods-to-access-terminal","title":"Methods to Access Terminal","text":"<ol> <li>Keyboard Shortcut: <code>Ctrl + Alt + T</code></li> <li>Activities Search: Press <code>Super</code> key, type \"terminal\"</li> <li>Applications Menu: Show Applications \u2192 Utilities \u2192 Terminal</li> <li>Right-click: Right-click on desktop \u2192 \"Open in Terminal\"</li> </ol>"},{"location":"ubuntu-terminal-basics/#terminal-interface-components","title":"Terminal Interface Components","text":"<pre><code>username@hostname:~/current/directory$ command\n    \u2502        \u2502              \u2502           \u2502\n    \u2502        \u2502              \u2502           \u2514\u2500\u2500 Command to execute\n    \u2502        \u2502              \u2514\u2500\u2500 Current working directory\n    \u2502        \u2514\u2500\u2500 Computer name\n    \u2514\u2500\u2500 Current user\n</code></pre> <p>Example: <pre><code>john@ubuntu-desktop:~/Documents$ ls\n</code></pre></p>"},{"location":"ubuntu-terminal-basics/#navigation-commands","title":"Navigation Commands","text":""},{"location":"ubuntu-terminal-basics/#understanding-the-file-system","title":"Understanding the File System","text":"<pre><code># Print current directory\npwd\n\n# List directory contents\nls\n\n# List with detailed information\nls -l\n\n# List including hidden files\nls -la\n\n# List with human-readable file sizes\nls -lh\n\n# Change directory\ncd /path/to/directory\n\n# Go to home directory\ncd ~\n# or simply\ncd\n\n# Go up one directory\ncd ..\n\n# Go to previous directory\ncd -\n\n# Go to root directory\ncd /\n</code></pre>"},{"location":"ubuntu-terminal-basics/#navigation-examples","title":"Navigation Examples","text":"<pre><code># Navigate to your home directory\ncd ~\n\n# Navigate to Documents folder\ncd Documents\n\n# Go back to previous directory\ncd ..\n\n# Navigate using absolute path\ncd /usr/local/bin\n\n# Navigate using relative path\ncd ../Downloads\n\n# Quick navigation to common directories\ncd ~/Desktop     # Desktop folder\ncd ~/Downloads   # Downloads folder\ncd ~/Pictures    # Pictures folder\n</code></pre>"},{"location":"ubuntu-terminal-basics/#file-and-directory-operations","title":"File and Directory Operations","text":""},{"location":"ubuntu-terminal-basics/#creating-files-and-directories","title":"Creating Files and Directories","text":"<pre><code># Create an empty file\ntouch filename.txt\n\n# Create multiple files\ntouch file1.txt file2.txt file3.txt\n\n# Create a directory\nmkdir directory_name\n\n# Create multiple directories\nmkdir dir1 dir2 dir3\n\n# Create nested directories\nmkdir -p parent/child/grandchild\n\n# Create directory with specific permissions\nmkdir -m 755 secure_directory\n</code></pre>"},{"location":"ubuntu-terminal-basics/#copying-files-and-directories","title":"Copying Files and Directories","text":"<pre><code># Copy a file\ncp source_file.txt destination_file.txt\n\n# Copy file to another directory\ncp file.txt ~/Documents/\n\n# Copy multiple files\ncp file1.txt file2.txt ~/Documents/\n\n# Copy directory and its contents\ncp -r source_directory destination_directory\n\n# Copy with verbose output\ncp -v file.txt ~/Documents/\n\n# Copy preserving attributes\ncp -p file.txt backup_file.txt\n</code></pre>"},{"location":"ubuntu-terminal-basics/#moving-and-renaming","title":"Moving and Renaming","text":"<pre><code># Move/rename a file\nmv old_name.txt new_name.txt\n\n# Move file to another directory\nmv file.txt ~/Documents/\n\n# Move multiple files\nmv file1.txt file2.txt ~/Documents/\n\n# Move directory\nmv old_directory new_directory\n\n# Move with confirmation\nmv -i file.txt ~/Documents/\n</code></pre>"},{"location":"ubuntu-terminal-basics/#deleting-files-and-directories","title":"Deleting Files and Directories","text":"<pre><code># Remove a file\nrm filename.txt\n\n# Remove multiple files\nrm file1.txt file2.txt file3.txt\n\n# Remove with confirmation\nrm -i filename.txt\n\n# Remove directory and contents\nrm -r directory_name\n\n# Force remove (be careful!)\nrm -f filename.txt\n\n# Force remove directory and contents (DANGEROUS!)\nrm -rf directory_name\n\n# Remove empty directory\nrmdir empty_directory\n</code></pre>"},{"location":"ubuntu-terminal-basics/#file-content-operations","title":"File Content Operations","text":""},{"location":"ubuntu-terminal-basics/#viewing-file-contents","title":"Viewing File Contents","text":"<pre><code># Display entire file\ncat filename.txt\n\n# Display file with line numbers\ncat -n filename.txt\n\n# View file page by page\nless filename.txt\n# Navigation in less: Space (next page), b (previous page), q (quit)\n\n# Alternative pager\nmore filename.txt\n\n# Display first 10 lines\nhead filename.txt\n\n# Display first N lines\nhead -n 20 filename.txt\n\n# Display last 10 lines\ntail filename.txt\n\n# Display last N lines\ntail -n 15 filename.txt\n\n# Follow file changes (useful for logs)\ntail -f /var/log/syslog\n</code></pre>"},{"location":"ubuntu-terminal-basics/#creating-and-editing-files","title":"Creating and Editing Files","text":"<pre><code># Create file with content using echo\necho \"Hello, World!\" &gt; hello.txt\n\n# Append content to file\necho \"Second line\" &gt;&gt; hello.txt\n\n# Create file using cat (Ctrl+D to save)\ncat &gt; newfile.txt\nThis is the content\nPress Ctrl+D to save\n\n# Edit file with nano (beginner-friendly)\nnano filename.txt\n\n# Edit file with vim (advanced)\nvim filename.txt\n\n# Edit file with gedit (GUI editor)\ngedit filename.txt\n</code></pre>"},{"location":"ubuntu-terminal-basics/#searching-in-files","title":"Searching in Files","text":"<pre><code># Search for pattern in file\ngrep \"pattern\" filename.txt\n\n# Search case-insensitively\ngrep -i \"pattern\" filename.txt\n\n# Search recursively in directories\ngrep -r \"pattern\" /path/to/directory\n\n# Search and show line numbers\ngrep -n \"pattern\" filename.txt\n\n# Search for whole words only\ngrep -w \"word\" filename.txt\n\n# Search for multiple patterns\ngrep -E \"pattern1|pattern2\" filename.txt\n\n# Count matching lines\ngrep -c \"pattern\" filename.txt\n</code></pre>"},{"location":"ubuntu-terminal-basics/#file-permissions-and-ownership","title":"File Permissions and Ownership","text":""},{"location":"ubuntu-terminal-basics/#understanding-permissions","title":"Understanding Permissions","text":"<pre><code>-rwxrwxrwx\n\u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2502\u2502\n\u2502\u2502\u2502\u2514\u252c\u2518\u2514\u252c\u2518\n\u2502\u2502\u2502 \u2502  \u2514\u2500\u2500 Others permissions (read, write, execute)\n\u2502\u2502\u2502 \u2514\u2500\u2500\u2500\u2500 Group permissions (read, write, execute)\n\u2502\u2514\u252c\u2500\u2500\u2500\u2500\u2500\u2500 Owner permissions (read, write, execute)\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500 File type (- for file, d for directory)\n</code></pre>"},{"location":"ubuntu-terminal-basics/#permission-values","title":"Permission Values","text":"Permission Symbol Numeric Read r 4 Write w 2 Execute x 1 <p>Common combinations: - <code>755</code> = rwxr-xr-x (Owner: read+write+execute, Group: read+execute, Others: read+execute) - <code>644</code> = rw-r--r-- (Owner: read+write, Group: read, Others: read) - <code>600</code> = rw------- (Owner: read+write, Group: none, Others: none)</p>"},{"location":"ubuntu-terminal-basics/#changing-permissions","title":"Changing Permissions","text":"<pre><code># Change permissions using symbolic notation\nchmod u+x filename.txt    # Add execute for owner\nchmod g-w filename.txt    # Remove write for group\nchmod o+r filename.txt    # Add read for others\nchmod a+x filename.txt    # Add execute for all\n\n# Change permissions using numeric notation\nchmod 755 filename.txt    # rwxr-xr-x\nchmod 644 filename.txt    # rw-r--r--\nchmod 600 filename.txt    # rw-------\n\n# Change permissions recursively\nchmod -R 755 directory/\n</code></pre>"},{"location":"ubuntu-terminal-basics/#changing-ownership","title":"Changing Ownership","text":"<pre><code># Change file owner\nsudo chown username filename.txt\n\n# Change file owner and group\nsudo chown username:groupname filename.txt\n\n# Change ownership recursively\nsudo chown -R username:groupname directory/\n\n# Change only group\nsudo chgrp groupname filename.txt\n</code></pre>"},{"location":"ubuntu-terminal-basics/#system-information-commands","title":"System Information Commands","text":""},{"location":"ubuntu-terminal-basics/#system-status","title":"System Status","text":"<pre><code># Display system information\nuname -a\n\n# Display operating system information\nlsb_release -a\n\n# Show current user\nwhoami\n\n# Show current user ID\nid\n\n# Display system uptime\nuptime\n\n# Show system date and time\ndate\n\n# Show calendar\ncal\n\n# Show users currently logged in\nwho\n\n# Show what users are doing\nw\n</code></pre>"},{"location":"ubuntu-terminal-basics/#resource-monitoring","title":"Resource Monitoring","text":"<pre><code># Display running processes\nps aux\n\n# Interactive process viewer\ntop\n\n# Better process viewer (if installed)\nhtop\n\n# Display memory usage\nfree -h\n\n# Display disk usage\ndf -h\n\n# Display directory size\ndu -h directory/\n\n# Display directory size summary\ndu -sh directory/\n\n# Monitor system resources\niostat\nvmstat\n</code></pre>"},{"location":"ubuntu-terminal-basics/#hardware-information","title":"Hardware Information","text":"<pre><code># List PCI devices\nlspci\n\n# List USB devices\nlsusb\n\n# List block devices (storage)\nlsblk\n\n# CPU information\nlscpu\n\n# Memory information\ncat /proc/meminfo\n\n# Hardware information\nsudo lshw\n\n# Hardware summary\nsudo lshw -short\n</code></pre>"},{"location":"ubuntu-terminal-basics/#package-management","title":"Package Management","text":""},{"location":"ubuntu-terminal-basics/#apt-commands","title":"APT Commands","text":"<pre><code># Update package lists\nsudo apt update\n\n# Upgrade installed packages\nsudo apt upgrade\n\n# Full system upgrade\nsudo apt full-upgrade\n\n# Install package\nsudo apt install package-name\n\n# Install multiple packages\nsudo apt install package1 package2 package3\n\n# Remove package\nsudo apt remove package-name\n\n# Remove package and configuration files\nsudo apt purge package-name\n\n# Remove orphaned packages\nsudo apt autoremove\n\n# Search for packages\napt search keyword\n\n# Show package information\napt show package-name\n\n# List installed packages\napt list --installed\n\n# List upgradable packages\napt list --upgradable\n</code></pre>"},{"location":"ubuntu-terminal-basics/#package-information","title":"Package Information","text":"<pre><code># Check if package is installed\ndpkg -l | grep package-name\n\n# List files installed by package\ndpkg -L package-name\n\n# Find which package provides a file\ndpkg -S /path/to/file\n\n# Show package dependencies\napt depends package-name\n\n# Show reverse dependencies\napt rdepends package-name\n</code></pre>"},{"location":"ubuntu-terminal-basics/#network-commands","title":"Network Commands","text":""},{"location":"ubuntu-terminal-basics/#network-information","title":"Network Information","text":"<pre><code># Display network interfaces\nip addr show\n# or\nifconfig\n\n# Display routing table\nip route show\n# or\nroute -n\n\n# Test network connectivity\nping google.com\n\n# Test specific port connectivity\ntelnet hostname port\n\n# Download files from internet\nwget http://example.com/file.zip\n\n# Alternative download tool\ncurl -O http://example.com/file.zip\n\n# Display network connections\nnetstat -tuln\n\n# Show listening ports\nss -tuln\n</code></pre>"},{"location":"ubuntu-terminal-basics/#network-configuration","title":"Network Configuration","text":"<pre><code># Bring interface up\nsudo ip link set interface_name up\n\n# Bring interface down\nsudo ip link set interface_name down\n\n# Restart network service\nsudo systemctl restart networking\n\n# Flush DNS cache\nsudo systemd-resolve --flush-caches\n\n# Show DNS configuration\nsystemd-resolve --status\n</code></pre>"},{"location":"ubuntu-terminal-basics/#process-management","title":"Process Management","text":""},{"location":"ubuntu-terminal-basics/#process-control","title":"Process Control","text":"<pre><code># Start process in background\ncommand &amp;\n\n# List background jobs\njobs\n\n# Bring background job to foreground\nfg %1\n\n# Send job to background\nbg %1\n\n# Kill process by PID\nkill PID\n\n# Kill process forcefully\nkill -9 PID\n\n# Kill process by name\nkillall process-name\n\n# Kill all processes matching pattern\npkill pattern\n</code></pre>"},{"location":"ubuntu-terminal-basics/#service-management","title":"Service Management","text":"<pre><code># Check service status\nsudo systemctl status service-name\n\n# Start service\nsudo systemctl start service-name\n\n# Stop service\nsudo systemctl stop service-name\n\n# Restart service\nsudo systemctl restart service-name\n\n# Enable service at boot\nsudo systemctl enable service-name\n\n# Disable service at boot\nsudo systemctl disable service-name\n\n# List all services\nsystemctl list-units --type=service\n\n# List failed services\nsystemctl --failed\n</code></pre>"},{"location":"ubuntu-terminal-basics/#archive-and-compression","title":"Archive and Compression","text":""},{"location":"ubuntu-terminal-basics/#creating-archives","title":"Creating Archives","text":"<pre><code># Create tar archive\ntar -cvf archive.tar files/\n\n# Create compressed tar archive (gzip)\ntar -czvf archive.tar.gz files/\n\n# Create compressed tar archive (bzip2)\ntar -cjvf archive.tar.bz2 files/\n\n# Create zip archive\nzip -r archive.zip files/\n</code></pre>"},{"location":"ubuntu-terminal-basics/#extracting-archives","title":"Extracting Archives","text":"<pre><code># Extract tar archive\ntar -xvf archive.tar\n\n# Extract compressed tar archive (gzip)\ntar -xzvf archive.tar.gz\n\n# Extract compressed tar archive (bzip2)\ntar -xjvf archive.tar.bz2\n\n# Extract to specific directory\ntar -xzvf archive.tar.gz -C /path/to/directory\n\n# Extract zip archive\nunzip archive.zip\n\n# List archive contents without extracting\ntar -tzvf archive.tar.gz\nzip -l archive.zip\n</code></pre>"},{"location":"ubuntu-terminal-basics/#text-processing","title":"Text Processing","text":""},{"location":"ubuntu-terminal-basics/#text-manipulation","title":"Text Manipulation","text":"<pre><code># Sort lines in file\nsort filename.txt\n\n# Sort and remove duplicates\nsort -u filename.txt\n\n# Remove duplicate lines\nuniq filename.txt\n\n# Count lines, words, characters\nwc filename.txt\n\n# Count only lines\nwc -l filename.txt\n\n# Cut specific columns\ncut -d',' -f1,3 file.csv\n\n# Find and replace text\nsed 's/old/new/g' filename.txt\n\n# Replace text in-place\nsed -i 's/old/new/g' filename.txt\n</code></pre>"},{"location":"ubuntu-terminal-basics/#advanced-text-processing","title":"Advanced Text Processing","text":"<pre><code># Process text with awk\nawk '{print $1}' filename.txt\n\n# Print specific columns\nawk '{print $1, $3}' filename.txt\n\n# Filter and process\nawk '$3 &gt; 100 {print $1, $3}' data.txt\n\n# Compare files\ndiff file1.txt file2.txt\n\n# Compare directories\ndiff -r dir1/ dir2/\n</code></pre>"},{"location":"ubuntu-terminal-basics/#inputoutput-redirection","title":"Input/Output Redirection","text":""},{"location":"ubuntu-terminal-basics/#redirection-operators","title":"Redirection Operators","text":"<pre><code># Redirect output to file\ncommand &gt; output.txt\n\n# Append output to file\ncommand &gt;&gt; output.txt\n\n# Redirect error to file\ncommand 2&gt; error.txt\n\n# Redirect both output and error\ncommand &gt; output.txt 2&gt;&amp;1\n\n# Redirect to null (discard)\ncommand &gt; /dev/null\n\n# Pipe output to another command\ncommand1 | command2\n\n# Pipe with tee (output to file and screen)\ncommand | tee output.txt\n</code></pre>"},{"location":"ubuntu-terminal-basics/#practical-examples","title":"Practical Examples","text":"<pre><code># Save directory listing to file\nls -la &gt; directory_listing.txt\n\n# Search and save results\ngrep \"error\" /var/log/syslog &gt; errors.txt\n\n# Count files in directory\nls | wc -l\n\n# Find largest files\nls -la | sort -k5 -nr | head -10\n\n# Monitor log file with filter\ntail -f /var/log/syslog | grep \"error\"\n</code></pre>"},{"location":"ubuntu-terminal-basics/#environment-variables","title":"Environment Variables","text":""},{"location":"ubuntu-terminal-basics/#working-with-environment-variables","title":"Working with Environment Variables","text":"<pre><code># Display all environment variables\nenv\n\n# Display specific variable\necho $HOME\necho $PATH\necho $USER\n\n# Set temporary variable\nexport MY_VAR=\"value\"\n\n# Add to PATH\nexport PATH=$PATH:/new/path\n\n# Make permanent (add to ~/.bashrc)\necho 'export MY_VAR=\"value\"' &gt;&gt; ~/.bashrc\nsource ~/.bashrc\n</code></pre>"},{"location":"ubuntu-terminal-basics/#common-environment-variables","title":"Common Environment Variables","text":"Variable Description Example <code>$HOME</code> User's home directory <code>/home/username</code> <code>$PATH</code> Executable search path <code>/usr/bin:/bin:/usr/local/bin</code> <code>$USER</code> Current username <code>username</code> <code>$PWD</code> Current working directory <code>/home/username/Documents</code> <code>$SHELL</code> Current shell <code>/bin/bash</code>"},{"location":"ubuntu-terminal-basics/#command-history-and-shortcuts","title":"Command History and Shortcuts","text":""},{"location":"ubuntu-terminal-basics/#command-history","title":"Command History","text":"<pre><code># Show command history\nhistory\n\n# Show last N commands\nhistory 10\n\n# Search command history\nhistory | grep \"command\"\n\n# Execute command from history\n!123        # Execute command number 123\n!!          # Execute last command\n!string     # Execute last command starting with 'string'\n</code></pre>"},{"location":"ubuntu-terminal-basics/#keyboard-shortcuts","title":"Keyboard Shortcuts","text":"Shortcut Action <code>Ctrl + C</code> Cancel current command <code>Ctrl + D</code> Exit shell/logout <code>Ctrl + Z</code> Suspend current process <code>Ctrl + L</code> Clear screen <code>Ctrl + A</code> Move to beginning of line <code>Ctrl + E</code> Move to end of line <code>Ctrl + U</code> Delete from cursor to beginning <code>Ctrl + K</code> Delete from cursor to end <code>Ctrl + R</code> Search command history <code>Tab</code> Auto-complete <code>Tab Tab</code> Show all possibilities"},{"location":"ubuntu-terminal-basics/#getting-help","title":"Getting Help","text":""},{"location":"ubuntu-terminal-basics/#help-commands","title":"Help Commands","text":"<pre><code># Show command manual\nman command\n\n# Show command help\ncommand --help\n\n# Show brief description\nwhatis command\n\n# Search manual pages\napropos keyword\n\n# Show command location\nwhich command\n\n# Show command type\ntype command\n\n# Get info about command\ninfo command\n</code></pre>"},{"location":"ubuntu-terminal-basics/#common-command-combinations","title":"Common Command Combinations","text":""},{"location":"ubuntu-terminal-basics/#useful-one-liners","title":"Useful One-liners","text":"<pre><code># Find and delete files older than 30 days\nfind /path -type f -mtime +30 -delete\n\n# Show disk usage of current directory, sorted\ndu -h | sort -hr\n\n# Find largest directories\ndu -h --max-depth=1 | sort -hr\n\n# Monitor system load\nwatch -n 1 'uptime'\n\n# Show network connections with process names\nsudo netstat -tulpn\n\n# Find processes using most memory\nps aux --sort=-%mem | head\n\n# Find files containing text\nfind /path -type f -exec grep -l \"text\" {} \\;\n\n# Count files by extension\nfind . -type f | sed 's/.*\\.//' | sort | uniq -c | sort -nr\n</code></pre>"},{"location":"ubuntu-terminal-basics/#terminal-best-practices","title":"Terminal Best Practices","text":""},{"location":"ubuntu-terminal-basics/#safety-tips","title":"Safety Tips","text":"<ol> <li> <p>Always double-check destructive commands <pre><code># Use -i flag for confirmation\nrm -i important_file.txt\ncp -i source dest\n</code></pre></p> </li> <li> <p>Use tab completion to avoid typos <pre><code># Type partial command and press Tab\ncd Doc&lt;Tab&gt;  # Expands to Documents/\n</code></pre></p> </li> <li> <p>Test commands on sample data first <pre><code># Test regex on small file before applying to large dataset\ngrep \"pattern\" small_file.txt\n</code></pre></p> </li> <li> <p>Keep backups of important files <pre><code>cp important_file.txt important_file.txt.backup\n</code></pre></p> </li> </ol>"},{"location":"ubuntu-terminal-basics/#productivity-tips","title":"Productivity Tips","text":"<ol> <li> <p>Use aliases for frequent commands <pre><code>alias ll='ls -la'\nalias la='ls -A'\nalias l='ls -CF'\n</code></pre></p> </li> <li> <p>Use command substitution <pre><code># Use output of one command in another\necho \"Today is $(date)\"\ncd $(dirname $(which python))\n</code></pre></p> </li> <li> <p>Chain commands efficiently <pre><code># Execute second command only if first succeeds\nmake &amp;&amp; make install\n\n# Execute second command only if first fails\ntest -f file.txt || touch file.txt\n</code></pre></p> </li> </ol>"},{"location":"ubuntu-terminal-basics/#next-steps","title":"Next Steps","text":"<p>After mastering basic terminal commands:</p> <ol> <li>Learn file and folder management</li> <li>Understand user and permissions</li> <li>Explore software installation</li> <li>Set up development environment</li> </ol>"},{"location":"ubuntu-terminal-basics/#summary","title":"Summary","text":"<p>The terminal is a powerful tool that becomes more valuable as you learn to use it effectively. Start with basic commands and gradually build your skills:</p> Skill Level Focus Areas Beginner Navigation, file operations, basic text viewing Intermediate Permissions, process management, text processing Advanced Scripting, automation, system administration <p>Remember: The terminal might seem intimidating at first, but with practice, it becomes an indispensable tool for efficient system management and development work.</p>"},{"location":"untitledfromwyswyg/","title":"untitle-from-wysiwyg","text":"<p>This page was created by live-edit.</p> <p>hello</p>"},{"location":"when-you-bored/","title":"When You Bored","text":"<p>If You confused about what to read next, here are some interesting pages.</p>"},{"location":"wsl/","title":"WSL","text":""},{"location":"wsl/#run-instance","title":"Run Instance","text":"<p><pre><code>wsl --distribution &lt;distribution name&gt;\n</code></pre> or <pre><code>wsl -d &lt;distribution name&gt;\n</code></pre></p>"},{"location":"wsl/#export-instance","title":"Export Instance","text":"<pre><code>wsl --export &lt;distribution name&gt; &lt;path to tar file&gt;\n</code></pre>"},{"location":"wsl/#import-instance","title":"Import Instance","text":"<pre><code>wsl --import &lt;distribution name&gt; &lt;path to install location&gt; &lt;path to tar file&gt;\n</code></pre>"},{"location":"wsl/#unregister-instance","title":"Unregister Instance","text":"<pre><code>wsl --unregister &lt;distribution name&gt;\n</code></pre>"},{"location":"blog/","title":"Blog","text":""}]}
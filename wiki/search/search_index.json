{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>This wiki is a collection of my personal notes, tutorials, and projects. One of the goals in establishing this wiki is to document the projects I am currently undertaking or researching.</p> <p>Not only that, but you can also find various programming tutorials, both basic and advanced, on this wiki. The next step is to visit the Table of Content to see the list of available articles. You can contribute to enriching the content of this wiki. You can register and create an account at this registration link.</p> <p>All resources you access on this wiki are free and open source.</p> <p>Provide feedback to me in developing this wiki.</p> <p>Visit the Table of Content to see the list of available articles.</p> <p>Some articles are quite useful,</p> <ul> <li>C#</li> <li>Docker</li> <li>Github</li> <li>Programming Language</li> <li>Ubuntu</li> </ul> <p>Go to see list of Table of Content.</p>"},{"location":"content-list/","title":"Content List","text":"<ul> <li>Cheat Sheets</li> <li>Content List</li> <li>C# Basic</li> <li>C#</li> <li>Dicoding Machine Learning</li> <li>Docker</li> <li>.Net Clean Architecture</li> <li>.Net Logging Tutorial</li> <li>.Net Microservices</li> <li>.Net Nuget</li> <li>.Net Package</li> <li>.Net Starter</li> <li>.Net Webapi</li> <li>.Net</li> <li>Golang Microservices</li> <li>Index</li> <li>Material Mkdocs Yml</li> <li>Mysql</li> <li>Postgresql</li> <li>Python</li> <li>Tips And Tricks</li> <li>Underrated Tools</li> <li>When You Bored</li> <li>Wsl</li> </ul>"},{"location":"csharp/","title":"C","text":"<p>List of content</p> <ul> <li>C# - Basic</li> </ul>"},{"location":"csharp/#c-advance","title":"C# Advance","text":"<ul> <li>C# - List</li> <li>C# - Array</li> <li>C# - Inheritance</li> <li>C# - Polymorphism</li> <li>C# - Abstraction</li> <li>C# - Encapsulation</li> <li>C# - Interface</li> <li>C# - Events</li> <li>C# - Exception Handling</li> <li>C# - File Handling</li> <li>C# - Serialization</li> <li>C# - LINQ</li> <li>C# - Generics</li> <li>C# - Lambda Expressions</li> <li>C# - Async/Await</li> <li>C# - Threading</li> <li>C# - WPF</li> </ul>"},{"location":"csharp/#relate-pages","title":"Relate Pages","text":"<ul> <li>.NET</li> <li>.NET Cheatsheet</li> </ul>"},{"location":"dicoding-machine-learning/","title":"Dicoding Machine Learning - ID Camp","text":"<p>There are several project (apps development or learning path) that I  am currently working on. These projects are not yet complete and are still in the process of development.</p>"},{"location":"docker/","title":"Docker","text":"<p>Docker is an open platform for developing, shipping, and running applications. Docker enables you to separate your applications from your infrastructure so you can deliver software quickly. With Docker, you can manage your infrastructure in the same ways you manage your applications. By taking advantage of Docker's methodologies for shipping, testing, and deploying code, you can significantly reduce the delay between writing code and running it in production.</p>"},{"location":"docker/#show-all-images","title":"Show All Images","text":"<pre><code>docker images\n</code></pre>"},{"location":"docker/#show-container","title":"Show Container","text":"<pre><code>docker ps\n</code></pre> <p>show all container both active &amp; inactive</p> <pre><code>docker ps -a\n</code></pre>"},{"location":"docker/#build","title":"Build","text":"<pre><code>docker build -t &lt;image_name&gt;:&lt;tag_version&gt; .\n</code></pre>"},{"location":"docker/#run-container","title":"Run Container","text":"<pre><code>docker run -d --name container_name &lt;image_name&gt;:&lt;tag_version&gt;\n</code></pre> <p>with port mapping</p> <pre><code>docker run -d -p &lt;host_port&gt;:&lt;container_port&gt; --name container_name &lt;image_name&gt;:&lt;tag_version&gt;\n</code></pre>"},{"location":"docker/#stop-container","title":"Stop Container","text":"<pre><code>docker stop CONTAINER_ID\n</code></pre>"},{"location":"docker/#start-container","title":"Start Container","text":"<pre><code>docker start CONTAINER_ID\n</code></pre>"},{"location":"docker/#restart-container","title":"Restart Container","text":"<pre><code>docker restart CONTAINER_NAME_OR_ID\n</code></pre>"},{"location":"docker/#delete-image","title":"Delete Image","text":"<pre><code>docker rmi IMAGE_ID\n</code></pre> <p>with force method</p> <pre><code>docker rmi -f IMAGE_ID\n</code></pre>"},{"location":"docker/#delete-container","title":"Delete Container","text":"<pre><code>docker rm CONTAINER_ID\n</code></pre> <p>with force method</p> <pre><code>docker rm -f CONTAINER_ID\n</code></pre>"},{"location":"dotnet-cheatsheet/","title":".NET CheatSheet","text":""},{"location":"dotnet-cheatsheet/#add-project-references","title":"Add project references","text":"<pre><code>dotnet add reference path_to_reference_csproj\n</code></pre>"},{"location":"dotnet-clean-architecture/","title":"Dotnet clean architecture","text":"<p>when create user features</p> <ul> <li>Response</li> <li>Request</li> <li>Mapper</li> <li>Handler</li> <li>Project Creation</li> <li></li> </ul>"},{"location":"dotnet-package/","title":".NET Package","text":""},{"location":"dotnet-package/#add-package","title":"Add Package","text":"<pre><code>dotnet add package &lt;PackageName&gt;\n</code></pre>"},{"location":"dotnet-ping-pong-api/","title":"Dotnet ping pong api","text":"<pre><code>dotnet new web -n PingPongAPI --framework net8.0\n</code></pre> <p>code : </p> <pre><code>var builder = WebApplication.CreateBuilder(args);\nvar app = builder.Build();\n\napp.MapGet(\"/ping\", () =&gt; Results.Ok(\"pong\"));\n\napp.Run();\n</code></pre>"},{"location":"dotnet-project-creation/","title":"Dotnet project creation","text":"<p>For microservices purpose there.</p>"},{"location":"dotnet-project-creation/#references","title":"References","text":"<ul> <li>https://medium.com/codex/building-microservices-with-net-core-a-comprehensive-guide-804c60a85f3a</li> </ul>"},{"location":"dotnet-starter/","title":".Net Starter","text":""},{"location":"dotnet-starter/#create-net-project","title":"Create .NET Project","text":""},{"location":"dotnet-starter/#console-based-application","title":"Console Based Application","text":"<pre><code>dotnet new console -n AppName\n</code></pre> <p>or </p> <pre><code>dotnet new console --name AppName\n</code></pre>"},{"location":"dotnet-starter/#web-based-application","title":"Web Based Application","text":"<pre><code>dotnet new web -n AppName\n</code></pre> <p>or </p> <pre><code>dotnet new web --name AppName\n</code></pre>"},{"location":"dotnet-starter/#mvc-web-application","title":"MVC Web Application","text":"<pre><code>dotnet new mvc -n AppName\n</code></pre> <p>or  ``` dotnet new mvc --name AppName</p>"},{"location":"dotnet-webapi/","title":".Net Web API","text":""},{"location":"dotnet-webapi/#install-entity-framework-core-tools","title":"install Entity Framework Core Tools","text":"<pre><code>dotnet tool install --global dotnet-ef\n</code></pre>"},{"location":"dotnet-webapi/#insall-entity-net-framework","title":"Insall Entity .NET Framework","text":"<pre><code>dotnet add package MySql.Data\ndotnet add package Pomelo.EntityFrameworkCore.MySql\ndotnet add package Microsoft.EntityFrameworkCore.Tools\n\n</code></pre>"},{"location":"dotnet-webapi/#migration","title":"Migration","text":"<pre><code>dotnet ef migrations add InitialCreate\ndotnet ef database update\n</code></pre>"},{"location":"dotnet-webapi/#run","title":"Run","text":"<pre><code>dotnet run\n</code></pre>"},{"location":"dotnet-webapi/#build","title":"Build","text":"<pre><code>dotnet build\n</code></pre>"},{"location":"dotnet-webapi/#create-gitignore","title":"Create .gitignore","text":"<pre><code>dotnet new gitignore\n</code></pre> <p>Read :  - Create PingPing API</p>"},{"location":"dotnet/","title":".NET","text":"<ul> <li>.NET Starter</li> <li>.NET WebApi Best Practice</li> <li>.NET Package</li> <li>.NET Nuget Packages</li> </ul>"},{"location":"kubernetes-deploy-application/","title":"Kubernetes deploy application","text":""},{"location":"kubernetes-deploy-application/#service","title":"Service","text":"<p>Create a sample deployment and expose it on port 8080:</p> <pre><code>kubectl create deployment hello-minikube --image=kicbase/echo-server:1.0\nkubectl expose deployment hello-minikube --type=NodePort --port=8080\n</code></pre> <p>Copy</p> <p>It may take a moment, but your deployment will soon show up when you run:</p> <pre><code>kubectl get services hello-minikube\n</code></pre> <p>Copy</p> <p>The easiest way to access this service is to let minikube launch a web browser for you:</p> <pre><code>minikube service hello-minikube\n</code></pre> <p>Copy</p> <p>Alternatively, use kubectl to forward the port:</p> <pre><code>kubectl port-forward service/hello-minikube 7080:8080\n</code></pre> <p>Copy</p> <p>Tada! Your application is now available at\u00a0http://localhost:7080/.</p> <p>You should be able to see the request metadata in the application output. Try changing the path of the request and observe the changes. Similarly, you can do a POST request and observe the body show up in the output.</p>"},{"location":"kubernetes-installation/","title":"Kubernetes Installation","text":""},{"location":"kubernetes-installation/#windows","title":"\ud83e\ude9fWindows","text":"<pre><code>curl.exe -LO \"https://dl.k8s.io/release/v1.32.0/bin/windows/amd64/kubectl.exe\"\n</code></pre>"},{"location":"kubernetes-installation/#validate-installation-optional","title":"Validate installation (optional)","text":"<pre><code>curl.exe -LO \"https://dl.k8s.io/v1.32.0/bin/windows/amd64/kubectl.exe.sha256\"\n</code></pre> <pre><code>CertUtil -hashfile kubectl.exe SHA256\ntype kubectl.exe.sha256\n</code></pre>"},{"location":"kubernetes-start-locally-windows/","title":"Kubernetes start locally windows","text":""},{"location":"kubernetes-start-locally-windows/#prerequisite-installation","title":"Prerequisite Installation","text":"<p>Sebelum install Minikube, pastikan:</p> <ul> <li>Virtualization diaktifkan (Cek di Task Manager \u2192 Performance \u2192 CPU \u2192 Virtualization: Enabled).</li> <li>Hyper-V atau Docker Desktop sudah terinstal (pilih salah satu sebagai driver Minikube).</li> </ul> <p>Jika belum ada Docker Desktop, kamu bisa aktifkan Hyper-V:</p> <pre><code>Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V-All -NoRestart\n</code></pre>"},{"location":"kubernetes-start-locally-windows/#install-minikube","title":"Install Minikube","text":"<pre><code>winget install Kubernetes.minikube\n</code></pre>"},{"location":"kubernetes-start-locally-windows/#start-your-cluster","title":"Start your cluster","text":"<pre><code>minikube start\n</code></pre>"},{"location":"kubernetes-start-locally-windows/#interact-with-your-cluster","title":"Interact with your cluster","text":"<pre><code>minikube start\n</code></pre> <pre><code>minikube dashboard\n</code></pre>"},{"location":"material-mkdocs-yml/","title":"Material mkdocs yml","text":"<p>on:   push:     branches:       - main  </p> <p>jobs:   deploy:     runs-on: ubuntu-latest</p> <pre><code>steps:\n  - name: Checkout repository\n    uses: actions/checkout@v3\n\n  - name: Set up Python\n    uses: actions/setup-python@v4\n    with:\n      python-version: '3.12'\n\n  - name: Install MkDocs and Material\n    run: |\n      pip install mkdocs mkdocs-material\n\n  - name: Build MkDocs\n    run: mkdocs build\n\n  - name: Move build to docs folder\n    run: |\n      rm -rf docs/*  \n      cp -r site/* docs/\n\n  - name: Commit and push changes\n    run: |\n      git config user.name \"maulanaaghnii\"\n      git config user.email \"maulanaaghni.contact@gmail.com\"  # Ganti dengan alamat email kamu\n      git add -f docs/*  \n      git commit -m \"Deploy MkDocs site\" || echo \"No changes to commit\"\n      git push -f https://$PAT_TOKEN@github.com/maulanaaghnii/maulanaaghnii.github.io.git main\n    env:\n      PAT_TOKEN: ${{ secrets.PAT_TOKEN }}\n</code></pre>"},{"location":"mysql/","title":"Uninstall MySQL","text":"<pre><code>sudo systemctl stop mysql\n\nsudo apt-get remove --purge mysql-server mysql-client mysql-common mysql-server-core-* mysql-client-core-* -y\n\nsudo rm -rf /etc/mysql /var/lib/mysql\n\nsudo rm -rf /var/log/mysql\n\nsudo apt-get autoremove\n\nsudo apt-get autoclean\n</code></pre>"},{"location":"mysql/#install-mysql","title":"Install Mysql","text":"<pre><code>CREATE USER 'new_user'@'localhost' IDENTIFIED BY 'password123';\n\nGRANT ALL PRIVILEGES ON *.* TO 'new_user'@'localhost' WITH GRANT OPTION;\n\nFLUSH PRIVILEGES;\n\nEXIT;\n\n</code></pre>"},{"location":"mysql/#create-new-user-with-grant","title":"Create New User With GRANT","text":"<pre><code>CREATE USER 'new_user'@'%' IDENTIFIED BY 'new_user_password';\n\nGRANT ALL PRIVILEGES ON *.* TO 'new_user'@'%';\n\nFLUSH PRIVILEGES;\n\n</code></pre>"},{"location":"postgresql/","title":"PostgreSQL","text":""},{"location":"postgresql/#postgresql-group-concat-equivalent","title":"PostgreSQL Group Concat equivalent","text":"<pre><code>select string_agg(column_name, ', ') from table_name;\n</code></pre>"},{"location":"when-you-bored/","title":"When You Bored","text":"<p>If You confused about what to read next, here are some interesting pages.</p>"},{"location":"wsl/","title":"WSL","text":""},{"location":"wsl/#run-instance","title":"Run Instance","text":"<pre><code>wsl --distribution &lt;distribution name&gt;\n</code></pre> <p>or</p> <pre><code>wsl -d &lt;distribution name&gt;\n</code></pre>"},{"location":"wsl/#export-instance","title":"Export Instance","text":"<pre><code>wsl --export &lt;distribution name&gt; &lt;path to tar file&gt;\n</code></pre>"},{"location":"wsl/#import-instance","title":"Import Instance","text":"<pre><code>wsl --import &lt;distribution name&gt; &lt;path to install location&gt; &lt;path to tar file&gt;\n</code></pre>"},{"location":"wsl/#unregister-instance","title":"Unregister Instance","text":"<pre><code>wsl --unregister &lt;distribution name&gt;\n</code></pre>"}]}